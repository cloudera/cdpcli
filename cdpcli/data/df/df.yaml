x-generated: Automatically generated by CDP protoc plugin. Do not edit manually.
swagger: '2.0'
x-endpoint-name: df
x-products: CDP
x-form-factors: public
x-cdp-releases: PUBLIC
info:
  version: 0.9.99
  title: Cloudera DataFlow Service
  license:
    name: Apache 2.0
  description: Manage DataFlow Services.
  termsOfService: https://www.cloudera.com/legal/commercial-terms-and-conditions.html
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/df/addReadyflow:
    post:
      summary: Add ready flow.
      description: Adds the specified ready flow into this account.
      operationId: addReadyflow
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddReadyflowRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AddReadyflowResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/deleteAddedReadyflow:
    post:
      summary: Delete added ready flow.
      description: Deletes the specified added ready flow from this account.
      operationId: deleteAddedReadyflow
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAddedReadyflowRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteAddedReadyflowResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/deleteFlow:
    post:
      summary: Delete flow.
      description: Deletes the specified flow.
      operationId: deleteFlow
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFlowRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteFlowResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/describeAddedReadyflow:
    post:
      summary: Describe added ready flow detail.
      description: Gets the details for the specified ready flow as added by the current account.
      operationId: describeAddedReadyflow
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAddedReadyflowRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeAddedReadyflowResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/describeDeployment:
    post:
      summary: Describe deployment.
      description: Describes a deployment
      operationId: describeDeployment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/describeDeploymentEventDetail:
    post:
      summary: Describe event detail for deployment.
      description: Describe event detail for deployment.
      operationId: describeDeploymentEventDetail
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDeploymentEventDetailRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeDeploymentEventDetailResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/describeFlow:
    post:
      summary: Describe flow.
      description: Gets the details for the specified flow.
      operationId: describeFlow
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFlowRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeFlowResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/describeReadyflow:
    post:
      summary: Describe ready flow.
      description: Gets the details for the specified ready flow.
      operationId: describeReadyflow
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeReadyflowRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeReadyflowResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/describeService:
    post:
      summary: Describe service.
      description: Describes service.
      operationId: describeService
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeServiceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeServiceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/describeServiceEventDetail:
    post:
      summary: Describe event history detail for service.
      description: Describe event history detail for service.
      operationId: describeServiceEventDetail
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeServiceEventDetailRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeServiceEventDetailResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/disableService:
    post:
      summary: Disable service.
      description: Disable service.
      operationId: disableService
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableServiceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DisableServiceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/enableService:
    post:
      summary: Enable DataFlow service from a CDP environment.
      description: Enable DataFlow service from a CDP environment.
      operationId: enableService
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableServiceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/EnableServiceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/getFlowVersion:
    post:
      summary: Get flow version.
      description: Downloads the Flow Definition for the specified Flow Version.
      operationId: getFlowVersion
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFlowVersionRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetFlowVersionResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
      x-extensions: df
  /api/v1/df/getKubeconfig:
    post:
      summary: Get Kubeconfig.
      description: Gets kubernetes configuration for the environment.
      operationId: getKubeconfig
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetKubeconfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetKubeconfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/grantUserKubernetesAccess:
    post:
      summary: Grant remote user access to the service's cluster.
      description: Grants remote user access to the service's cluster.
      operationId: grantUserKubernetesAccess
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GrantUserKubernetesAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GrantUserKubernetesAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/importFlowDefinition:
    post:
      summary: Import a new flow definition.
      description: Import a new flow definition.
      operationId: importFlowDefinition
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ImportFlowDefinitionRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ImportFlowDefinitionResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
      x-extensions: redirect,df
  /api/v1/df/importFlowDefinitionVersion:
    post:
      summary: Import a new flow definition version to an existing flow.
      description: Import a new flow definition version to an existing flow.
      operationId: importFlowDefinitionVersion
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ImportFlowDefinitionVersionRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ImportFlowDefinitionVersionResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
      x-extensions: redirect,df
  /api/v1/df/initiateDeployment:
    post:
      summary: Initiate a deployment creation.
      description: Initiate a deployment creation.
      operationId: initiateDeployment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/InitiateDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/InitiateDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/listDeployableServicesForNewDeployments:
    post:
      summary: List services that a DataFlow Admin can deploy to.
      description: List services that a DataFlow Admin can deploy to.
      operationId: listDeployableServicesForNewDeployments
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeployableServicesForNewDeploymentsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDeployableServicesForNewDeploymentsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listDeploymentActiveAlerts:
    post:
      summary: List active alerts for deployment.
      description: List active alerts for deployment.
      operationId: listDeploymentActiveAlerts
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeploymentActiveAlertsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDeploymentActiveAlertsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listDeploymentEvents:
    post:
      summary: List event history for deployment.
      description: List event history for deployment.
      operationId: listDeploymentEvents
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeploymentEventsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDeploymentEventsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listDeploymentKPIs:
    post:
      summary: List deployment KPIs.
      description: Lists deployment KPIs.
      operationId: listDeploymentKPIs
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeploymentKPIsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDeploymentKPIsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listDeploymentSystemMetrics:
    post:
      summary: List deployment System metrics.
      description: Lists deployment System metrics.
      operationId: listDeploymentSystemMetrics
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeploymentSystemMetricsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDeploymentSystemMetricsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listDeployments:
    post:
      summary: List deployments.
      description: Lists deployments.
      operationId: listDeployments
      x-entitlement: DFX
      x-paging-default-max-items: 20
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeploymentsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDeploymentsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listDiagnostics:
    post:
      summary: List diagnostics.
      description: List diagnostics requests.
      operationId: listDiagnostics
      x-entitlement: DFX
      x-paging-default-max-items: 20
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDiagnosticsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDiagnosticsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listFilterOptions:
    post:
      summary: List filter options.
      description: Lists filter options.
      operationId: listFilterOptions
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFilterOptionsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListFilterOptionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listFlowDefinitions:
    post:
      summary: List flow definitions.
      description: Lists flow definitions.
      operationId: listFlowDefinitions
      x-entitlement: DFX
      x-paging-default-max-items: 20
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFlowDefinitionsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListFlowDefinitionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listNotifications:
    post:
      summary: List notifications.
      description: Lists notifications.
      operationId: listNotifications
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListNotificationsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListNotificationsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listReadyflows:
    post:
      summary: List ready flows.
      description: Lists ready flows.
      operationId: listReadyflows
      x-entitlement: DFX
      x-paging-default-max-items: 20
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListReadyflowsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListReadyflowsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listServiceActiveAlerts:
    post:
      summary: List active alerts for service.
      description: List active alerts for service.
      operationId: listServiceActiveAlerts
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListServiceActiveAlertsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListServiceActiveAlertsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listServiceEvents:
    post:
      summary: List events for service.
      description: List events for service.
      operationId: listServiceEvents
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListServiceEventsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListServiceEventsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listServiceSystemMetrics:
    post:
      summary: List service System metrics.
      description: List service System metrics.
      operationId: listServiceSystemMetrics
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListServiceSystemMetricsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListServiceSystemMetricsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listServices:
    post:
      summary: List services.
      description: Lists services.
      operationId: listServices
      x-entitlement: DFX
      x-paging-default-max-items: 20
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListServicesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListServicesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/listUserKubernetesAccess:
    post:
      summary: List users that have access to the service's cluster.
      description: List users that have access to the service's cluster
      operationId: listUserKubernetesAccess
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUserKubernetesAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListUserKubernetesAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/renewCertificates:
    post:
      summary: Renew workload UI certificates.
      description: Renew workload UI certificates.
      operationId: renewCertificates
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RenewCertificatesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RenewCertificatesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/resetService:
    post:
      summary: Resets all references to a service. Only not-enabled services can be reset. Makes no attempt to clean-up resources.
      description: Resets the service. Only not-enabled services can be reset. Makes no attempt to clean-up resources.
      operationId: resetService
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResetServiceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ResetServiceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/revokeUserKubernetesAccess:
    post:
      summary: Revoke access for the remote user from the service's cluster.
      description: Revokes access for the remote user from the service's cluster.
      operationId: revokeUserKubernetesAccess
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RevokeUserKubernetesAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RevokeUserKubernetesAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/startGetDiagnosticsCollection:
    post:
      summary: Start diagnostics collection.
      description: Start diagnostics bundle creation and upload.
      operationId: startGetDiagnosticsCollection
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartGetDiagnosticsCollectionRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/StartGetDiagnosticsCollectionResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/df/updateService:
    post:
      summary: Update service.
      description: Update service.
      operationId: updateService
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateServiceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateServiceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/upgradeService:
    post:
      summary: Upgrade service.
      description: Upgrade an enabled DataFlow service to the latest version.
      operationId: upgradeService
      x-entitlement: DFX_UPGRADE
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeServiceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeServiceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
definitions:
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  ServiceMeta:
    type: object
    description: Metadata about a service
    required:
      - crn
      - name
      - cloudProvider
      - region
      - environmentCrn
    properties:
      crn:
        type: string
        description: The crn of the service
      name:
        type: string
        description: the name of the environment
      cloudProvider:
        type: string
        description: the cloud provider
      region:
        type: string
        description: the region within the cloud provider
      environmentCrn:
        type: string
        description: The CDP Environment CRN
  EventSummary:
    type: object
    description: An event summary
    required:
      - crn
      - name
      - severity
      - firstOccurrence
      - eventType
    properties:
      crn:
        type: string
        description: The CRN of the event
      name:
        type: string
        description: Name of the event
      severity:
        type: string
        description: The severity of the event
      firstOccurrence:
        type: integer
        format: int64
        description: Timestamp of the first occurrence of this event
      eventType:
        type: string
        description: The type of event that occurred
      alertType:
        type: string
        description: Optional value for alerts
  Event:
    type: object
    description: An event
    required:
      - crn
      - name
      - severity
      - eventType
      - firstOccurrence
      - referenceType
    properties:
      crn:
        type: string
        description: The CRN of the event
      name:
        type: string
        description: Name of the event
      severity:
        type: string
        description: The severity of the event
      eventType:
        type: string
        description: The type of event that occurred
      firstOccurrence:
        type: integer
        format: int64
        description: Timestamp of the first occurrence of this event
      referenceType:
        type: string
        description: Type of component that is identified by the referenceId.
      lastOccurrence:
        type: integer
        format: int64
        description: Timestamp of the last occurrence of this event
      description:
        type: string
        description: Description of the event
      userName:
        type: string
        description: The user associated with creating the event. Null for user-agnostic events.
      eventValue:
        type: number
        format: double
        description: Optional value of the event when it was triggered
      lowerThreshold:
        type: number
        format: double
        description: Optional value of the low end of the threshold that defines the event triggering condition
      upperThreshold:
        type: number
        format: double
        description: Optional value of the high end of the threshold that defines the event triggering condition
      timeToleranceMillis:
        type: integer
        format: int64
        description: Optional number of milliseconds tolerated outside the threshold bounds before the event is triggered
      lowerThresholdUnit:
        type: string
        description: Optional value of the units for the lower bound of the threshold
      upperThresholdUnit:
        type: string
        description: Optional value of the units for the upper bound of the threshold
      alertType:
        type: string
        description: Optional value for alerts
  MetricValue:
    type: object
    description: A metric value
    required:
      - timestamp
      - value
    properties:
      timestamp:
        type: integer
        format: int64
        description: The timestamp of this data point
      value:
        type: number
        format: double
        description: The value of this data point
  MetricChartData:
    type: object
    description: Chart data of metrics
    required:
      - averageValue
      - currentValue
      - currentValueLabel
      - averageValueLabel
      - tooltipValueLabel
    properties:
      averageValue:
        type: number
        format: double
        description: The average value of the data
      currentValue:
        type: number
        format: double
        description: The most recent value in the list of data points
      currentValueLabel:
        type: string
        description: The current value label
      averageValueLabel:
        type: string
        description: The average value label
      tooltipValueLabel:
        type: string
        description: The tooltip value label
      datas:
        type: array
        items:
          $ref: '#/definitions/MetricValue'
        description: The list of data points (in time-order) for the metric
  MetricChartFrequencyTolerance:
    type: object
    description: Frequency tolerance for a metric chart
    required:
      - unit
      - value
    properties:
      unit:
        type: string
        description: The unit of time controlling how long a metric value can persist outside its boundaries before an alert is generated
      value:
        type: number
        format: double
        description: The amount of time, associated with the given unit, a metric value can persist outside its boundaries before an alert is generated
  MetricChartAlert:
    type: object
    description: Thresholds associated with a metric
    required:
      - frequencyTolerance
    properties:
      frequencyTolerance:
        description: The unit of time controlling how long a metric value can persist outside its boundaries before an alert is generated
        $ref: '#/definitions/MetricChartFrequencyTolerance'
      thresholdMoreThan:
        type: number
        format: double
        description: The moreThan threshold for the alert
      thresholdLessThan:
        type: number
        format: double
        description: The lessThan threshold for the alert
  MetricChart:
    type: object
    description: A metric chart
    required:
      - name
      - unitType
      - componentType
      - metrics
      - mirroredMetrics
      - alert
    properties:
      name:
        type: string
        description: The name of the metric
      unitType:
        type: string
        description: The unit type of the metric
      componentType:
        type: string
        description: The component type of the metric
      metrics:
        description: The chart metrics
        $ref: '#/definitions/MetricChartData'
      mirroredMetrics:
        description: The optional mirrored metrics that only exist for certain system metrics
        $ref: '#/definitions/MetricChartData'
      alert:
        description: The optional thresholds associated with the alert on a metric
        $ref: '#/definitions/MetricChartAlert'
      componentName:
        type: string
        description: The scope component name that will exist for Processor, Process Group, and Connection metrics.
  MetricUnit:
    type: object
    description: Metric unit
    required:
      - id
      - name
      - displayLabel
    properties:
      id:
        type: string
        description: Id of the metric unit
      name:
        type: string
        description: Name of the unit
      displayLabel:
        type: string
        description: display label for the unit
      abbreviation:
        type: string
        description: abbreviation used for this unit
      ordinal:
        type: integer
        format: int32
        description: ordinal used when positioning the unit in a list (sort order)
      conversionValue:
        type: integer
        format: int64
        description: conversion value to use when converting between units
      metricUnitType:
        type: string
        description: type of unit (DURATION, RATIO, SIZE, RATE, COUNT)
  AlertCondition:
    type: object
    description: Alert condition
    required:
      - id
      - alertOperator
      - value
      - unit
    properties:
      id:
        type: string
        description: Id of the alert condition
      alertOperator:
        type: string
        description: Operator for the condition
      value:
        type: number
        format: double
        description: Value used to for evaluation of this condition
      unit:
        description: unit of measurement for the value
        $ref: '#/definitions/MetricUnit'
  AlertFrequencyUnit:
    type: object
    description: Alert frequency unit
    required:
      - id
      - label
      - abbreviation
    properties:
      id:
        type: string
        description: Id of alert frequency unit
      label:
        type: string
        description: Label of the unit
      abbreviation:
        type: string
        description: Abbreviation used for this unit
  MetricSummary:
    type: object
    description: Metric summary
    required:
      - name
      - label
    properties:
      name:
        type: string
        description: The name of the metric
      label:
        type: string
        description: The label of the metric
      description:
        type: string
        description: The description of the metric
      unitType:
        type: string
        description: The unit type of the metric
      componentType:
        type: string
        description: The component type of the metric
      componentName:
        type: string
        description: The scope component name that will exist for Processor, Process Group, and Connection metrics.
      componentId:
        type: string
        description: Id of the component monitored
      values:
        type: array
        items:
          $ref: '#/definitions/MetricValue'
        description: Values for the metric
      displayContext:
        type: string
        description: Display context of the metric
      upperBoundCondition:
        description: Upper boundary condition
        $ref: '#/definitions/AlertCondition'
      lowerBoundCondition:
        description: Lower boundary condition
        $ref: '#/definitions/AlertCondition'
      alertFrequencyValue:
        type: number
        format: double
        description: Frequency value
      alertFrequencyUnit:
        description: Units of frequency
        $ref: '#/definitions/AlertFrequencyUnit'
  ImportFlowDefinitionRequest:
    type: object
    description: Request object for ImportFlowDefinition
    required:
      - file
      - name
    properties:
      file:
        type: string
        description: The file to be uploaded.
      name:
        type: string
        description: The name of the flow.
      description:
        type: string
        description: The description of the flow.
      comments:
        type: string
        description: The comments of the flow.
  ImportFlowDefinitionResponse:
    type: object
    description: Response object for ImportFlowDefinition
    required:
      - crn
      - name
      - versionCount
    properties:
      crn:
        type: string
        description: The artifact CRN
      name:
        type: string
        description: The artifact name.
      versionCount:
        type: integer
        format: int32
        description: The number of versions uploaded to the catalog.
      createdTimestamp:
        type: integer
        format: int64
        description: The created timestamp.
      author:
        type: string
        description: Author of the most recent version
      description:
        type: string
        description: The artifact description.
      modifiedTimestamp:
        type: integer
        format: int64
        description: The modified timestamp.
      versions:
        type: array
        items:
          $ref: '#/definitions/FlowVersion'
        description: The list of artifactDetail versions
  ImportFlowDefinitionVersionRequest:
    type: object
    description: Request object for ImportFlowDefinitionVersion
    required:
      - flowCrn
      - file
    properties:
      flowCrn:
        type: string
        description: The CRN of the previously uploaded flow.
      file:
        type: string
        description: The file to be uploaded.
      comments:
        type: string
        description: The comments of the flow version.
  ImportFlowDefinitionVersionResponse:
    type: object
    description: Response object for ImportFlowDefinitionVersion
    required:
      - crn
    properties:
      crn:
        type: string
        description: The flow version CRN
      bucketIdentifier:
        type: string
        description: The bucketIdentifier of the flow
      author:
        type: string
        description: The author of the flow
      version:
        type: integer
        format: int32
        description: The version of the flow
      timestamp:
        type: integer
        format: int64
        description: The timestamp of the flow
      deploymentCount:
        type: integer
        format: int32
        description: The number of deployments of the flow
      comments:
        type: string
        description: Comments about the flow
  FlowSummary:
    type: object
    description: A summarized version of a flow, mostly useful in listing flows
    required:
      - crn
      - name
      - versionCount
      - artifactType
    properties:
      crn:
        type: string
        description: The artifact CRN
      name:
        type: string
        description: The artifact name.
      versionCount:
        type: integer
        format: int32
        description: The number of versions uploaded to the catalog.
      artifactType:
        type: string
        description: The type of artifact
      modifiedTimestamp:
        type: integer
        format: int64
        description: The modified timestamp.
  Flow:
    type: object
    description: A representation of a versioned data flow.
    required:
      - crn
      - name
      - versionCount
    properties:
      crn:
        type: string
        description: The artifact CRN
      name:
        type: string
        description: The artifact name.
      versionCount:
        type: integer
        format: int32
        description: The number of versions uploaded to the catalog.
      createdTimestamp:
        type: integer
        format: int64
        description: The created timestamp.
      author:
        type: string
        description: Author of the most recent version
      description:
        type: string
        description: The artifact description.
      modifiedTimestamp:
        type: integer
        format: int64
        description: The modified timestamp.
      versions:
        type: array
        items:
          $ref: '#/definitions/FlowVersion'
        description: The list of artifactDetail versions
  ArtifactVersion:
    type: object
    description: A representation of a artifact detail version
    required:
      - crn
      - bucketIdentifier
      - author
      - version
      - timestamp
    properties:
      crn:
        type: string
        description: The artifact version CRN
      bucketIdentifier:
        type: string
        description: The bucketIdentifier of the artifact
      author:
        type: string
        description: The author of the artifact
      version:
        type: integer
        format: int32
        description: The version of the artifactVersion
      timestamp:
        type: integer
        format: int64
        description: The timestamp of the artifactVersion
      deploymentCount:
        type: integer
        format: int32
        description: The number of deployments of the artifactVersion
      comments:
        type: string
        description: Comments about the version
      draftCount:
        type: integer
        format: int32
        description: The number of drafts associated with the version.
  FlowVersion:
    type: object
    description: A representation of a flow detail version
    required:
      - crn
    properties:
      crn:
        type: string
        description: The flow version CRN
      bucketIdentifier:
        type: string
        description: The bucketIdentifier of the flow
      author:
        type: string
        description: The author of the flow
      version:
        type: integer
        format: int32
        description: The version of the flow
      timestamp:
        type: integer
        format: int64
        description: The timestamp of the flow
      deploymentCount:
        type: integer
        format: int32
        description: The number of deployments of the flow
      comments:
        type: string
        description: Comments about the flow
      draftCount:
        type: integer
        format: int32
        description: The number of draft flows associated with the version.
  ListFlowDefinitionsRequest:
    type: object
    description: Request object for the ListFlowDefinitions method.
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The page size.
      startingToken:
        type: string
        x-paging-input-token: true
        description: The token pointing to the next element to be retrieved.
      sorts:
        type: array
        items:
          type: string
        description: The sort criteria
      searchTerm:
        type: string
        description: Search term to filter by name
  ListFlowDefinitionsResponse:
    type: object
    description: Response object for the ListFlowDefinitions method.
    properties:
      flows:
        type: array
        x-paging-result: true
        items:
          $ref: '#/definitions/FlowSummary'
        description: The flows.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The page token for requesting the next page of results.
  DeleteFlowRequest:
    type: object
    description: Request object for the DeleteFlow method
    required:
      - flowCrn
    properties:
      flowCrn:
        type: string
        description: The flow CRN
  DeleteFlowResponse:
    type: object
    description: Response object for the DeleteFlow method
    properties:
      flow:
        description: The flow that was deleted
        $ref: '#/definitions/Flow'
  DescribeFlowRequest:
    type: object
    description: Request object for the DescribeFlow method
    required:
      - flowCrn
    properties:
      flowCrn:
        type: string
        description: The flow CRN
  DescribeFlowResponse:
    type: object
    description: Response object for the DescribeFlow method
    properties:
      flowDetail:
        description: The flow detail
        $ref: '#/definitions/Flow'
  ReadyflowSummary:
    type: object
    description: A summarized version of a ready flow, mostly useful in listing flows
    required:
      - readyflowCrn
      - name
    properties:
      readyflowCrn:
        type: string
        description: The ready flow CRN
      name:
        type: string
        description: The ready flow name
      summary:
        type: string
        description: The ready flow summary
      source:
        type: string
        description: The ready flow source
      destination:
        type: string
        description: The ready flow destination
      latestVersion:
        type: integer
        format: int32
        description: The latest version of the ready flow
      imported:
        type: boolean
        description: Whether the ready flow has been imported into the current account
      importedArtifactCrn:
        type: string
        description: The crn of the imported ready flow, used to look up its details
  ReadyflowDetails:
    type: object
    description: A detailed representation of a ready flow.
    required:
      - readyflowCrn
      - name
      - author
    properties:
      readyflowCrn:
        type: string
        description: The ready flow CRN
      name:
        type: string
        description: The ready flow name
      author:
        type: string
        description: The author of the most recent version
      summary:
        type: string
        description: The ready flow summary (short)
      description:
        type: string
        description: The ready flow description (long)
      documentationLink:
        type: string
        description: A link to the ready flow documentation
      notes:
        type: string
        description: Optional notes about the ready flow
      source:
        type: string
        description: The ready flow data source
      sourceDataFormat:
        type: string
        description: The ready flow data source format
      destination:
        type: string
        description: The ready flow data destination
      destinationDataFormat:
        type: string
        description: The ready flow data destination format
      imported:
        type: boolean
        description: Whether the ready flow has been imported into the current account
      modifiedTimestamp:
        type: integer
        format: int64
        description: The modified timestamp.
  ListReadyflowsRequest:
    type: object
    description: Request object for the ListReadyflows method.
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The page size.
      startingToken:
        type: string
        x-paging-input-token: true
        description: The token pointing to the next element to be retrieved.
      searchTerm:
        type: string
        description: Search term by which to filter (optional)
  ListReadyflowsResponse:
    type: object
    description: Response object for the ListReadyflows method.
    properties:
      readyflows:
        type: array
        x-paging-result: true
        items:
          $ref: '#/definitions/ReadyflowSummary'
        description: The ready flows
      nextToken:
        type: string
        x-paging-output-token: true
        description: The page token for requesting the next page of results.
  DescribeReadyflowRequest:
    type: object
    description: Request object for the DescribeReadyflow method
    required:
      - readyflowCrn
    properties:
      readyflowCrn:
        type: string
        description: The ready flow CRN
  DescribeReadyflowResponse:
    type: object
    description: Response object for the DescribeReadyflow method
    properties:
      readyflowDetail:
        description: the ready flow detail
        $ref: '#/definitions/ReadyflowDetails'
  AddedReadyflowDetails:
    type: object
    description: A detailed representation of a ready flow as added by the current account
    required:
      - addedReadyflowCrn
    properties:
      addedReadyflowCrn:
        type: string
        description: The added ready flow crn
      readyflow:
        description: The ready flow name
        $ref: '#/definitions/ReadyflowDetails'
      versions:
        type: array
        items:
          $ref: '#/definitions/ArtifactVersion'
        description: The ready flow versions
  DescribeAddedReadyflowRequest:
    type: object
    description: Request object for the DescribeAddedReadyflow method
    required:
      - addedReadyflowCrn
    properties:
      addedReadyflowCrn:
        type: string
        description: The added ready flow CRN
  DescribeAddedReadyflowResponse:
    type: object
    description: Response object for the DescribeAddedReadyflow method
    properties:
      addedReadyflowDetail:
        description: The added ready flow detail
        $ref: '#/definitions/AddedReadyflowDetails'
  AddReadyflowRequest:
    type: object
    description: Request object for the AddReadyflow method
    required:
      - readyflowCrn
    properties:
      readyflowCrn:
        type: string
        description: The ready flow CRN
  AddReadyflowResponse:
    type: object
    description: Response object for the AddReadyflow method
    properties:
      addedReadyflowDetail:
        description: The added ready flow detail
        $ref: '#/definitions/AddedReadyflowDetails'
  DeleteAddedReadyflowRequest:
    type: object
    description: Request object for the DeleteAddedReadyFlow method
    required:
      - addedReadyflowCrn
    properties:
      addedReadyflowCrn:
        type: string
        description: The added ready flow CRN
  DeleteAddedReadyflowResponse:
    type: object
    description: Response object for the DeleteAddedReadyflow method
    properties:
      readyflowDetail:
        description: The ready flow details
        $ref: '#/definitions/ReadyflowDetails'
  GetFlowVersionRequest:
    type: object
    description: Request object for the GetFlowVersion method.
    required:
      - flowVersionCrn
    properties:
      flowVersionCrn:
        type: string
        description: The Flow Version CRN.
  GetFlowVersionResponse:
    type: object
    description: Response object for the GetFlowVersion method.
    properties:
      flowDefinition:
        type: string
        format: byte
        description: the flow definition.
        x-skip-logging: true
  InitiateDeploymentRequest:
    type: object
    description: A request to initiate a deployment
    required:
      - serviceCrn
      - flowVersionCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN.
      flowVersionCrn:
        type: string
        description: The flow version CRN.
  InitiateDeploymentResponse:
    type: object
    description: A response from initiating a deployment
    required:
      - deploymentRequestCrn
      - dfxLocalUrl
    properties:
      deploymentRequestCrn:
        type: string
        description: The newly created deployment request CRN.
      dfxLocalUrl:
        type: string
        description: Base URL to the dfx-local instance running an eventually created deployment
  DeploymentState:
    type: string
    description: The state that the deployment is currently in.
    x-deprecated-enum-values: SUSPENDING_FLOW
    enum:
      - DEPLOYING
      - GOOD_HEALTH
      - CONCERNING_HEALTH
      - BAD_HEALTH
      - STARTING_FLOW
      - SUSPENDING_FLOW
      - SUSPENDED
      - UPDATING
      - TERMINATING
      - RESTARTING
      - UPGRADING
      - ROLLING_BACK
      - STOPPED
      - UNKNOWN
      - IMPORTING_FLOW
      - STOPPING_FLOW
      - FLOW_STOPPED
      - SUSPENDING
      - RESUMING
  DeploymentStatus:
    type: object
    description: The status of a deployment
    required:
      - detailedState
      - message
      - state
    properties:
      detailedState:
        type: string
        description: The detailed state that the deployment is currently in
      message:
        type: string
        description: Detail message relating to the current status of the deployment
      state:
        description: The state that the deployment is currently in
        $ref: '#/definitions/DeploymentState'
  DeploymentSummary:
    type: object
    description: A deployment summary
    required:
      - crn
      - name
      - status
      - service
      - updated
    properties:
      crn:
        type: string
        description: The deployment CRN
      name:
        type: string
        description: The deployment name
      status:
        description: The deployment status
        $ref: '#/definitions/DeploymentStatus'
      service:
        description: The DataFlow service information of the deployment
        $ref: '#/definitions/ServiceMeta'
      updated:
        type: integer
        format: int64
        description: Timestamp of the last time the deployment was modified
      activeInfoAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an info
      activeWarningAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as a warning
      activeErrorAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an error
  Deployment:
    type: object
    description: A deployment
    required:
      - crn
      - name
      - status
      - service
      - updated
      - clusterSize
      - flowVersionCrn
      - flowCrn
    properties:
      crn:
        type: string
        description: The deployment CRN
      name:
        type: string
        description: The deployment name
      status:
        description: The deployment status
        $ref: '#/definitions/DeploymentStatus'
      service:
        description: The DataFlow service information of the deployment
        $ref: '#/definitions/ServiceMeta'
      updated:
        type: integer
        format: int64
        description: Timestamp of the last time the deployment was modified
      clusterSize:
        type: string
        description: The initial size of the deployment
      flowVersionCrn:
        type: string
        description: The deployment's current flow version CRN
      flowCrn:
        type: string
        description: The deployment's current flow CRN
      nifiUrl:
        type: string
        description: The url to open the deployed flow in NiFi
      autoscaleMaxNodes:
        type: integer
        format: int32
        description: The maximum number of nodes that the deployment can scale up to, or null if autoscaling is not enabled for this deployment
      flowName:
        type: string
        description: The name of the flow
      flowVersion:
        type: integer
        format: int32
        description: The version of the flow
      currentNodeCount:
        type: integer
        format: int32
        description: The current node count
      deployedByCrn:
        type: string
        description: The actor CRN of the person who deployed the flow
      deployedByName:
        type: string
        description: The name of the person who deployed the flow
      autoscalingEnabled:
        type: boolean
        description: Whether or not to autoscale the deployment.
      autoscaleMinNodes:
        type: integer
        format: int32
        description: The minimum number of nodes that the deployment will allocate. May only be specified when autoscalingEnabled is true.
      activeInfoAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an info
      activeWarningAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as a warning
      activeErrorAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an error
      staticNodeCount:
        type: integer
        format: int32
        description: The static number of nodes that the deployment will allocate. May only be specified when autoscalingEnabled is false.
      dfxLocalUrl:
        type: string
        description: Base URL to the dfx-local instance running this deployment
      lastUpdatedByName:
        type: string
        description: The name of the person who last updated the deployment
      configurationVersion:
        type: integer
        format: int64
        description: The version of the configuration for this deployment
      cfmNifiVersion:
        type: string
        description: The version of NiFi being used by this deployment.
      flowMetricsScalingEnabled:
        type: boolean
        description: Whether or not to use Flow metrics to scale the deployment. May only be specified when autscalingEnabled is true.
  FilterOption:
    type: object
    description: A filter option
    required:
      - identifier
      - label
    properties:
      identifier:
        type: string
        description: The filter identifier
      label:
        type: string
        description: The filter label
      iconClass:
        type: string
        description: The icon class
  ListFilterOptionsRequest:
    type: object
    description: A request to list filter options
    required:
      - filterType
    properties:
      filterType:
        type: string
        description: The type of filter
  ListFilterOptionsResponse:
    type: object
    description: A response to list filter options
    properties:
      filterOptions:
        type: array
        items:
          $ref: '#/definitions/FilterOption'
        description: The filter options
  ListDeploymentsRequest:
    type: object
    description: A request to list deployments
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The page size.
      startingToken:
        type: string
        x-paging-input-token: true
        description: The token pointing to the next element to be retrieved.
      sorts:
        type: array
        items:
          type: string
        description: The sort criteria
      filters:
        type: array
        items:
          type: string
        description: The filter criteria
  ListDeploymentsResponse:
    type: object
    description: A response from listing deployments
    properties:
      nextToken:
        type: string
        x-paging-output-token: true
        description: The page token for requesting the next page of results.
      deployments:
        type: array
        x-paging-result: true
        items:
          $ref: '#/definitions/DeploymentSummary'
        description: The listing of deployments in this page
  DescribeDeploymentRequest:
    type: object
    description: A request to describe a deployment
    required:
      - deploymentCrn
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
  DescribeDeploymentResponse:
    type: object
    description: A response to describe a deployment
    properties:
      deployment:
        description: The deployment
        $ref: '#/definitions/Deployment'
  ListDeploymentKPIsRequest:
    type: object
    description: A request to list deployment KPIs
    required:
      - deploymentCrn
      - metricsTimePeriod
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
      metricsTimePeriod:
        type: string
        description: The metrics time period
  ListDeploymentKPIsResponse:
    type: object
    description: A response to list deployment KPIs
    properties:
      metricCharts:
        type: array
        items:
          $ref: '#/definitions/MetricChart'
        description: The metrics for the configured KPIs
  ListDeploymentSystemMetricsRequest:
    type: object
    description: A request to list deployment system metrics
    required:
      - deploymentCrn
      - metricsTimePeriod
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
      metricsTimePeriod:
        type: string
        description: The metrics time period
  ListDeploymentSystemMetricsResponse:
    type: object
    description: A response to list deployment system metrics
    properties:
      metricCharts:
        type: array
        items:
          $ref: '#/definitions/MetricChart'
        description: The metrics for the configured KPIs
  ListDeploymentActiveAlertsRequest:
    type: object
    description: A request to list active alerts for deployment
    required:
      - deploymentCrn
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
      sort:
        type: string
        description: Sort criteria
  ListDeploymentActiveAlertsResponse:
    type: object
    description: A response to list active alerts for deployment
    properties:
      eventSummaries:
        type: array
        items:
          $ref: '#/definitions/EventSummary'
        description: The events for the specified deployment
  ListDeploymentEventsRequest:
    type: object
    description: A request to list event history for deployment
    required:
      - deploymentCrn
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
      rows:
        type: integer
        format: int32
        description: Max number of rows to return
      timestampFrom:
        type: integer
        format: int64
        description: Timestamp from when to list events prior
      filters:
        type: array
        items:
          type: string
        description: Filter criteria
  ListDeploymentEventsResponse:
    type: object
    description: A response to list event history for deployment
    properties:
      eventSummaries:
        type: array
        items:
          $ref: '#/definitions/EventSummary'
        description: The events
  DescribeDeploymentEventDetailRequest:
    type: object
    description: A request to describe event details for development
    required:
      - deploymentCrn
      - eventCrn
    properties:
      deploymentCrn:
        type: string
        description: The CRN of the deployment
      eventCrn:
        type: string
        description: The CRN of the event
  DescribeDeploymentEventDetailResponse:
    type: object
    description: A response to describe event details for development
    properties:
      eventDetail:
        description: The event details
        $ref: '#/definitions/EventDetail'
  EventDetail:
    type: object
    description: Event details
    properties:
      event:
        description: The event
        $ref: '#/definitions/Event'
      metricSummary:
        description: the metric summary
        $ref: '#/definitions/MetricSummary'
  DiagnosticsDestination:
    type: string
    description: DiagnosticsDestination enum.
    enum:
      - SUPPORT
      - CLOUD_STORAGE
  DiagnosticsCollectionScope:
    type: string
    description: DiagnosticsCollectionScope enum.
    enum:
      - ALL
      - ENVIRONMENT
      - DEPLOYMENT
  DiagnosticsEnvironmentComponent:
    type: string
    description: DiagnosticsEnvironmentComponent enum.
    enum:
      - CFM_OPERATOR
      - ZOOKEEPER_OPERATOR
      - CERT_MANAGER
      - CADENCE
      - DFX_LOGGING
      - DFX_LOCAL
      - DFX_OPS
      - FLUXCD
      - NGINX
      - NFS_PROVISIONER
      - REDIS
      - VAULT
  ServiceState:
    type: string
    description: The state of the service.
    enum:
      - NOT_ENABLED
      - ENABLING
      - GOOD_HEALTH
      - CONCERNING_HEALTH
      - BAD_HEALTH
      - UPDATING
      - RENEWING_CERTS
      - DISABLING
      - UNKNOWN
      - UPGRADING
      - COLLECTING_DIAGNOSTICS
  ServiceStatus:
    type: object
    description: The status of a DataFlow enabled service.
    required:
      - state
    properties:
      state:
        description: The state of the service.
        $ref: '#/definitions/ServiceState'
      message:
        type: string
        description: A status message for the service.
      detailedState:
        type: string
        description: The detailed state of the service.
  ServiceSummary:
    type: object
    description: The summary of the DF Service enabled in a CDP Environment
    required:
      - crn
      - environmentCrn
      - name
      - cloudPlatform
      - region
      - deploymentCount
      - maxK8sNodeCount
      - status
      - workloadVersion
    properties:
      crn:
        type: string
        description: The service CRN.
      environmentCrn:
        type: string
        description: The CDP Environment CRN
      name:
        type: string
        description: The service name.
      cloudPlatform:
        type: string
        description: The cloud platform of the service.
      region:
        type: string
        description: The region of the service.
      deploymentCount:
        type: integer
        format: int32
        description: The deployment count.
      maxK8sNodeCount:
        type: integer
        format: int32
        description: The maximum number of kubernetes nodes that service may scale up under high-demand situations
      status:
        description: The DataFlow status of the service.
        $ref: '#/definitions/ServiceStatus'
      workloadVersion:
        type: string
        description: The workload version of the service.
      runningK8sNodeCount:
        type: integer
        format: int32
        description: The number of kubernetes nodes currently running for this service.
      activeInfoAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an info
      activeWarningAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as a warning
      activeErrorAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an error
      clusterId:
        type: string
        description: Cluster id of the service, if enabled
      instanceType:
        type: string
        description: The instance type of the kubernetes nodes currently in use by DataFlow for this service.
      clusterUsable:
        type: boolean
        description: Whether or not a successfully created and usable cluster exists. Deprecated. Use 'validActions' instead.
        x-deprecated: true
      validActions:
        type: array
        items:
          type: string
        description: Valid actions that can be applied based on the current state of the service
      proxyName:
        type: string
        description: The name of the proxy that is configured for the CDP environment
  Service:
    type: object
    description: The DataFlow view of a CDP service.
    required:
      - crn
      - environmentCrn
      - name
      - cloudPlatform
      - region
      - deploymentCount
      - minK8sNodeCount
      - maxK8sNodeCount
      - status
      - workloadVersion
    properties:
      crn:
        type: string
        description: The service CRN.
      environmentCrn:
        type: string
        description: The CDP Environment CRN
      name:
        type: string
        description: The service name.
      cloudPlatform:
        type: string
        description: The cloud platform of the service.
      region:
        type: string
        description: The region of the service.
      deploymentCount:
        type: integer
        format: int32
        description: The deployment count.
      minK8sNodeCount:
        type: integer
        format: int32
        description: The minimum number of Kubernetes nodes that need to be provisioned in the service
      maxK8sNodeCount:
        type: integer
        format: int32
        description: The maximum number of kubernetes nodes that service may scale up under high-demand situations
      status:
        description: The DataFlow status of the service.
        $ref: '#/definitions/ServiceStatus'
      workloadVersion:
        type: string
        description: The workload version of the service.
      runningK8sNodeCount:
        type: integer
        format: int32
        description: The number of kubernetes nodes currently running for this service.
      instanceType:
        type: string
        description: The instance type of the kubernetes nodes currently in use by DataFlow for this service.
      dfLocalUrl:
        type: string
        description: The URL of the service local DataFlow application.
      kubeApiAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: The IP Ranges authorized to connect to the Kubernetes API Server.
      activeInfoAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an info
      activeWarningAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as a warning
      activeErrorAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an error
      clusterId:
        type: string
        description: Cluster id of the service, if enabled
      clusterUsable:
        type: boolean
        description: Whether or not a successfully created and usable cluster exists. Deprecated. Use 'validActions' instead.
        x-deprecated: true
      validActions:
        type: array
        items:
          type: string
        description: Valid actions that can be applied based on the current state of the service
      usePublicLoadBalancer:
        type: boolean
        description: Whether or not a public load balancer is exposed.
      tags:
        type: object
        description: The tags to apply to service related resources created
        additionalProperties:
          type: string
      loadBalancerAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: IP Ranges that are authorized to access CDF local endpoints.
      clusterSubnets:
        type: array
        items:
          type: string
        description: Subnets to use for the Kubernetes cluster
      creatingK8sNodeCount:
        type: integer
        format: int32
        description: The number of kubernetes nodes currently under creation for this service.
      terminatingK8sNodeCount:
        type: integer
        format: int32
        description: The number of kubernetes nodes currently terminating for this service.
      loadBalancerSubnets:
        type: array
        items:
          type: string
        description: Subnets to use for the Load Balancer
      privateCluster:
        type: boolean
        description: Whether the k8s cluster is private or not.
      proxyName:
        type: string
        description: The name of the proxy that is configured for the CDP environment
      k8sServerVersion:
        type: string
        description: The kubernetes version of the cluster
      availableK8sVersionUpgrade:
        type: string
        description: The available kubernetes version that cluster can be upgraded to.
      userDefinedRouting:
        type: boolean
        description: Whether User Defined Routing (UDR) mode is enabled for AKS clusters or not.
      podCidr:
        type: string
        description: CIDR range from which to assign IPs to pods in the kubernetes cluster.
      serviceCidr:
        type: string
        description: CIDR range from which to assign IPs to internal services in the kubernetes cluster.
  ListServicesRequest:
    type: object
    description: Request object for the ListServices method.
    properties:
      sorts:
        type: array
        items:
          type: string
        description: The sort criteria
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The page size.
      startingToken:
        type: string
        x-paging-input-token: true
        description: The token pointing to the next element to be retrieved.
      searchTerm:
        type: string
        description: Search term to filter by name
  ListServicesResponse:
    type: object
    description: Response object for the ListServices method.
    properties:
      services:
        type: array
        x-paging-result: true
        items:
          $ref: '#/definitions/ServiceSummary'
        description: The services.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The page token for requesting the next page of results.
  ListDeployableServicesForNewDeploymentsRequest:
    type: object
    description: Request object for the ListDeployableServicesForNewDeploymentsRequest method.
  ListDeployableServicesForNewDeploymentsResponse:
    type: object
    description: Response object for the ListDeployableServicesForNewDeploymentsRequest method.
    properties:
      services:
        type: array
        items:
          $ref: '#/definitions/ServiceSummary'
        description: The services.
  DescribeServiceRequest:
    type: object
    description: Request object for the DescribeService method.
    required:
      - serviceCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN
  DescribeServiceResponse:
    type: object
    description: Response object for the DescribeService method.
    properties:
      service:
        description: The service
        $ref: '#/definitions/Service'
  ListServiceSystemMetricsRequest:
    type: object
    description: A request to list service system metrics
    required:
      - serviceCrn
      - metricsTimePeriod
    properties:
      serviceCrn:
        type: string
        description: The service CRN
      metricsTimePeriod:
        type: string
        description: The metrics time period
  ListServiceSystemMetricsResponse:
    type: object
    description: A response to list service system metrics
    properties:
      metricCharts:
        type: array
        items:
          $ref: '#/definitions/MetricChart'
        description: The system metrics for the service
  EnableServiceRequest:
    type: object
    description: Request object for EnableService
    required:
      - environmentCrn
      - minK8sNodeCount
      - maxK8sNodeCount
      - usePublicLoadBalancer
    properties:
      environmentCrn:
        type: string
        description: The CDP environment CRN
      minK8sNodeCount:
        type: integer
        format: int32
        description: The minimum number of kubernetes nodes needed for the service.
      maxK8sNodeCount:
        type: integer
        format: int32
        description: The maximum number of kubernetes nodes that service may scale up under high-demand situations.
      usePublicLoadBalancer:
        type: boolean
        description: Indicates whether or not to use a public load balancer when deploying dependencies stack, such as Nginx Ingress Controller.
      kubeApiAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: The IP ranges authorized to connect to the Kubernetes API server.
      tags:
        type: object
        description: The tags to apply to service-related resources created.
        additionalProperties:
          type: string
      loadBalancerAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: IP Ranges that are authorized to access DF local endpoints.
      clusterSubnets:
        type: array
        items:
          type: string
        description: Subnets to use for the Kubernetes cluster
      loadBalancerSubnets:
        type: array
        items:
          type: string
        description: Subnets to use for the Load Balancer
      privateCluster:
        type: boolean
        description: Indicates whether to provision private k8s cluster.
      instanceType:
        type: string
        description: Indicates custom instance type to be used
      skipPreflightChecks:
        type: boolean
        description: Indicates whether to skip Liftie's pre-flight checks.
      userDefinedRouting:
        type: boolean
        description: Indicates whether User Defined Routing (UDR) mode is enabled for AKS clusters.
      podCidr:
        type: string
        description: CIDR range from which to assign IPs to pods in the kubernetes cluster.
      serviceCidr:
        type: string
        description: CIDR range from which to assign IPs to internal services in the kubernetes cluster.
  EnableServiceResponse:
    type: object
    description: Response object for EnableService
    properties:
      service:
        description: The service
        $ref: '#/definitions/Service'
  DisableServiceRequest:
    type: object
    description: Request object for DisableService
    required:
      - serviceCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN.
      persist:
        type: boolean
        description: Whether or not to retain the database records of related entities
      terminateDeployments:
        type: boolean
        description: Whether or not to terminate all deployments associated with this DataFlow service
  DisableServiceResponse:
    type: object
    description: Response object for DisableService
    properties:
      status:
        description: The DataFlow status of the service.
        $ref: '#/definitions/ServiceStatus'
  UpdateServiceRequest:
    type: object
    description: Request object for UpdateService
    required:
      - serviceCrn
      - minK8sNodeCount
      - maxK8sNodeCount
    properties:
      serviceCrn:
        type: string
        description: The service CRN.
      minK8sNodeCount:
        type: integer
        format: int32
        description: The minimum number of kubernetes nodes needed for the service.
      maxK8sNodeCount:
        type: integer
        format: int32
        description: The maximum number of kubernetes nodes that service may scale up under high-demand situations.
      kubeApiAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: The IP Ranges authorized to connect to the Kubernetes API Server.
      loadBalancerAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: IP Ranges that are authorized to access CDF local endpoints.
      skipPreflightChecks:
        type: boolean
        description: Indicates whether to skip Liftie's pre-flight checks.
  UpdateServiceResponse:
    type: object
    description: Response object for UpdateService
    properties:
      service:
        description: The service.
        $ref: '#/definitions/Service'
  RenewCertificatesRequest:
    type: object
    description: Request object for RenewCertificates
    required:
      - serviceCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN.
  RenewCertificatesResponse:
    type: object
    description: Response object for RenewCertificates
  ListServiceActiveAlertsRequest:
    type: object
    description: Request object for ListServiceActiveAlerts
    required:
      - serviceCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN
      sort:
        type: string
        description: Sort criteria
  ListServiceActiveAlertsResponse:
    type: object
    description: Response object for ListServiceActiveAlerts
    properties:
      eventSummaries:
        type: array
        items:
          $ref: '#/definitions/EventSummary'
        description: The events for the specified service
  ListServiceEventsRequest:
    type: object
    description: Request object for ListServiceEvents
    required:
      - serviceCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN
      rows:
        type: integer
        format: int32
        description: Max number of rows to return
      timestampFrom:
        type: integer
        format: int64
        description: Timestamp from when to list events prior
      filters:
        type: array
        items:
          type: string
        description: Filter criteria
  ListServiceEventsResponse:
    type: object
    description: Response object for ListServiceEvents
    properties:
      eventSummaries:
        type: array
        items:
          $ref: '#/definitions/EventSummary'
        description: The events for the specified service
  DescribeServiceEventDetailRequest:
    type: object
    description: Request object for DescribeServiceEventDetail
    required:
      - serviceCrn
      - eventCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN
      eventCrn:
        type: string
        description: The event CRN
  DescribeServiceEventDetailResponse:
    type: object
    description: Response object for DescribeServiceEventDetail
    properties:
      event:
        description: The events for the specified service
        $ref: '#/definitions/Event'
  ResetServiceRequest:
    type: object
    description: Request object for ResetService
    required:
      - serviceCrn
    properties:
      serviceCrn:
        type: string
        description: The serviceCrn CRN.
  ResetServiceResponse:
    type: object
    description: Response object for ResetService
  GrantUserKubernetesAccessRequest:
    type: object
    description: The request for granting access
    required:
      - serviceCrn
      - cloudUserId
    properties:
      serviceCrn:
        type: string
        description: The service CRN.
      cloudUserId:
        type: string
        description: The user to grant remote access for
  GrantUserKubernetesAccessResponse:
    type: object
    description: The response for granting access
    required:
      - cloudUserId
    properties:
      cloudUserId:
        type: string
        description: The cloudUserId for the newly granted user
  ListUserKubernetesAccessRequest:
    type: object
    description: The request for listing the users that have access to a cluster
    required:
      - serviceCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN.
  ListUserKubernetesAccessResponse:
    type: object
    description: The response for listing the users that have access to a cluster
    properties:
      cloudUserIds:
        type: array
        items:
          type: string
        description: The cloudUserId for the newly granted user
  RevokeUserKubernetesAccessRequest:
    type: object
    description: The request for revoking access
    required:
      - serviceCrn
      - cloudUserId
    properties:
      serviceCrn:
        type: string
        description: The service CRN.
      cloudUserId:
        type: string
        description: The user to revoke remote access for
  RevokeUserKubernetesAccessResponse:
    type: object
    description: The response for revoking access
    required:
      - cloudUserId
    properties:
      cloudUserId:
        type: string
        description: The cloudUserId of the newly revoked user
  UpgradeServiceRequest:
    type: object
    description: Request object for UpgradeService
    required:
      - serviceCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN.
      skipPreflightChecks:
        type: boolean
        description: Indicates whether or not to skip preflight checks when upgrading the workload cluster.
      upgradeDeploymentsNifiVersion:
        type: boolean
        description: Indicates whether deployments NiFi version need to be upgraded; defaults to false
        default: false
  UpgradeServiceResponse:
    type: object
    description: Response object for UpgradeService
    properties:
      service:
        description: The service.
        $ref: '#/definitions/Service'
  ListDiagnosticsRequest:
    type: object
    description: A request to list past and present diagnostics for a given DataFlow Service.
    required:
      - dfServiceCrn
    properties:
      dfServiceCrn:
        type: string
        description: DataFlow Service CRN from which to list diagnostics.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The page size.
      startingToken:
        type: string
        x-paging-input-token: true
        description: The token pointing to the next element to be retrieved.
  DiagnosticsStatus:
    type: string
    description: Diagnostics status enum.
    enum:
      - INPROGRESS
      - FAILED
      - SUCCESS
  ListDiagnosticsResponseItem:
    type: object
    description: Object representation of a diagnostics request list item.
    required:
      - dfServiceCrn
      - status
      - description
      - destination
    properties:
      dfServiceCrn:
        type: string
        description: DataFlow Service CRN.
      status:
        description: Status of request.
        $ref: '#/definitions/DiagnosticsStatus'
      description:
        type: string
        description: User provided description of request.
      destination:
        description: Upload destination.
        $ref: '#/definitions/DiagnosticsDestination'
      bundleCloudPath:
        type: string
        description: Cloud storage path of the bundle, only populated for CLOUD_STORAGE destinations.
      startTime:
        type: string
        description: Time from which to collect logs.
      endTime:
        type: string
        description: Time to which to collect logs.
      environmentComponents:
        type: array
        items:
          $ref: '#/definitions/DiagnosticsEnvironmentComponent'
        description: List of environment components included in the collection.
      collectionScope:
        description: Collection scope.
        $ref: '#/definitions/DiagnosticsCollectionScope'
      deployments:
        type: array
        items:
          type: string
        description: List of Flow deployments included in the collection.
      caseNumber:
        type: string
        description: Support case number associated with the collection.
      uuid:
        type: string
        description: Uuid of the collection.
      requestedTime:
        type: string
        description: Time at which the collection was requested.
  ListDiagnosticsResponse:
    type: object
    description: Response object for ListDiagnostics.
    properties:
      diagnostics:
        type: array
        x-paging-result: true
        items:
          $ref: '#/definitions/ListDiagnosticsResponseItem'
        description: List of previous and current diagnostics requests for a given DataFlow Service.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The page token for requesting the next page of results.
  StartGetDiagnosticsCollectionRequest:
    type: object
    description: Request to start DataFlow diagnostics bundle creation.
    required:
      - dfServiceCrn
      - destination
      - description
    properties:
      dfServiceCrn:
        type: string
        description: DataFlow Service CRN from which to collect diagnostics.
      destination:
        description: Destination location.
        $ref: '#/definitions/DiagnosticsDestination'
      description:
        type: string
        description: Description of diagnostics collection.
      environmentComponents:
        type: array
        items:
          $ref: '#/definitions/DiagnosticsEnvironmentComponent'
        description: List of environment components for which logs should be collected.
      caseNumber:
        type: string
        description: Support case number associated with this request.
      deployments:
        type: array
        items:
          type: string
        description: List of deployments to collect diagnostics from, if none are specified, all deployments will be included.
      startTime:
        type: string
        description: Date-time from which component logs will be collected, up until endTime.
      endTime:
        type: string
        description: Date-time to which component logs will be collected, starting from startTime.
      collectionScope:
        description: Collection scope.
        $ref: '#/definitions/DiagnosticsCollectionScope'
  StartGetDiagnosticsCollectionResponse:
    type: object
    description: Response object for StartGetDiagnosticsCollection.
    required:
      - uuid
    properties:
      uuid:
        type: string
        description: UUID of the bundle request.
  GetKubeconfigRequest:
    type: object
    description: Request object for GetKubeconfig.
    required:
      - serviceCrn
    properties:
      serviceCrn:
        type: string
        description: The service CRN.
  GetKubeconfigResponse:
    type: object
    description: Response object for GetKubeconfig.
    required:
      - kubeconfig
    properties:
      kubeconfig:
        type: string
        description: The kubernetes configuration of the environment.
        x-sensitive: true
  ListNotificationsRequest:
    type: object
    description: The request for retrieving notifications
    required:
      - timestampAfter
    properties:
      timestampAfter:
        type: integer
        format: int64
        description: Timestamp from when to list notifications since
  ListNotificationsResponse:
    type: object
    description: The response for retrieving notifications
    properties:
      notifications:
        type: array
        items:
          $ref: '#/definitions/Notification'
        description: The notifications
  Notification:
    type: object
    description: A notification for an event
    required:
      - name
      - description
      - severity
      - referenceId
      - referenceType
      - username
      - eventId
      - timestamp
    properties:
      name:
        type: string
        description: The name of the notification
      description:
        type: string
        description: The description of the notification
      severity:
        type: string
        description: The severity of the notification
      referenceId:
        type: string
        description: The id of the component referenced by this notification
      referenceType:
        type: string
        description: The type of component referenced by this notification
      username:
        type: string
        description: The user associated with the notification
      eventId:
        type: string
        description: The id of the event that triggered this notification
      timestamp:
        type: integer
        format: int64
        description: The timestamp of the event that triggered this notification
x-audit: true
x-audit-entitlement: AUDIT_API_EVENT_SUBMISSION_DF_API
