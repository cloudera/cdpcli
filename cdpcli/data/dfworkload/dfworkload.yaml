x-generated: Automatically generated by protocols script. Do not edit manually.
swagger: '2.0'
x-endpoint-name: dfworkload
x-products: CDP
x-form-factors: public
x-cdp-releases: PUBLIC
info:
  description: "This REST API provides remote access to the DataFlow Service.\n Endpoints that are marked as [BETA] are subject to change in future releases of the application without backwards compatibility and without a major version change."
  version: 0.9.99
  title: Cloudera DataFlow Workload Service
  license:
    name: Apache 2.0
  termsOfService: https://www.cloudera.com/legal/commercial-terms-and-conditions.html
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: CDFLocalRPCAPIVersion1
paths:
  /dfx/api/rpc-v1/custom-nar-configurations/create-custom-nar-configuration:
    post:
      summary: Create the custom NAR configuration.
      description: Create the custom NAR configuration.
      operationId: createCustomNarConfiguration
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Create Custom NAR Configuration Request
          required: true
          schema:
            $ref: '#/definitions/CreateCustomNarConfigurationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateCustomNarConfigurationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/custom-nar-configurations/delete-custom-nar-configuration:
    post:
      summary: Deletes an orphaned custom NAR configuration.
      description: Deletes an orphaned custom NAR configuration.
      operationId: deleteCustomNarConfiguration
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Delete Custom NAR Configuration Request
          required: true
          schema:
            $ref: '#/definitions/DeleteCustomNarConfigurationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteCustomNarConfigurationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/custom-nar-configurations/get-custom-nar-configuration:
    post:
      summary: Get a custom NAR configuration.
      description: Get a custom NAR configuration.
      operationId: getCustomNarConfiguration
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Get Custom NAR Configuration Request
          required: true
          schema:
            $ref: '#/definitions/GetCustomNarConfigurationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetCustomNarConfigurationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/custom-nar-configurations/get-default-custom-nar-configuration:
    post:
      summary: Get the default custom NAR configuration.
      description: Get the default custom NAR configuration.
      operationId: getDefaultCustomNarConfiguration
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Get Default Custom NAR Configuration Request
          required: true
          schema:
            $ref: '#/definitions/GetDefaultCustomNarConfigurationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetDefaultCustomNarConfigurationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/custom-nar-configurations/update-custom-nar-configuration:
    post:
      summary: Update the custom NAR configuration.
      description: Update the custom NAR configuration.
      operationId: updateCustomNarConfiguration
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Update Custom NAR Configuration Request
          required: true
          schema:
            $ref: '#/definitions/UpdateCustomNarConfigurationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateCustomNarConfigurationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/custom-nar-configurations/validate-custom-nar-configuration:
    post:
      summary: Validates the custom NAR configuration.
      description: Validates the custom NAR configuration.
      operationId: validateCustomNarConfiguration
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Validate Custom NAR Configuration Request
          required: true
          schema:
            $ref: '#/definitions/ValidateCustomNarConfigurationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ValidateCustomNarConfigurationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/abort-asset-update-request:
    post:
      summary: Aborts asset update request.
      description: Aborts an asset update request for a given deployment.
      operationId: abortAssetUpdateRequest
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Abort Asset Update Request
          required: true
          schema:
            $ref: '#/definitions/AbortAssetUpdateRequestRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AbortAssetUpdateRequestResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/abort-deployment-request:
    post:
      summary: Aborts a deployment request.
      description: Aborts a deployment request.
      operationId: abortDeploymentRequest
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Abort Deployment Request
          required: true
          schema:
            $ref: '#/definitions/AbortDeploymentRequestRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AbortDeploymentRequestResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/cancel-nifi-version-update:
    post:
      summary: Cancels a NiFi version update for a deployment.
      description: Cancels a NiFi version update for a deployment.
      operationId: cancelNifiVersionUpdate
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Cancel NiFi Version Update
          required: true
          schema:
            $ref: '#/definitions/CancelNifiVersionUpdateRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CancelNifiVersionUpdateResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/create-asset-update-request:
    post:
      summary: Create asset update request.
      description: Create an update request for modifying the assets of a given deployment.
      operationId: createAssetUpdateRequest
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Create Asset Update Request
          required: true
          schema:
            $ref: '#/definitions/CreateAssetUpdateRequestRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAssetUpdateRequestResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/create-deployment:
    post:
      summary: Creates a deployment.
      description: Creates a deployment.
      operationId: createDeployment
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Create Deployment Request
          required: true
          schema:
            $ref: '#/definitions/CreateDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/get-deployment-configuration:
    post:
      summary: Retrieves the deployment configuration.
      description: Retrieves the deployment configuration.
      operationId: getDeploymentConfiguration
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Get Deployment Configuration Request
          required: true
          schema:
            $ref: '#/definitions/GetDeploymentConfigurationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetDeploymentConfigurationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/get-deployment-configuration-metadata:
    post:
      summary: Retrieves the deployment configuration metadata.
      description: Retrieves the deployment configuration metadata.
      operationId: getDeploymentConfigurationMetadata
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Get Deployment Configuration Metadata Request
          required: true
          schema:
            $ref: '#/definitions/GetDeploymentConfigurationMetadataRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetDeploymentConfigurationMetadataResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/get-deployment-request-details:
    post:
      summary: Retrieves deployment request details.
      description: Retrieves deployment request details.
      operationId: getDeploymentRequestDetails
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Get Deployment Request details
          required: true
          schema:
            $ref: '#/definitions/GetDeploymentRequestDetailsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetDeploymentRequestDetailsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/restart-deployment:
    post:
      summary: Restart a deployment.
      description: Initiates restart of a deployment.
      operationId: restartDeployment
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Restart Deployment Request
          required: true
          schema:
            $ref: '#/definitions/RestartDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RestartDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/resume-deployment:
    post:
      summary: Resumes a deployment.
      description: Initiates the deployment resume.
      operationId: resumeDeployment
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Resume Deployment Request
          required: true
          schema:
            $ref: '#/definitions/ResumeDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ResumeDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/start-flow:
    post:
      summary: Starts a flow.
      description: Starts the NiFi flow of a deployment.
      operationId: startFlow
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Start Flow
          required: true
          schema:
            $ref: '#/definitions/StartFlowRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/StartFlowResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/stop-flow:
    post:
      summary: Stops a flow.
      description: Stops the NiFi flow of a deployment.
      operationId: stopFlow
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Stop Flow
          required: true
          schema:
            $ref: '#/definitions/StopFlowRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/StopFlowResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/suspend-deployment:
    post:
      summary: Suspends a deployment.
      description: Initiates the deployment suspend.
      operationId: suspendDeployment
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Suspend Deployment Request
          required: true
          schema:
            $ref: '#/definitions/SuspendDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SuspendDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/terminate-deployment:
    post:
      summary: Terminates a deployment.
      description: Initiates the termination of a deployment.
      operationId: terminateDeployment
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Terminate Deployment Request
          required: true
          schema:
            $ref: '#/definitions/TerminateDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/TerminateDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/transition-flow:
    post:
      summary: Transitions a flow.
      description: Transitions the NiFi flow of a deployment to the specified state. Deprecated. Use `start-flow` and `stop-flow` instead.
      operationId: transitionFlow
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Transition Flow
          required: true
          schema:
            $ref: '#/definitions/TransitionFlowRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/TransitionFlowResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-deprecated: true
  /dfx/api/rpc-v1/deployments/update-deployment:
    post:
      summary: Updates a deployment.
      description: Updates a deployment.
      operationId: updateDeployment
      x-workload: true
      x-client-only: true
      x-extensions: workload,df
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Update Deployment Request
          required: true
          schema:
            $ref: '#/definitions/UpdateDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/update-nifi-version:
    post:
      summary: Updates the NiFi version of a deployment.
      description: Initiates the process of updating the NiFi version of a deployment.
      operationId: updateNifiVersion
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Update NiFi Version
          required: true
          schema:
            $ref: '#/definitions/UpdateNifiVersionRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateNifiVersionResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/deployments/upload-asset:
    post:
      summary: Upload an asset.
      description: Uploads an asset for a deployment request or asset update request.
      operationId: uploadAsset
      x-workload: true
      x-client-only: true
      x-extensions: workload,df
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Upload Asset
          required: true
          schema:
            $ref: '#/definitions/UploadAssetRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UploadAssetResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/environments/list-nifi-versions:
    post:
      summary: Lists all supported NiFi versions.
      description: Lists all supported NiFi versions.
      operationId: listNifiVersions
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: List NiFi Versions Request
          required: true
          schema:
            $ref: '#/definitions/ListNifiVersionsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListNifiVersionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /dfx/api/rpc-v1/inbound-connection-endpoint-certificates/download-client-certificate-encoded:
    post:
      summary: Get Inbound Connection Endpoint Client Certificate (in PEM encoding)
      description: Get Inbound Connection Endpoint Client Certificate (in PEM encoding)
      operationId: getClientCertificateEncoded
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Get Inbound Connection Endpoint client's certificate request
          required: true
          schema:
            $ref: '#/definitions/InboundConnectionEndpointClientCertificateRequest'
      responses:
        200:
          description: Expected response to a valid inboundConnectionEndpointClientCertificateRequest.
          schema:
            $ref: '#/definitions/InboundConnectionEndpointClientCertificateResponse'
        default:
          description: The default response on an error.
  /dfx/api/rpc-v1/inbound-connection-endpoint-certificates/download-client-private-key-encoded:
    post:
      summary: Get Inbound Connection Endpoint Client's Private Key (in PEM encoding)
      description: Get Inbound Connection Endpoint Client's Private Key (in PEM encoding)
      operationId: getClientPrivateKeyEncoded
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Get Inbound Connection Endpoint client's private key request
          required: true
          schema:
            $ref: '#/definitions/InboundConnectionEndpointClientPrivateKeyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/InboundConnectionEndpointClientPrivateKeyResponse'
        default:
          description: The default response on an error.
  /dfx/api/rpc-v1/inbound-connection-endpoints/create-inbound-connection-endpoint:
    post:
      summary: Create Inbound Connection Endpoint
      description: Create Inbound Connection Endpoint
      operationId: createInboundConnectionEndpoint
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Create Inbound Connection Endpoint request
          required: true
          schema:
            $ref: '#/definitions/CreateInboundConnectionEndpointRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateInboundConnectionEndpointResponse'
        default:
          description: The default response on an error.
  /dfx/api/rpc-v1/inbound-connection-endpoints/delete-inbound-connection-endpoint:
    post:
      summary: Delete Inbound Connection Endpoint
      description: Delete Inbound Connection Endpoint
      operationId: deleteInboundConnectionEndpoint
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Delete Inbound Connection Endpoint request
          required: true
          schema:
            $ref: '#/definitions/DeleteInboundConnectionEndpointRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteInboundConnectionEndpointResponse'
        default:
          description: The default response on an error.
  /dfx/api/rpc-v1/inbound-connection-endpoints/describe-inbound-connection-endpoint:
    post:
      summary: Describe Inbound Connection Endpoint
      description: Describe Inbound Connection Endpoint
      operationId: describeInboundConnectionEndpoint
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: Describe Inbound Connection Endpoint request
          required: true
          schema:
            $ref: '#/definitions/DescribeInboundConnectionEndpointRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeInboundConnectionEndpointResponse'
        default:
          description: The default response on an error.
  /dfx/api/rpc-v1/inbound-connection-endpoints/list-inbound-connection-endpoints:
    post:
      summary: List Inbound Connection Endpoints
      description: List Inbound Connection Endpoints
      operationId: listInboundConnectionEndpoints
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: input
          description: List Inbound Connection Endpoints request
          required: true
          schema:
            $ref: '#/definitions/ListInboundConnectionEndpointsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListInboundConnectionEndpointsResponse'
        default:
          description: The default response on an error.
  /dfx/api/rpc-v1/inbound-connection-endpoints/renew-certificates:
    post:
      summary: Renew Inbound Connection Endpoint certificates
      description: Submits a request for renewal of Inbound Connection Endpoint certificates
      operationId: renewInboundConnectionEndpointCertificates
      x-workload: true
      x-client-only: true
      x-extensions: workload
      tags:
        - CDFLocalRPCAPIVersion1
      parameters:
        - in: body
          name: body
          description: Inbound connection endpoint certificates renewal request
          required: true
          schema:
            $ref: '#/definitions/RenewInboundConnectionEndpointCertificateRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RenewInboundConnectionEndpointCertificateResponse'
        default:
          description: The default response on an error.
definitions:
  AbortAssetUpdateRequestRequest:
    type: object
    description: Request object for aborting an asset update request
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - assetUpdateRequestCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
      assetUpdateRequestCrn:
        type: string
        description: The CRN of the asset update request
  AbortAssetUpdateRequestResponse:
    type: object
    description: Response object for aborting an asset update request
    x-workload: true
    x-client-only: true
  AbortDeploymentRequestRequest:
    type: object
    description: Request object for abort deployment request.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentRequestCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentRequestCrn:
        type: string
        description: The deployment request crn.
  AbortDeploymentRequestResponse:
    type: object
    description: Response object for aborting a deployment request.
    x-workload: true
    x-client-only: true
  AlertFrequencyTolerance:
    type: object
    description: The alert frequency tolerance unit choices, including a default
    x-workload: true
    x-client-only: true
    required:
      - units
    properties:
      units:
        type: array
        description: The legal alert frequency values
        items:
          $ref: '#/definitions/AlertFrequencyUnit'
      defaultUnitId:
        type: string
        description: The default alert frequency ID to use as the default chooser value
  AlertFrequencyUnit:
    type: object
    description: The alert frequency unit to use in KPI tolerances and metrics
    x-workload: true
    x-client-only: true
    required:
      - id
      - label
    properties:
      id:
        type: string
        description: The id of the frequency unit
        enum:
          - SECONDS
          - MINUTES
          - HOURS
          - DAYS
      label:
        type: string
        description: The user-friendly label of the frequency unit
      abbreviation:
        type: string
        description: The abbreviation for frequency unit
  AssetReference:
    type: object
    description: A reference to an asset used in a flow parameter
    x-workload: true
    x-client-only: true
    properties:
      name:
        type: string
        description: The name of the asset
      path:
        type: string
        description: The path of the asset
      version:
        type: string
        description: The version of the asset
      environmentProvided:
        type: boolean
        description: Whether or not the asset is provided automatically by the environment. If true, the asset cannot removed or replaced.
  CancelNifiVersionUpdateRequest:
    type: object
    description: Request object for cancelling a NiFi version update for a deployment.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
  CancelNifiVersionUpdateResponse:
    type: object
    description: Response object for cancelling a NiFi version update for a deployment.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  ClusterSize:
    type: object
    description: Cluster scaling parameters
    x-workload: true
    x-client-only: true
    properties:
      name:
        type: string
        description: The name of this Cluster Size
      text:
        type: string
        description: The text (i.e., the human readable name) for this Cluster Size
      coresPerNode:
        type: integer
        format: int32
        description: The number of CPU Cores per node
      heapSize:
        type: number
        format: double
        description: The heap size
      enabled:
        type: boolean
        description: Flag to signal whether this ClusterSize is enabled
      memoryLimit:
        type: number
        format: double
        description: The memory limit
  ConfiguredAlert:
    type: object
    description: An alert configuration that specifies a configured frequency with lower and/or upper thresholds
    x-workload: true
    x-client-only: true
    properties:
      thresholdMoreThan:
        description: The optional moreThan threshold that should trigger an alert; at least one of thresholdMoreThan and thresholdLessThan is required
        $ref: '#/definitions/ConfiguredAlertThreshold'
      thresholdLessThan:
        description: The optional lessThan threshold that should trigger an alert
        $ref: '#/definitions/ConfiguredAlertThreshold'
      frequencyTolerance:
        description: The configured alert frequency tolerance for the KPI
        $ref: '#/definitions/ConfiguredAlertFrequencyTolerance'
  ConfiguredAlertFrequencyTolerance:
    type: object
    description: An alert configuration frequency tolerance for measuring an amount of time and unit for alert triggering
    x-workload: true
    x-client-only: true
    required:
      - unit
      - value
    properties:
      unit:
        description: The unit of time controlling how long a metric value can persist outside its boundaries before an alert is generated
        $ref: '#/definitions/AlertFrequencyUnit'
      value:
        type: number
        format: double
        description: The amount of time, associated with the given unit, a metric value can persist outside its boundaries before an alert is generated
  ConfiguredAlertThreshold:
    type: object
    description: A configured alert threshold to pair together a statistical unit and value
    x-workload: true
    x-client-only: true
    required:
      - unitId
      - value
    properties:
      unitId:
        type: string
        description: The identifier of the alert threshold unit to associate with the given threshold value
      value:
        type: number
        format: double
        description: The threshold value whose triggering causes an alert
  ConfiguredKpi:
    type: object
    description: An instantiated KPI specifying a metric on which to alert
    x-workload: true
    x-client-only: true
    required:
      - metricId
    properties:
      metricId:
        type: string
        description: The id of the associated metric
      id:
        type: string
        description: The id of the KPI; used only when viewing and editing existing KPIs
      metricComponentType:
        type: string
        description: The component type of the associated metric
        enum:
          - SYSTEM
          - NIFI_FLOW
          - NIFI_PROCESSOR
          - NIFI_PROCESS_GROUP
          - NIFI_CONNECTION
      alert:
        description: The alert specification for the associated metric
        $ref: '#/definitions/ConfiguredAlert'
      componentId:
        type: string
        description: The optional process group ID, processor ID, or connection ID. This is a composite ID containing a chain of process group IDs representing the component's full ancestry
  CreateAssetUpdateRequestRequest:
    type: object
    description: Request object for creating an asset update request
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
  CreateAssetUpdateRequestResponse:
    type: object
    description: Response object for creating an asset update request
    x-workload: true
    x-client-only: true
    properties:
      assetUpdateRequestCrn:
        type: string
        description: The CRN of the created asset update request
  CreateCustomNarConfigurationRequest:
    type: object
    description: Request object for creating a custom NAR configuration.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - configurationVersion
      - password
      - storageLocation
      - username
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      username:
        type: string
        description: The username used to access the storage location
      password:
        type: string
        description: The password used to access the storage location
      storageLocation:
        type: string
        description: The storage location, such as an S3 bucket or ADLS container
      configurationVersion:
        type: integer
        format: int32
        description: The version of the configuration
  CreateCustomNarConfigurationResponse:
    type: object
    description: Response for creating a custom NAR configuration.
    x-workload: true
    x-client-only: true
    required:
      - configurationVersion
      - password
      - storageLocation
      - username
    properties:
      username:
        type: string
        description: The username used to access the storage location
      password:
        type: string
        description: The password used to access the storage location
      storageLocation:
        type: string
        description: The storage location, such as an S3 bucket or ADLS container
      configurationVersion:
        type: integer
        format: int32
        description: The version of the configuration
      crn:
        type: string
        description: The CRN of the custom NAR configuration to update.
  CreateDeploymentRequest:
    type: object
    description: Request object to create a deployment.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - clusterSizeName
      - configurationVersion
      - deploymentRequestCrn
      - name
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      configurationVersion:
        type: integer
        format: int32
        description: The version of this configuration
      name:
        type: string
        description: The name of the deployment
      clusterSizeName:
        type: string
        description: The size of the cluster to deploy
        enum:
          - EXTRA_SMALL
          - SMALL
          - MEDIUM
          - LARGE
      deploymentRequestCrn:
        type: string
        description: The CRN of the deployment request.
      parameterGroups:
        type: array
        description: The list of flow parameter groups
        items:
          $ref: '#/definitions/FlowParameterGroup'
      autoScalingEnabled:
        type: boolean
        description: Specifies that auto-scaling should be enabled.
      flowMetricsScalingEnabled:
        type: boolean
        description: Specifies that Flow metrics should be enabled for scaling.
      autoScaleMinNodes:
        type: integer
        format: int32
        description: The minimum number of nodes that the cluster should allocate. May only be specified when autoScalingEnabled is true.
      autoScaleMaxNodes:
        type: integer
        format: int32
        description: The maximum number of nodes that the cluster should scale to. May only be specified when autoScalingEnabled is true.
      staticNodeCount:
        type: integer
        format: int32
        description: The static number of nodes that the cluster should allocate. May only be specified when autoScalingEnabled is false.
      kpis:
        type: array
        description: The list of configured KPIs
        items:
          $ref: '#/definitions/ConfiguredKpi'
      cfmNifiVersion:
        type: string
        description: The CFM NiFi version associated with the deployment
      autoStartFlow:
        type: boolean
        description: Indicates whether or not the flow should be started during deployment creation
      inboundHostname:
        type: string
        description: The FQDN of inbound hostname or just the prefix part
      listenComponents:
        type: array
        description: Listen components port and protocol data
        items:
          $ref: '#/definitions/ListenComponent'
      nodeStorageProfileName:
        type: string
        description: Node storage profile name
        enum:
          - STANDARD_AWS
          - STANDARD_AZURE
          - PERFORMANCE_AWS
          - PERFORMANCE_AZURE
          - LOCAL_K8S
      customNarConfigurationCrn:
        type: string
        description: The CRN of the custom NAR configuration.
  CreateDeploymentResponse:
    type: object
    description: Response object from creating a deployment.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  CreateInboundConnectionEndpointRequest:
    type: object
    description: Request object that contains FQDN for the Inbound Connection Endpoint to create
    x-workload: true
    x-client-only: true
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      hostname:
        type: string
        description: Fully qualified domain name
    required:
      - environmentCrn
  CreateInboundConnectionEndpointResponse:
    type: object
    description: Response object returned during Inbound Connection Endpoint creation
    x-workload: true
    x-client-only: true
    properties:
      inboundConnectionEndpointSummary:
        description: Data that describes the Inbound Connection Endpoint.
        $ref: '#/definitions/InboundConnectionEndpointSummary'
  DeleteCustomNarConfigurationRequest:
    type: object
    description: Request object for deleting a custom NAR configuration by CRN.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - configurationVersion
      - customNarConfigurationCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      customNarConfigurationCrn:
        type: string
        description: The CRN of the custom NAR configuration to delete.
      configurationVersion:
        type: integer
        format: int32
        description: The version of the configuration
  DeleteCustomNarConfigurationResponse:
    type: object
    description: Response object for deleting a custom NAR configuration.
    x-workload: true
    x-client-only: true
    required:
      - configurationVersion
      - password
      - storageLocation
      - username
    properties:
      username:
        type: string
        description: The username used to access the storage location
      password:
        type: string
        description: The password used to access the storage location
      storageLocation:
        type: string
        description: The storage location, such as an S3 bucket or ADLS container
      configurationVersion:
        type: integer
        format: int32
        description: The version of the configuration
      crn:
        type: string
        description: The CRN of the custom NAR configuration to update.
  DeleteInboundConnectionEndpointRequest:
    type: object
    description: Request object that contains the identifier of the Inbound Connection Endpoint to delete
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - crn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      crn:
        type: string
        description: The CRN of the Inbound Connection Endpoint
  DeleteInboundConnectionEndpointResponse:
    type: object
    description: Response object returned during deletion of an Inbound Connection Endpoint
    x-workload: true
    x-client-only: true
  DeploymentStatus:
    type: object
    description: The state and state message associated with a deployment
    x-workload: true
    x-client-only: true
    required:
      - detailedState
      - state
    properties:
      detailedState:
        type: string
        description: The detailed state that the deployment is currently in
        x-deprecated-enum-values: FAILED_TO_START,SUSPENDING_FLOW
        enum:
          - GOOD_HEALTH
          - FAILED_TO_STOP_FLOW
          - FAILED_TO_UPDATE_NIFI_VERSION
          - FAILED_TO_START_FLOW
          - FAILED_TO_RESTART
          - FLOW_STOPPED
          - FAILED_TO_DEPLOY
          - FAILED_TO_IMPORT
          - FAILED_TO_UPDATE
          - FAILED_TO_TERMINATE
          - NEW
          - CREATING_NODES
          - DEPLOYING_ASSETS
          - DEPLOYING_FLOW_DEFINITION
          - IMPORTING_FLOW
          - STARTING_FLOW
          - STOPPING_FLOW
          - UPDATING
          - UPDATING_NIFI_VERSION
          - CANCELLING_NIFI_VERSION_UPDATE
          - RESTARTING
          - SUSPENDING
          - RESUMING
          - SUSPENDED
          - FAILED_TO_SUSPEND
          - FAILED_TO_RESUME
          - TERMINATING
          - CANCEL_REQUESTED
          - STOPPED
          - UNKNOWN
          - UPGRADING
          - FAILED_TO_UPGRADE
          - ROLLING_BACK
          - KPI_OUT_OF_RANGE
          - CANNOT_AUTOSCALE
          - DEPLOYMENT_DISCONNECTED
          - UNUSED_LOGICAL_BAD_HEALTH
          - AT_CAPACITY
          - SDX_OUTPUT_CHANGED
          - METRICS_UNAVAILABLE
          - METERING_WARNING
          - METERING_OFFLINE
          - CERTIFICATE_RENEWED
          - NOT_HEALTHY
          - EXCESSIVE_OFFLOAD_TIME
          - FAILED_TO_START
          - SUSPENDING_FLOW
      state:
        type: string
        description: The state that the deployment is currently in
        x-deprecated-enum-values: SUSPENDING_FLOW
        enum:
          - DEPLOYING
          - GOOD_HEALTH
          - CONCERNING_HEALTH
          - BAD_HEALTH
          - IMPORTING_FLOW
          - STARTING_FLOW
          - STOPPING_FLOW
          - FLOW_STOPPED
          - UPDATING
          - TERMINATING
          - RESTARTING
          - SUSPENDING
          - RESUMING
          - SUSPENDED
          - UPGRADING
          - ROLLING_BACK
          - STOPPED
          - UNKNOWN
          - SUSPENDING_FLOW
      message:
        type: string
        description: Detail message relating to the current status of the deployment
  DescribeInboundConnectionEndpointRequest:
    type: object
    description: Request object that contains the identifier of the Inbound Connection Endpoint to describe
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - crn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      crn:
        type: string
        description: The CRN of the Inbound Connection Endpoint
  DescribeInboundConnectionEndpointResponse:
    type: object
    description: Response object that describes an Inbound Connection Endpoint
    x-workload: true
    x-client-only: true
    properties:
      inboundConnectionEndpointSummary:
        description: Data that describes the Inbound Connection Endpoint.
        $ref: '#/definitions/InboundConnectionEndpointSummary'
  EnvCloudRegion:
    type: object
    description: A cloud region
    x-workload: true
    x-client-only: true
    properties:
      name:
        type: string
        description: Name of the cloud region
      displayName:
        type: string
        description: Display-friendly name of the cloud region
  Error:
    type: object
    description: An object returned on an error.
    x-workload: true
    x-client-only: true
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  FlowParameter:
    type: object
    description: A flow parameter
    x-workload: true
    x-client-only: true
    properties:
      name:
        type: string
        description: The name of the parameter
      description:
        type: string
        description: The description of the param
      value:
        type: string
        description: The value of the parameter
        x-no-paramfile: true
      sensitive:
        type: boolean
        description: Whether or not the parameter value is sensitive
      type:
        type: string
        description: The type of parameter. Possibly TEXT, FILE, FILES, DIRECTORY
        enum:
          - TEXT
          - FILE
          - FILES
      assetReferences:
        type: array
        description: The list of referenced assets.
        items:
          $ref: '#/definitions/AssetReference'
      valueSet:
        type: boolean
        description: Indicates if the value of this parameter is set (i.e. not null)
        readOnly: true
  FlowParameterGroup:
    type: object
    description: A flow parameter group
    x-workload: true
    x-client-only: true
    properties:
      name:
        type: string
        description: The name of the parameter group
      parameters:
        type: array
        description: The parameters in the group
        items:
          $ref: '#/definitions/FlowParameter'
  GetCustomNarConfigurationRequest:
    type: object
    description: Request object for retrieving a custom NAR configuration by CRN.
    x-workload: true
    x-client-only: true
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      customNarConfigurationCrn:
        type: string
        description: The CRN of the custom NAR configuration to retrieve.
    required:
      - environmentCrn
  GetCustomNarConfigurationResponse:
    type: object
    description: Response object for retrieving a custom NAR configuration by CRN.
    x-workload: true
    x-client-only: true
    required:
      - configurationVersion
      - password
      - storageLocation
      - username
    properties:
      username:
        type: string
        description: The username used to access the storage location
      password:
        type: string
        description: The password used to access the storage location
      storageLocation:
        type: string
        description: The storage location, such as an S3 bucket or ADLS container
      configurationVersion:
        type: integer
        format: int32
        description: The version of the configuration
      crn:
        type: string
        description: The CRN of the custom NAR configuration to update.
  GetDefaultCustomNarConfigurationRequest:
    type: object
    description: Request object for retrieving the default custom NAR configuration.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
  GetDefaultCustomNarConfigurationResponse:
    type: object
    description: Response object for retrieving the default custom NAR configuration.
    x-workload: true
    x-client-only: true
    required:
      - configurationVersion
      - password
      - storageLocation
      - username
    properties:
      username:
        type: string
        description: The username used to access the storage location
      password:
        type: string
        description: The password used to access the storage location
      storageLocation:
        type: string
        description: The storage location, such as an S3 bucket or ADLS container
      configurationVersion:
        type: integer
        format: int32
        description: The version of the configuration
      crn:
        type: string
        description: The CRN of the custom NAR configuration to update.
  GetDeploymentConfigurationMetadataRequest:
    type: object
    description: Request object for retrieving deployment configuration metadata.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
  GetDeploymentConfigurationMetadataResponse:
    type: object
    description: Response object for retrieving deployment configuration metadata request.
    x-workload: true
    x-client-only: true
    properties:
      deploymentConfigurationMetadata:
        description: The deployment configuration metadata.
        $ref: '#/definitions/RpcDeploymentConfigurationMetadata'
  GetDeploymentConfigurationRequest:
    type: object
    description: Request object for retrieving deployment configuration.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
  GetDeploymentConfigurationResponse:
    type: object
    description: Response object for retrieving deployment configuration request.
    x-workload: true
    x-client-only: true
    properties:
      deploymentConfiguration:
        description: The deployment configuration.
        $ref: '#/definitions/RpcDeploymentConfiguration'
  GetDeploymentRequestDetailsRequest:
    type: object
    description: Request object for retrieving deployment request details.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentRequestCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentRequestCrn:
        type: string
        description: The deployment request crn.
  GetDeploymentRequestDetailsResponse:
    type: object
    description: Response object for retrieving deployment request details request.
    x-workload: true
    x-client-only: true
    properties:
      deploymentConfigurationMetadata:
        description: The deployment configuration metadata.
        $ref: '#/definitions/RpcDeploymentConfigurationMetadata'
  InboundConnectionEndpointCertificateSummary:
    type: object
    description: Inbound Connection Endpoint Certificate Summary
    x-workload: true
    x-client-only: true
    properties:
      expiration:
        type: integer
        format: int64
        description: The timestamp of when the Inbound Connection Endpoint Certificate expires
        readOnly: true
      certificateType:
        type: string
        description: The type of the Inbound Connection Endpoint Certificate
        readOnly: true
        enum:
          - CLIENT_ENTITY
          - CLIENT_CA
          - SERVER_ENTITY
      state:
        type: string
        description: The state of the Inbound Connection Endpoint Certificate
        readOnly: true
        enum:
          - PROVISIONING
          - CURRENT
          - EXPIRED
          - RENEWING
          - RENEWAL_FAILED
      statusMessage:
        type: string
        description: The status message of the Inbound Connection Endpoint Certificate
        readOnly: true
  InboundConnectionEndpointClientCertificateRequest:
    type: object
    description: Request object to retrieve Inbound Connection Endpoint client's certificate.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - crn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      crn:
        type: string
        description: The CRN of the Inbound Connection Endpoint
  InboundConnectionEndpointClientCertificateResponse:
    type: object
    description: Response object that contains the client's certificate.
    x-workload: true
    x-client-only: true
    properties:
      certificate:
        type: string
        description: The client's encoded certificate.
        readOnly: true
  InboundConnectionEndpointClientPrivateKeyRequest:
    type: object
    description: Request object to retrieve Inbound Connection Endpoint client's private key.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - crn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      crn:
        type: string
        description: The CRN of the Inbound Connection Endpoint
  InboundConnectionEndpointClientPrivateKeyResponse:
    type: object
    description: Response object that contains the client's private key.
    x-workload: true
    x-client-only: true
    properties:
      privateKey:
        type: string
        description: The client's encoded private key.
        readOnly: true
  InboundConnectionEndpointSummary:
    type: object
    description: Inbound Connection Endpoint Summary
    x-workload: true
    x-client-only: true
    properties:
      fullyQualifiedDomainName:
        type: string
        description: The FQDN of the inbound connection hostname
        readOnly: true
      state:
        type: string
        description: State of the Inbound Connection Endpoint
        readOnly: true
        enum:
          - UNASSIGNED
          - ASSIGNED
          - PROVISIONING_CERTIFICATES
          - RENEWING_CERTIFICATES
          - READY
          - FAILED
      deploymentCrn:
        type: string
        description: The CRN of the deployment the hostname is assigned to
        readOnly: true
      crn:
        type: string
        description: The CRN of the Inbound Connection Endpoint
        readOnly: true
      certificateSummaries:
        type: array
        description: The summaries of certificates associated with the Inbound Connection Endpoint
        readOnly: true
        uniqueItems: true
        items:
          $ref: '#/definitions/InboundConnectionEndpointCertificateSummary'
  KpiContextGroup:
    type: object
    description: Captures the use of a KPI in the context of a process group
    x-workload: true
    x-client-only: true
    required:
      - id
      - name
    properties:
      id:
        type: string
        description: The id of the containing process group
      name:
        type: string
        description: The name of the containing process group
      scopeComponents:
        type: array
        description: The scope components of the group
        items:
          $ref: '#/definitions/KpiScopeComponent'
  KpiMetaData:
    type: object
    description: A template for instantiating KPIs
    x-workload: true
    x-client-only: true
    required:
      - alertFrequencyTolerance
      - kpiScopes
      - unitTypes
    properties:
      kpiScopes:
        type: array
        description: The KPI scope meta data list, one per MetricComponentType.
        items:
          $ref: '#/definitions/KpiScopeMetaData'
      unitTypes:
        type: object
        description: The entire tree of legal unit types for all metrics.
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/KpiUnit'
      alertFrequencyTolerance:
        description: The alert frequency tolerance shared by all metrics.
        $ref: '#/definitions/AlertFrequencyTolerance'
  KpiScopeComponent:
    type: object
    description: Provides scoping when defining KPIs
    x-workload: true
    x-client-only: true
    required:
      - id
      - name
    properties:
      id:
        type: string
        description: The internal id of the scope, for example the connection ID
      name:
        type: string
        description: The child name to show in the hierarchical chooser
  KpiScopeMetaData:
    type: object
    description: Provides scoping meta data for use during KPI creation
    x-workload: true
    x-client-only: true
    required:
      - label
      - metricTypes
      - type
    properties:
      type:
        type: string
        description: The type of the scope
        enum:
          - SYSTEM
          - NIFI_FLOW
          - NIFI_PROCESSOR
          - NIFI_PROCESS_GROUP
          - NIFI_CONNECTION
      metricTypes:
        type: array
        description: The available metric types for the chosen scope type
        items:
          $ref: '#/definitions/KpiScopeMetricType'
      label:
        type: string
        description: The label to use for the chosen scope type
      contextGroups:
        type: array
        description: The context identifiers for the chosen scope type
        items:
          $ref: '#/definitions/KpiContextGroup'
      contextLabel:
        type: string
        description: The label to use for the context identifier, which depends on scope type.
  KpiScopeMetricType:
    type: object
    description: Provides the legal metric types for an owning scope
    x-workload: true
    x-client-only: true
    required:
      - defaultUnitId
      - id
      - label
      - unitTypeKey
    properties:
      id:
        type: string
        description: The internal id of the metric type
      label:
        type: string
        description: The user-visible label of the metric type
      unitTypeKey:
        type: string
        description: The unit type key for this metric
        enum:
          - DURATION
          - RATIO
          - SIZE
          - RATE
          - COUNT
      defaultUnitId:
        type: string
        description: The default unitId for this metric
      description:
        type: string
        description: The user-visible description of the metric type
  KpiUnit:
    type: object
    description: Captures the legal units for a metric, a means to avoid large numbers either before or after a decimal point
    x-workload: true
    x-client-only: true
    required:
      - factor
      - id
      - label
    properties:
      id:
        type: string
        description: The internal ID of the unit
      label:
        type: string
        description: The user-visible label of the unit
      factor:
        type: integer
        format: int64
        description: The conversion factor to use to normalize values with this unit into a common unit
  ListInboundConnectionEndpointsRequest:
    type: object
    description: Request object to use to list Inbound Connection Endpoints
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
  ListInboundConnectionEndpointsResponse:
    type: object
    description: Response object that contains a list of Inbound Connection Endpoints
    x-workload: true
    x-client-only: true
    properties:
      inboundConnectionEndpoints:
        type: array
        description: A list of Inbound Connection Endpoints.
        readOnly: true
        items:
          $ref: '#/definitions/InboundConnectionEndpointSummary'
  ListNifiVersionsRequest:
    type: object
    description: Request object for listing the supported NiFi versions.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
  ListNifiVersionsResponse:
    type: object
    description: Response object for listing the supported NiFi versions.
    x-workload: true
    x-client-only: true
    properties:
      nifiVersions:
        type: array
        description: A list of supported NiFi versions.
        items:
          type: string
  ListenComponent:
    type: object
    description: Provides subset of metadata of a Listen* component
    x-workload: true
    x-client-only: true
    required:
      - protocol
    properties:
      protocol:
        type: string
        description: Inbound protocol
        enum:
          - TCP
          - UDP
      listenComponentType:
        type: string
        description: Listen component type
        readOnly: true
        enum:
          - ListenHTTP
          - ListenFTP
          - ListenSyslog
          - ListenRELP
          - ListenTCP
          - ListenUDP
          - ListenTCPRecord
          - ListenUDPRecord
          - ListenGRPC
          - ListenSMTP
          - ListenBeats
          - ListenLumberjack
          - ListenWebSocket
          - HandleHttpRequest
      port:
        type: string
        description: Inbound port
  NodeStorageProfileMetadata:
    type: object
    description: Provides details about the node storage options.
    x-workload: true
    x-client-only: true
    required:
      - contentRepoSize
      - flowfileRepoSize
      - iops
      - provenanceRepoSize
      - storageVolumeType
      - throughput
    properties:
      contentRepoSize:
        type: integer
        format: int32
        description: Content repository size
        readOnly: true
      provenanceRepoSize:
        type: integer
        format: int32
        description: Provenance repository size
        readOnly: true
      flowfileRepoSize:
        type: integer
        format: int32
        description: FlowFile repository size
        readOnly: true
      iops:
        type: string
        description: IOPS
        readOnly: true
      throughput:
        type: string
        description: Throughput
        readOnly: true
      storageVolumeType:
        type: string
        description: Storage volume type
        readOnly: true
      name:
        type: string
        description: The name of this Storage Profile
        enum:
          - LEGACY_STANDARD
          - LEGACY_PERFORMANCE
          - STANDARD_AWS
          - STANDARD_AZURE
          - PERFORMANCE_AWS
          - PERFORMANCE_AZURE
          - LOCAL_K8S
      text:
        type: string
        description: The text (i.e., the human readable name) for this Storage Profile
  RenewInboundConnectionEndpointCertificateRequest:
    type: object
    description: Request object to renew Inbound Connection Endpoint certificate(s)
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - crn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      crn:
        type: string
        description: The CRN of the Inbound Connection Endpoint
      renewServerCertificate:
        type: boolean
        description: Whether to renew Inbound Connection Endpoint's server certificate
      renewClientCertificates:
        type: boolean
        description: Whether to renew Inbound Connection Endpoint's client certificates
      revokeClientCertificates:
        type: boolean
        description: Whether to revoke existing Inbound Connection Endpoint's client certificates
  RenewInboundConnectionEndpointCertificateResponse:
    type: object
    description: Response object for Inbound Connection Endpoint certificate renewal request
    x-workload: true
    x-client-only: true
  RestartDeploymentRequest:
    type: object
    description: Request object to restart a deployment.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
      forceStopFlow:
        type: boolean
        description: Whether to force stop the NiFi flow during restart.
  RestartDeploymentResponse:
    type: object
    description: Response object for restarting a deployment request.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  ResumeDeploymentRequest:
    type: object
    description: Request object to resume a deployment.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
  ResumeDeploymentResponse:
    type: object
    description: Response object for resuming a deployment.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  RpcDeployment:
    type: object
    description: Provides details about a deployment.
    x-workload: true
    x-client-only: true
    required:
      - name
      - service
      - status
    properties:
      name:
        type: string
        description: The name of the deployment
      status:
        description: The status of the deployment
        $ref: '#/definitions/DeploymentStatus'
      service:
        description: Simple information about the DataFlow service of the deployment
        $ref: '#/definitions/ServiceMeta'
      crn:
        type: string
        description: The CRN of the deployment
      activeInfoAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an info
      activeWarningAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as a warning
      activeErrorAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an error
      created:
        type: integer
        format: int64
        description: Timestamp of the creation of the deployment
      updated:
        type: integer
        format: int64
        description: Timestamp of the last time the deployment was modified
      validActions:
        type: array
        description: Valid actions that can be applied to the deployment in its current state
        uniqueItems: true
        items:
          type: string
          enum:
            - VIEW_NIFI
            - START_FLOW
            - STOP_FLOW
            - EDIT
            - CANCEL_CREATE
            - TERMINATE
            - VIEW_METRICS
            - UPDATE_NIFI_VERSION
            - CANCEL_NIFI_VERSION_UPDATE
            - RESTART_DEPLOYMENT
            - MANAGE_DEPLOYMENT
            - EXPORT
            - SUSPEND
            - RESUME
            - DOWNLOAD_LOG
            - SUSPEND_FLOW
          x-deprecated-enum-values: SUSPEND_FLOW
      nifiUrl:
        type: string
        description: The url to open the deployed flow in NiFi
      clusterSize:
        type: string
        description: The initial size of the deployment
        enum:
          - EXTRA_SMALL
          - SMALL
          - MEDIUM
          - LARGE
      coresPerNode:
        type: integer
        format: int32
        description: The number of cores per node for the deployment
      heapSize:
        type: number
        format: double
        description: The heap size for the deployment
      autoscalingEnabled:
        type: boolean
        description: Whether or not autoscaling is enabled for this deployment
      flowMetricsScalingEnabled:
        type: boolean
        description: Whether or not flow metrics scaling is enabled for this deployment
      autoscaleMinNodes:
        type: integer
        format: int32
        description: The minimum number of nodes that the deployment will allocate; can only be used when autoscalingEnabled is true
      autoscaleMaxNodes:
        type: integer
        format: int32
        description: The maximum number of nodes that the deployment can scale up to; can only be used when autoscalingEnabled is true
      staticNodeCount:
        type: integer
        format: int32
        description: The static number of nodes of the deployment; can only be used when autoscalingEnabled is false
      flowName:
        type: string
        description: The name of the flow
      flowVersion:
        type: integer
        format: int32
        description: The version of the flow
      flowVersionCrn:
        type: string
        description: The deployment's current flow version CRN
      flowCrn:
        type: string
        description: The deployment's current flow CRN
      creatorCrn:
        type: string
        description: The CRN of the user who deployed the flow
      artifactTypeName:
        type: string
        description: The type of artifact of the flow
      currentNodeCount:
        type: integer
        format: int32
        description: The current node count
      deployedByUsername:
        type: string
        description: The username of the person who deployed the flow
      deployedByName:
        type: string
        description: The name of the person who deployed the flow
      dfxLocalUrl:
        type: string
        description: Base URL to the CDF Local instance running this deployment
      configurationVersion:
        type: integer
        format: int32
        description: The current version of the deployment's configuration
      lastUpdatedByUsername:
        type: string
        description: The username of the last person to update the deployment
      cfmNifiVersion:
        type: string
        description: The CFM NiFi version associated with the deployment
      memoryLimit:
        type: number
        format: double
        description: The memory limit of the deployment
      inboundConnectionEndpointId:
        type: string
        description: The ID of Inbound Connection Endpoint assigned to the deployment
      testSession:
        type: boolean
        description: Indicates this deployment was created as a test session for designing a flow
      flowDesignerId:
        type: string
        description: The ID of the flow design for a test session deployment.
      customNarConfigurationId:
        type: string
        description: The identifier of the custom NAR configuration, if used.
      nodeStorageProfile:
        type: string
        description: The node storage profile
  RpcDeploymentConfiguration:
    type: object
    description: Provides all of the configuration that dictates how a flow should be deployed
    x-workload: true
    x-client-only: true
    required:
      - configurationVersion
    properties:
      configurationVersion:
        type: integer
        format: int32
        description: The version of this configuration
      parameterGroups:
        type: array
        description: The list of flow parameter groups
        items:
          $ref: '#/definitions/FlowParameterGroup'
      autoScalingEnabled:
        type: boolean
        description: Specifies that auto-scaling should be enabled.
      flowMetricsScalingEnabled:
        type: boolean
        description: Specifies that Flow metrics should be enabled for scaling.
      autoScaleMinNodes:
        type: integer
        format: int32
        description: The minimum number of nodes that the cluster should allocate. May only be specified when autoScalingEnabled is true.
      autoScaleMaxNodes:
        type: integer
        format: int32
        description: The maximum number of nodes that the cluster should scale to. May only be specified when autoScalingEnabled is true.
      staticNodeCount:
        type: integer
        format: int32
        description: The static number of nodes that the cluster should allocate. May only be specified when autoScalingEnabled is false.
      kpis:
        type: array
        description: The list of configured KPIs
        items:
          $ref: '#/definitions/ConfiguredKpi'
      deploymentId:
        type: string
        description: The id of the deployment.
      deploymentCrn:
        type: string
        description: The CRN of the deployment.
      name:
        type: string
        description: The name of the deployment
      cfmNifiVersion:
        type: string
        description: The CFM NiFi version associated with the deployment
      autoStartFlow:
        type: boolean
        description: Indicates whether or not the flow should be started during deployment creation
      clusterSizeName:
        type: string
        description: The size of the cluster to deploy
        enum:
          - EXTRA_SMALL
          - SMALL
          - MEDIUM
          - LARGE
      nodeStorageProfileName:
        type: string
        description: Node storage profile name
        enum:
          - LEGACY_STANDARD
          - LEGACY_PERFORMANCE
          - STANDARD_AWS
          - STANDARD_AZURE
          - PERFORMANCE_AWS
          - PERFORMANCE_AZURE
          - LOCAL_K8S
      parametersDirty:
        type: boolean
        description: Indicates whether or not all current parameter values have successfully been applied to NiFi
        readOnly: true
      kpisDirty:
        type: boolean
        description: Indicates whether or not the current KPIs have successfully been deployed as alert rules
        readOnly: true
      sizingAndScalingDirty:
        type: boolean
        description: Indicates whether or not the current sizing and scaling configuration has been successfully applied in Kubernetes
        readOnly: true
      lastUpdatedByUsername:
        type: string
        description: The username of the last person to update the deployment configuration
        readOnly: true
      inboundHostname:
        type: string
        description: The inbound hostname
      listenComponents:
        type: array
        description: Listen components port and protocol data
        items:
          $ref: '#/definitions/ListenComponent'
  RpcDeploymentConfigurationMetadata:
    type: object
    description: Provides details about the deployment and all of the different configuration items that are available.
    x-workload: true
    x-client-only: true
    required:
      - flowCrn
      - flowName
      - flowVersion
      - flowVersionCrn
      - requiresEnvironmentSslContextService
      - service
    properties:
      flowCrn:
        type: string
        description: The CRN of the flow to deploy
      flowName:
        type: string
        description: The name of the flow to deploy
      flowVersion:
        type: integer
        format: int32
        description: The version of the flow to deploy
      flowVersionCrn:
        type: string
        description: The CRN for the flow version
      service:
        description: Simple information about the DataFlow service of the deployment
        $ref: '#/definitions/ServiceMeta'
      requiresEnvironmentSslContextService:
        type: boolean
        description: A flag indicating if the flow requires an Environment specific SSLContextService
        readOnly: true
      artifactTypeName:
        type: string
        description: The type of the artifact of the flow.
        readOnly: true
      parameterGroups:
        type: array
        description: The list of flow parameter groups
        items:
          $ref: '#/definitions/FlowParameterGroup'
      kpiMetaData:
        description: The KPI meta data
        $ref: '#/definitions/KpiMetaData'
      clusterSizingOptions:
        type: array
        description: The options that are available for determining the size of the deployed cluster
        items:
          $ref: '#/definitions/ClusterSize'
      nodeStorageProfileMetadata:
        type: array
        description: The list of node storage profiles
        items:
          $ref: '#/definitions/NodeStorageProfileMetadata'
  ServiceMeta:
    type: object
    description: The meta information about a DataFlow service.
    x-workload: true
    x-client-only: true
    required:
      - cloudPlatform
      - crn
      - environmentCrn
      - name
      - region
    properties:
      crn:
        type: string
        description: The CRN of the DataFlow service
      name:
        type: string
        description: The name of the DataFlow service
      cloudPlatform:
        type: string
        description: The cloudPlatform flag of the DataFlow service
        enum:
          - AWS
          - AZURE
          - YARN
          - YCLOUD
          - GCP
          - OPENSTACK
          - LOCAL_K8S
          - MOCK
      region:
        description: The region of the DataFlow service
        $ref: '#/definitions/EnvCloudRegion'
      environmentCrn:
        type: string
        description: Crn of associated CDP environment
  StartFlowRequest:
    type: object
    description: Request object for starting the NiFi flow.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
  StartFlowResponse:
    type: object
    description: Response object for starting the NiFi flow.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  StopFlowRequest:
    type: object
    description: Request object for stopping the NiFi flow.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
  StopFlowResponse:
    type: object
    description: Response object for stopping the NiFi flow.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  SuspendDeploymentRequest:
    type: object
    description: Request object to suspend a deployment.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
  SuspendDeploymentResponse:
    type: object
    description: Response object for suspending a deployment.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  TerminateDeploymentRequest:
    type: object
    description: Request object to terminate a deployment.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
  TerminateDeploymentResponse:
    type: object
    description: Response object for terminating a deployment request.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  TransitionFlowRequest:
    type: object
    description: Request object for transitioning the state of the NiFi flow.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - deploymentCrn
      - flowState
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
      flowState:
        type: string
        description: The desired state of the NiFi flow
        enum:
          - STARTED
          - SUSPENDED
          - STOPPED
  TransitionFlowResponse:
    type: object
    description: Response object for transitioning the state of the NiFi flow.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  UpdateCustomNarConfigurationRequest:
    type: object
    description: Request object to update a custom NAR configuration.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - configurationVersion
      - password
      - storageLocation
      - username
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      username:
        type: string
        description: The username used to access the storage location
      password:
        type: string
        description: The password used to access the storage location
      storageLocation:
        type: string
        description: The storage location, such as an S3 bucket or ADLS container
      configurationVersion:
        type: integer
        format: int32
        description: The version of the configuration
      crn:
        type: string
        description: The CRN of the custom NAR configuration to update.
  UpdateCustomNarConfigurationResponse:
    type: object
    description: Response object for updating a custom NAR configuration.
    x-workload: true
    x-client-only: true
    required:
      - configurationVersion
      - password
      - storageLocation
      - username
    properties:
      username:
        type: string
        description: The username used to access the storage location
      password:
        type: string
        description: The password used to access the storage location
      storageLocation:
        type: string
        description: The storage location, such as an S3 bucket or ADLS container
      configurationVersion:
        type: integer
        format: int32
        description: The version of the configuration
      crn:
        type: string
        description: The CRN of the custom NAR configuration to update.
  UpdateDeploymentRequest:
    type: object
    description: Provides all of the configuration that dictates how a flow should be deployed
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - configurationVersion
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      configurationVersion:
        type: integer
        format: int32
        description: The version of this configuration
      deploymentCrn:
        type: string
        description: The CRN of the existing deployment to be updated.
      parameterGroups:
        type: array
        description: The list of flow parameter groups
        items:
          $ref: '#/definitions/FlowParameterGroup'
      autoScalingEnabled:
        type: boolean
        description: Specifies that auto-scaling should be enabled.
      flowMetricsScalingEnabled:
        type: boolean
        description: Specifies that Flow metrics should be enabled for scaling.
      autoScaleMinNodes:
        type: integer
        format: int32
        description: The minimum number of nodes that the cluster should allocate. May only be specified when autoScalingEnabled is true.
      autoScaleMaxNodes:
        type: integer
        format: int32
        description: The maximum number of nodes that the cluster should scale to. May only be specified when autoScalingEnabled is true.
      staticNodeCount:
        type: integer
        format: int32
        description: The static number of nodes that the cluster should allocate. May only be specified when autoScalingEnabled is false.
      kpis:
        type: array
        description: The list of configured KPIs
        items:
          $ref: '#/definitions/ConfiguredKpi'
      clusterSizeName:
        type: string
        description: The deployment t-shirt size
        enum:
          - EXTRA_SMALL
          - SMALL
          - MEDIUM
          - LARGE
      assetUpdateRequestCrn:
        type: string
        description: The CRN of the asset update request. Required when updating assets of an existing deployment.
  UpdateDeploymentResponse:
    type: object
    description: Response object from updating a deployment.
    x-workload: true
    x-client-only: true
    properties:
      deploymentConfiguration:
        description: The deployment configuration.
        $ref: '#/definitions/RpcDeploymentConfiguration'
  UpdateNifiVersionRequest:
    type: object
    description: Request object for updating the NiFi version of a deployment.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - cfmNifiVersion
      - deploymentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      deploymentCrn:
        type: string
        description: The deployment crn.
      cfmNifiVersion:
        type: string
        description: The NiFi version to which to update the deployment.
  UpdateNifiVersionResponse:
    type: object
    description: Response object for updating the NiFi version of a deployment.
    x-workload: true
    x-client-only: true
    properties:
      deployment:
        description: The deployment.
        $ref: '#/definitions/RpcDeployment'
  UploadAssetRequest:
    type: object
    description: Request object for uploading an asset
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - filePath
      - parameterGroup
      - parameterName
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      parameterGroup:
        type: string
        description: The name of the parameter group
      parameterName:
        type: string
        description: The name of the parameter within the parameter group
      filePath:
        type: string
        description: The full local path to the file being uploaded
      deploymentRequestCrn:
        type: string
        description: The CRN of the deployment request. Required during initial deployment.
      deploymentName:
        type: string
        description: The name of the deployment. Required during initial deployment.
      assetUpdateRequestCrn:
        type: string
        description: The CRN of the asset update request. Required when updating assets of an existing deployment.
  UploadAssetResponse:
    type: object
    description: Response for uploading an asset.
    x-workload: true
    x-client-only: true
  ValidateCustomNarConfigurationRequest:
    type: object
    description: Request object for validating a custom NAR configuration.
    x-workload: true
    x-client-only: true
    required:
      - environmentCrn
      - configurationVersion
      - password
      - storageLocation
      - username
    properties:
      environmentCrn:
        type: string
        description: The CRN of an environment to execute the command.
      username:
        type: string
        description: The username used to access the storage location
      password:
        type: string
        description: The password used to access the storage location
      storageLocation:
        type: string
        description: The storage location, such as an S3 bucket or ADLS container
      configurationVersion:
        type: integer
        format: int32
        description: The version of the configuration
  ValidateCustomNarConfigurationResponse:
    type: object
    description: Response object for validating custom NAR configuration.
    x-workload: true
    x-client-only: true
