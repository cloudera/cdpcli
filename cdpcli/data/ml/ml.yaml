x-generated: Automatically generated by CDP protoc plugin. Do not edit manually.
swagger: '2.0'
x-endpoint-name: ml
x-products: CDP
x-form-factors: public,private
x-cdp-releases: PUBLIC
info:
  version: __API_VERSION__
  title: Cloudera Machine Learning
  license:
    name: Apache 2.0
  description: Install and manage Cloudera Machine Learning applications.
  termsOfService: https://www.cloudera.com/legal/commercial-terms-and-conditions.html
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/ml/createWorkspace:
    post:
      summary: Create a Cloudera Machine Learning workspace.
      description: Provision a Kubernetes cluster and install the Cloudera Machine Learning application in it.
      operationId: createWorkspace
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateWorkspaceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateWorkspaceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/ml/deleteWorkspace:
    post:
      summary: Delete Cloudera Machine Learning Workspace.
      description: Deletes a Cloudera Machine Learning workspace.
      operationId: deleteWorkspace
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteWorkspaceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteWorkspaceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/ml/describeWorkspace:
    post:
      summary: Describe Cloudera Machine Learning Workspace.
      description: Describes a Cloudera Machine Learning workspace.
      operationId: describeWorkspace
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeWorkspaceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeWorkspaceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/ml/getAuditEvents:
    post:
      summary: Gets all the events belong to a workspace crn.
      description: Gets all the events belong to a workspace crn.
      operationId: getAuditEvents
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAuditEventsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetAuditEventsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/ml/getKubeconfig:
    post:
      summary: ListWorkspaceAccess Cloudera Machine Learning Workspace.
      description: Lists users that can perform Kubernetes operations on a Cloudera Machine Learning workspace via EKS.
      operationId: getKubeconfig
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetKubeconfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetKubeconfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/ml/getLatestWorkspaceVersion:
    post:
      summary: GetLatestWorkspaceVersion Cloudera Machine Learning Workspace.
      description: Retrieves the latest version that Cloudera Machine Learning deploys to workspaces.
      operationId: getLatestWorkspaceVersion
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLatestWorkspaceVersionRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetLatestWorkspaceVersionResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/ml/getLogs:
    post:
      summary: Gets all the logs belong to a request id.
      description: Gets all the logs belong to a request id.
      operationId: getLogs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLogsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetLogsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/ml/grantWorkspaceAccess:
    post:
      summary: GrantWorkspaceAccess Cloudera Machine Learning Workspace.
      description: Grants an AWS user to perform Kubernetes operations on a Cloudera Machine Learning workspace via EKS.
      operationId: grantWorkspaceAccess
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GrantWorkspaceAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GrantWorkspaceAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/ml/listWorkspaceAccess:
    post:
      summary: ListWorkspaceAccess Cloudera Machine Learning Workspace.
      description: Lists users that can perform Kubernetes operations on a Cloudera Machine Learning workspace via EKS.
      operationId: listWorkspaceAccess
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListWorkspaceAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListWorkspaceAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/ml/listWorkspaces:
    post:
      summary: List Cloudera Machine Learning workspaces.
      description: List Cloudera Machine Learning workspaces.
      operationId: listWorkspaces
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListWorkspacesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListWorkspacesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-skip-auditing: true
  /api/v1/ml/modifyClusterInstanceGroup:
    post:
      summary: Modify Cloudera Machine Learning workspace cluster instance group.
      description: Modify a Cloudera Machine Learning workspace cluster instance group.
      operationId: modifyClusterInstanceGroup
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyClusterInstanceGroupRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ModifyClusterInstanceGroupResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/ml/modifyClusterSecurity:
    post:
      summary: Modify Cloudera Machine Learning workspace cluster security.
      description: Modify a Cloudera Machine Learning workspace cluster security.
      operationId: modifyClusterSecurity
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyClusterSecurityRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ModifyClusterSecurityResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/ml/modifyWorkspaceLoadBalancer:
    post:
      summary: Modify Cloudera Machine Learning workspace loadbalancer.
      description: Modify a Cloudera Machine Learning workspace loadbalancer.
      operationId: modifyWorkspaceLoadBalancer
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyWorkspaceLoadBalancerRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ModifyWorkspaceLoadBalancerResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/ml/revokeWorkspaceAccess:
    post:
      summary: RevokeWorkspaceAccess Cloudera Machine Learning Workspace.
      description: Revokes an AWS user to perform Kubernetes operations on a Cloudera Machine Learning workspace via EKS.
      operationId: revokeWorkspaceAccess
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RevokeWorkspaceAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RevokeWorkspaceAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/ml/upgradeWorkspace:
    post:
      summary: Upgrade Cloudera Machine Learning workspace.
      description: Upgrades a Cloudera Machine Learning workspace to the latest available version.
      operationId: upgradeWorkspace
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeWorkspaceRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeWorkspaceResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
definitions:
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  RootVolume:
    type: object
    description: Configuration for instance root device volume
    required:
      - size
    properties:
      size:
        type: integer
        format: int64
        description: The volume size in GB.
  GetLogsRequest:
    type: object
    description: GetLogsRequestfor getting logs for a request ID.
    required:
      - workspaceCrn
      - requestID
    properties:
      workspaceCrn:
        type: string
        description: WorkspaceCrn the requestID belongs to.
      requestID:
        type: string
        description: Unique Key to identify a set of logs.
      fetchAll:
        type: boolean
        description: Flag to fetch all logs.
      pageSize:
        type: integer
        format: int32
        description: Limit the number of logs.
      offset:
        type: integer
        format: int32
        description: offset from which the logs should be fetched.
  GetLogsResponse:
    type: object
    description: GetLogsResponse contains all the logs for a given request id.
    required:
      - auditLogs
    properties:
      auditLogs:
        description: Contains all the logs for a given request id.
        $ref: '#/definitions/AuditLogs'
  AuditLogs:
    type: object
    description: AuditLogs contains all the logs for a given request id.
    required:
      - requestID
      - count
      - logs
    properties:
      requestID:
        type: string
        description: The request ID associated with a long-running operation to fetch the logs for.
      count:
        type: integer
        format: int32
        description: Total number of logs associated with the request id.
      logs:
        type: array
        items:
          $ref: '#/definitions/AuditLog'
        description: Contains all the logs for a given request id.
  AuditLog:
    type: object
    description: Audit log represents an individual log.
    required:
      - createdDate
      - log
    properties:
      createdDate:
        type: string
        format: date-time
        description: Time at which the log is created.
      log:
        type: string
        description: Log description.
  GetAuditEventsRequest:
    type: object
    description: GetAuditEventsRequest to get all audit events for a given workspace crn.
    required:
      - workspaceCrn
    properties:
      workspaceCrn:
        type: string
        description: Workspace crn for which audit events to be fetched.
  GetAuditEventsResponse:
    type: object
    description: GetAuditEventsResponse containes all the audit events for a given workspace crn.
    required:
      - auditEvents
    properties:
      auditEvents:
        description: Contains all the audit events for a given workspace crn.
        $ref: '#/definitions/AuditEvents'
  AuditEvents:
    type: object
    description: AuditEvents contains all the audit events for a given workspace crn.
    required:
      - workspaceCrn
      - events
    properties:
      workspaceCrn:
        type: string
        description: Workspace crn unique for the set of audit events.
      events:
        type: array
        items:
          $ref: '#/definitions/AuditEvent'
        description: AuditEvent belong to the workspace crn.
  AuditEvent:
    type: object
    description: Audit event descibes an performed or performing in a given workspace.
    required:
      - workspaceCrn
      - userCrn
      - requestID
      - action
      - createdDate
    properties:
      workspaceCrn:
        type: string
        description: Workspace crn where the event observed.
      userCrn:
        type: string
        description: UserCrn to track which user has caused the event.
      requestID:
        type: string
        description: Unique request ID to keep track of event.
      action:
        type: string
        description: Action the user has generated.
      createdDate:
        type: string
        format: date-time
        description: Time at creation of event.
  Autoscaling:
    type: object
    description: Configuration for instance auto scaling.
    required:
      - minInstances
      - maxInstances
    properties:
      minInstances:
        type: integer
        format: int32
        description: The minimum number of instance for auto scaling.
      maxInstances:
        type: integer
        format: int32
        description: The maximum number of instance for auto scaling.
      enabled:
        type: boolean
        description: The boolean flag to enable the auto scaling.
  InstanceGroup:
    type: object
    description: Contains the necessary info for an instance group.
    required:
      - instanceType
    properties:
      instanceType:
        type: string
        description: The cloud provider instance type for the node instance.
      instanceTier:
        type: string
        description: The tier of the instance i.e. on-demand/spot.
      instanceCount:
        type: integer
        format: int32
        description: The initial number of instance node.
      name:
        type: string
        description: The unique name of the instance group.
      ingressRules:
        type: array
        items:
          type: string
        description: The networking rules for the ingress.
      rootVolume:
        description: The root volume of the instance.
        $ref: '#/definitions/RootVolume'
      autoscaling:
        description: The auto scaling configuration.
        $ref: '#/definitions/Autoscaling'
  WorkspaceInstanceGroup:
    type: object
    description: Instance group information to show in workspace details.
    required:
      - instanceType
      - instanceCount
      - instanceGroupName
      - minInstances
      - maxInstances
      - instances
      - tags
    properties:
      instanceType:
        type: string
        description: The cloud provider instance type for the node instance.
      instanceCount:
        type: integer
        format: int32
        description: The initial number of instance node.
      instanceGroupName:
        type: string
        description: The unique name of the instance group.
      minInstances:
        type: integer
        format: int32
        description: The minimum number of instances that can be deployed to this instance group. If the value is 0, the group might be empty.
      maxInstances:
        type: integer
        format: int32
        description: The maximum number of instances that can be deployed to this instance group.
      instances:
        type: array
        items:
          $ref: '#/definitions/Instance'
        description: Instances in the instance group.
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
        description: Tags are key/value pairs that are applied to all tag-able resources deployed in the workspace's cloud environment.
  Instance:
    type: object
    description: Represents each instance in an instance group.
    required:
      - instanceId
      - availabilityZone
    properties:
      instanceId:
        type: string
        description: Unique instance Id generated by the cloud provider.
      availabilityZone:
        type: string
        description: Availability zone the instance belongs to.
  Tag:
    type: object
    description: Contains a single tag entry associated with a workspace.
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The name for the tag.
      value:
        type: string
        description: The value for the tag.
  ProvisionTag:
    type: object
    description: Contains a single tag entry that will be configured on cloud resources associated with a workspace.
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The name for the tag.
      value:
        type: string
        description: The value for the tag.
  ProvisionK8sRequest:
    type: object
    description: Request object for workspace provision.
    required:
      - instanceGroups
      - environmentName
    properties:
      instanceGroups:
        type: array
        items:
          $ref: '#/definitions/InstanceGroup'
        description: The instance groups.
      environmentName:
        type: string
        description: The environment for the workspace to create.
      tags:
        type: array
        items:
          $ref: '#/definitions/ProvisionTag'
        description: Tags to add to the cloud provider resources created. This is in addition to any tags added by Cloudera.
      network:
        description: The overlay network for an AWS Kubernetes cluster's CNI.
        $ref: '#/definitions/OverlayNetwork'
  OverlayNetwork:
    type: object
    description: Contains the information about overlay network.
    properties:
      plugin:
        type: string
        description: 'The plugin specifies specific cni vendor, ex: calico, weave etc.'
      topology:
        description: The options for overlay topology.
        $ref: '#/definitions/Topology'
  Topology:
    type: object
    description: Contains the information about topology.
    properties:
      subnets:
        type: array
        items:
          type: string
        description: The options for subnets.
  ExistingDatabaseConfig:
    type: object
    description: Configurations for bringing an existing database for model metrics
    properties:
      existingDatabaseHost:
        type: string
        description: Optionally provide a Postgresql database host to export model metrics to.
      existingDatabasePort:
        type: string
        description: Optionally provide a Postgresql database port to export model metrics to.
      existingDatabaseName:
        type: string
        description: Optionally provide a Postgresql database name to export model metrics to.
      existingDatabaseUser:
        type: string
        description: Optionally provide a Postgresql database user to use when exporting model metrics.
      existingDatabasePassword:
        type: string
        description: Optionally provide a Postgresql database password to use when exporting model metrics.
        x-sensitive: true
  CreateWorkspaceRequest:
    type: object
    description: Request object for the CreateWorkspace method.
    required:
      - environmentName
      - workspaceName
    properties:
      environmentName:
        type: string
        description: The environment for the workspace to create.
      workspaceName:
        type: string
        description: The name of the workspace to create.
      usePublicLoadBalancer:
        type: boolean
        description: The boolean flag to request public load balancer. By default private load balancer is used.
      disableTLS:
        type: boolean
        description: The boolean flag to disable TLS setup for workspace. By default the TLS is enabled.
      provisionK8sRequest:
        description: The request for Kubernetes workspace provision.
        $ref: '#/definitions/ProvisionK8sRequest'
      enableMonitoring:
        type: boolean
        description: The boolean flag is used to enable mlonitoring. By default monitoring is disabled.
      enableGovernance:
        type: boolean
        description: Enables Cloudera Machine Learning governance by integrating with Cloudera Atlas. By default, this flag is disabled.
      existingNFS:
        type: string
        description: Optionally use an existing NFS by providing the hostname and desired path (Azure and Private Cloud only).
      loadBalancerIPWhitelists:
        type: array
        items:
          type: string
        description: The whitelist of ips for loadBalancer.
      nfsVersion:
        type: string
        description: The NFS Protocol version of the NFS server we are using for Azure and Private Cloud.
      enableModelMetrics:
        type: boolean
        description: Enables the model metrics service for exporting metrics for models to a metrics store.
      existingDatabaseConfig:
        description: Optional configurations for an existing Postgres to export model metrics to.
        $ref: '#/definitions/ExistingDatabaseConfig'
      whitelistAuthorizedIPRanges:
        type: boolean
        description: Whether to whitelist only authorizedIPRanges given or all public IPs.
      authorizedIPRanges:
        type: array
        items:
          type: string
        description: The whitelist of CIDR blocks which can access the API server.
  CreateWorkspaceResponse:
    type: object
    description: Response object for the CreateWorkspace method.
  ListWorkspacesRequest:
    type: object
    description: Request object for the ListWorkspaces method.
  ListWorkspacesResponse:
    type: object
    description: Response object for the ListWorkspaces method.
    properties:
      workspaces:
        type: array
        items:
          $ref: '#/definitions/WorkspaceSummary'
        description: The list of workspaces.
  WorkspaceSummary:
    type: object
    description: A Cloudera Machine Learning workspace which includes the deployed configuration details.
    required:
      - instanceName
      - environmentName
      - instanceStatus
      - instanceUrl
      - environmentCrn
      - crn
      - k8sClusterName
      - creatorCrn
      - version
      - httpsEnabled
      - filesystemID
      - cloudPlatform
      - monitoringEnabled
    properties:
      instanceName:
        type: string
        description: The name of the workspace.
      environmentName:
        type: string
        description: The name of the workspace's environment.
      instanceStatus:
        type: string
        description: The workspace's current status.
      instanceUrl:
        type: string
        description: URL of the workspace's user interface.
      environmentCrn:
        type: string
        description: CRN of the environment.
      crn:
        type: string
        description: The CRN of the workspace.
      k8sClusterName:
        type: string
        description: The Kubernetes cluster name.
      creatorCrn:
        type: string
        description: The CRN of the creator of the workspace.
      version:
        type: string
        description: The version of Cloudera Machine Learning that was installed on the workspace.
      httpsEnabled:
        type: boolean
        description: Indicates if HTTPs communication was enabled on this workspace when provisioned.
      filesystemID:
        type: string
        description: A filesystem ID referencing the filesystem that was created on the cloud provider environment that this workspace uses.
      cloudPlatform:
        type: string
        description: The cloud platform of the environment that was used to create this workspace.
      monitoringEnabled:
        type: boolean
        description: If usage monitoring is enabled or not on this workspace.
      loadBalancerIPWhitelists:
        type: array
        items:
          type: string
        description: The whitelist of ips for loadBalancer.
      creationDate:
        type: string
        format: date-time
        description: Creation date of workspace.
      failureMessage:
        type: string
        description: Failure message from the most recent failure that has occurred during workspace provisioning.
      healthInfoLists:
        type: array
        items:
          $ref: '#/definitions/HealthInfo'
        description: The health info information of the workspace.
  Workspace:
    type: object
    description: A ML workspace, which includes the cluster and storage.
    required:
      - instanceName
      - environmentName
      - instanceStatus
      - instanceUrl
      - environmentCrn
      - crn
      - k8sClusterName
      - creatorCrn
      - version
      - httpsEnabled
      - endpointPublicAccess
      - filesystemID
      - tags
      - instanceGroups
      - cloudPlatform
      - monitoringEnabled
    properties:
      instanceName:
        type: string
        description: The name of the workspace.
      environmentName:
        type: string
        description: The name of the workspace's environment.
      instanceStatus:
        type: string
        description: The workspace's current status.
      instanceUrl:
        type: string
        description: URL of the workspace's user interface.
      environmentCrn:
        type: string
        description: CRN of the environment.
      crn:
        type: string
        description: The CRN of the workspace.
      k8sClusterName:
        type: string
        description: The Kubernetes cluster name.
      creatorCrn:
        type: string
        description: The CRN of the creator of the workspace.
      version:
        type: string
        description: The version of Cloudera Machine Learning that was installed on the workspace.
      httpsEnabled:
        type: boolean
        description: To Display if Https is enabled or not.
      endpointPublicAccess:
        type: boolean
        description: To check if the cluster is publicly accessible or not.
      filesystemID:
        type: string
        description: filesystemID used by the workspace
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
        description: Tags provided by the user at the time of workspace creation.
      instanceGroups:
        type: array
        items:
          $ref: '#/definitions/WorkspaceInstanceGroup'
        description: The instance groups.
      cloudPlatform:
        type: string
        description: The cloud platform of the environment that was used to create this workspace.
      monitoringEnabled:
        type: boolean
        description: If usage monitoring is enabled or not on this workspace.
      loadBalancerIPWhitelists:
        type: array
        items:
          type: string
        description: IP whitelist for loadBalancer.
      creationDate:
        type: string
        format: date-time
        description: Creation date of workspace.
      healthInfoLists:
        type: array
        items:
          $ref: '#/definitions/HealthInfo'
        description: The health info information of the workspace.
      failureMessage:
        type: string
        description: Failure message from the most recent failure that has occurred during workspace provisioning.
      clusterBaseDomain:
        type: string
        description: The basedomain of the cluster.
      modelMetricsEnabled:
        type: boolean
        description: Whether model metrics is enabled.
      governanceEnabled:
        type: boolean
        description: Whether governance is enabled.
      whitelistAuthorizedIPRanges:
        type: boolean
        description: Whether to whitelist only authorizedIPRanges given or all public IPs.
      authorizedIPRanges:
        type: array
        items:
          type: string
        description: The whitelist of CIDR blocks which can access the API server.
  UpgradeWorkspaceRequest:
    type: object
    description: Request object for the UpgradeWorkspace method.
    properties:
      environmentName:
        type: string
        description: The environment of the workspace.
      workspaceName:
        type: string
        description: The name of the workspace.
      mlVersion:
        type: string
        description: The version of workspace to upgrade to.
      workspaceCrn:
        type: string
        description: The CRN of the workspace. If CRN is specified only the CRN is used for identifying the workspace, environment and name arguments are ignored.
  UpgradeWorkspaceResponse:
    type: object
    description: Response object for the UpgradeWorkspace method.
  DescribeWorkspaceRequest:
    type: object
    description: Request object for the DescribeWorkspace method.
    properties:
      environmentName:
        type: string
        description: The environment for the workspace to describe.
      workspaceName:
        type: string
        description: The name of the workspace to describe.
      workspaceCrn:
        type: string
        description: The CRN of the workspace to describe. If CRN is specified only the CRN is used for identifying the workspace, environment and name arguments are ignored.
  DescribeWorkspaceResponse:
    type: object
    description: Response object for the DescribeWorkspace method.
    required:
      - workspace
    properties:
      workspace:
        description: The workspace.
        $ref: '#/definitions/Workspace'
  DeleteWorkspaceRequest:
    type: object
    description: Request object for the DeleteWorkspace method.
    required:
      - force
    properties:
      force:
        type: boolean
        description: Force delete a workspace even if errors occur during deletion. Force delete removes the guarantee that resources in your cloud account will be cleaned up.
      removeStorage:
        type: boolean
        description: The remove storage flag indicates weather to keep the backing workspace filesystem storage or remove it during delete.
      environmentName:
        type: string
        description: The environment for the workspace to delete.
      workspaceName:
        type: string
        description: The name of the workspace to delete.
      workspaceCrn:
        type: string
        description: The CRN of the workspace to delete. If CRN is specified only the CRN is used for identifying the workspace, environment and name arguments are ignored.
  DeleteWorkspaceResponse:
    type: object
    description: Response object for the DeleteWorkspace method.
  GrantWorkspaceAccessRequest:
    type: object
    description: Request object for the GrantWorkspaceAccess method.
    properties:
      arn:
        type: string
        description: 'The aws user ARN to grant access to the corresponding EKS cluster. (Deprecated: Use identifier instead).'
        x-deprecated: true
      environmentName:
        type: string
        description: The environment that the workspace is a member of.
      workspaceName:
        type: string
        description: The name of the workspace to grant access to.
      workspaceCrn:
        type: string
        description: The CRN of the workspace to grant access to. If CRN is specified only the CRN is used for identifying the workspace, environment and name arguments are ignored.
      identifier:
        type: string
        description: The cloud provider user id which will be granted access to the workspace's Kubernetes cluster.
  GrantWorkspaceAccessResponse:
    type: object
    description: Response object for the GrantWorkspaceAccess method.
    required:
      - kubeconfig
    properties:
      kubeconfig:
        type: string
        description: The Kubernetes config file
        x-sensitive: true
  RevokeWorkspaceAccessRequest:
    type: object
    description: Request object for the RevokeWorkspace method.
    properties:
      arn:
        type: string
        description: 'The aws user ARN to revoke access to the corresponding EKS cluster. (Deprecated: Use identifier instead).'
        x-deprecated: true
      environmentName:
        type: string
        description: The environment that the workspace is a member of.
      workspaceName:
        type: string
        description: The name of the workspace to revoke access to.
      workspaceCrn:
        type: string
        description: The CRN of the workspace to revoke access to. If CRN is specified only the CRN is used for identifying the workspace, environment and name arguments are ignored.
      identifier:
        type: string
        description: The cloud provider user id which will be granted access to the workspace's Kubernetes cluster.
  RevokeWorkspaceAccessResponse:
    type: object
    description: Response object for the RevokeWorkspaceAccess method.
  ListWorkspaceAccessRequest:
    type: object
    description: Request object for the ListWorkspace method.
    properties:
      environmentName:
        type: string
        description: The environment that the workspace is a member of.
      workspaceName:
        type: string
        description: The name of the workspace to list access.
      workspaceCrn:
        type: string
        description: The CRN of the workspace to list access. If CRN is specified only the CRN is used for identifying the workspace, environment and name arguments are ignored.
  ListWorkspaceAccessResponse:
    type: object
    description: Response object for the ListWorkspaceAccess method.
    required:
      - users
    properties:
      users:
        type: array
        items:
          type: string
          x-sensitive: true
        description: The list of users that have access.
        x-sensitive: true
  GetKubeconfigRequest:
    type: object
    description: Request object for the GetKubeconfig method.
    properties:
      environmentName:
        type: string
        description: The environment that the workspace is a member of.
      workspaceName:
        type: string
        description: The name of the workspace to list access.
      workspaceCrn:
        type: string
        description: The CRN of the workspace to list access.
  GetKubeconfigResponse:
    type: object
    description: Response object for the GetKubeconfig method.
    required:
      - kubeconfig
    properties:
      kubeconfig:
        type: string
        description: The list of users that have access.
        x-sensitive: true
  GetLatestWorkspaceVersionRequest:
    type: object
    description: Request object for GetLatestWorkspaceVersion.
  GetLatestWorkspaceVersionResponse:
    type: object
    description: Response object for GetLatestWorkspaceVersion.
    required:
      - version
    properties:
      version:
        type: string
        description: The latest version of a workspace that is used when deploying Cloudera Machine Learning workspaces.
  HealthInfo:
    type: object
    description: Healthinfo object contains the health information of a resource.
    required:
      - resourceName
      - isHealthy
      - updatedAt
      - message
      - details
    properties:
      resourceName:
        type: string
        description: The resource name being checked.
      isHealthy:
        type: boolean
        description: The boolean that indicates the health status.
      updatedAt:
        type: string
        format: date-time
        description: The timestamp for the heartbeat.
      message:
        type: string
        description: The message to show for the health info.
      details:
        type: array
        items:
          type: string
        description: The detail of the health info.
  ModifyClusterInstanceGroupRequest:
    type: object
    description: Request object for ModifyClusterInstanceGroup.
    required:
      - workspaceCrn
      - instanceGroupName
      - min
      - max
    properties:
      workspaceCrn:
        type: string
        description: The CRN of the workspace cluster to modify.
      instanceGroupName:
        type: string
        description: The name of the instance group of the workspace cluster to modify.
      min:
        type: integer
        format: int32
        description: The desired autoscaling min of the workspace cluster instance group.
      max:
        type: integer
        format: int32
        description: The desired autoscaling min of the workspace cluster instance group.
  ModifyClusterInstanceGroupResponse:
    type: object
    description: Response object for ModifyClusterInstanceGroup.
  ModifyClusterSecurityRequest:
    type: object
    description: Request object for ModifyClusterSecurity.
    required:
      - workspaceCrn
      - allowlistAuthorizedIPRanges
      - authorizedIPRanges
    properties:
      workspaceCrn:
        type: string
        description: The CRN of the workspace cluster to modify.
      allowlistAuthorizedIPRanges:
        type: boolean
        description: Whether to allow only authorized IP ranges given or all public IPs.
      authorizedIPRanges:
        type: array
        items:
          type: string
        description: The allowlist of CIDR blocks which can access the API server.
  ModifyClusterSecurityResponse:
    type: object
    description: Response object for ModifyClusterSecurity.
  ModifyWorkspaceLoadBalancerRequest:
    type: object
    description: Request object for ModifyWorkspaceLoadBalancer.
    required:
      - workspaceCrn
      - loadBalancerIPAllowLists
    properties:
      workspaceCrn:
        type: string
        description: The CRN of the workspace cluster to modify.
      loadBalancerIPAllowLists:
        type: array
        items:
          type: string
        description: The allowlist of CIDR blocks which can access the loadbalancer.
  ModifyWorkspaceLoadBalancerResponse:
    type: object
    description: Response object for ModifyWorkspaceLoadBalancer.
x-audit: true
