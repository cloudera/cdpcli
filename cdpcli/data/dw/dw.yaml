swagger: '2.0'
x-endpoint-name: dw
x-products: CDP
x-form-factors: public,private
x-cdp-releases: PUBLIC
info:
  version: __API_VERSION__
  title: Cloudera Data Warehouse [EXPERIMENTAL]
  license:
    name: Apache 2.0
  description: Install and manage Cloudera Data Warehouse clusters.
  termsOfService: https://www.cloudera.com/legal/commercial-terms-and-conditions.html
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/dw/listClusters:
    post:
      x-no-compatibility-guarantee: true
      summary: List Cloudera Data Warehouse clusters.
      description: List Cloudera Data Warehouse clusters.
      operationId: listClusters
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListClustersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListClustersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/describeCluster:
    post:
      x-no-compatibility-guarantee: true
      summary: Describe a Cloudera Data Warehouse cluster.
      description: Describe a Cloudera Data Warehouse cluster.
      operationId: describeCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/describeKubeconfig:
    post:
      x-form-factors: public
      summary: Get Kubeconfig for a Cloudera Data Warehouse cluster.
      description: Get Kubeconfig for a Cloudera Data Warehouse cluster.
      operationId: describeKubeconfig
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeKubeconfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeKubeconfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/updateSshKey:
    post:
      x-form-factors: public
      summary: Update the SSH Key for a Cloudera Data Warehouse cluster
      description: Update the SSH Key for a Cloudera Data Warehouse cluster
      operationId: updateSshKey
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSshKeyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateSshKeyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/renewCertificates:
    post:
      summary: Renew certificates for a Cloudera Data Warehouse Azure cluster.
      description: Renew certificate for a Cloudera Data Warehouse Azure cluster.
      operationId: renewCertificates
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RenewCertificatesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RenewCertificatesResponse'
        405:
          description: Operation not allowed on non-Azure clusters.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/createCluster:
    post:
      x-no-compatibility-guarantee: true
      summary: Create a Cloudera Data Warehouse cluster.
      description: Create a Cloudera Data Warehouse cluster.
      operationId: createCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/deleteCluster:
    post:
      x-no-compatibility-guarantee: true
      summary: Delete a Cloudera Data Warehouse cluster.
      description: Delete a Cloudera Data Warehouse cluster.
      operationId: deleteCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/updateCluster:
    post:
      x-mutating: true
      summary: Updates the Cloudera Data Warehouse cluster.
      description: Update the Cloudera Data Warehouse cluster.
      operationId: updateCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/createDbc:
    post:
      x-no-compatibility-guarantee: true
      summary: Create a Database Catalog.
      description: Create a Database Catalog.
      operationId: createDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/listDbcs:
    post:
      x-no-compatibility-guarantee: true
      summary: List Database Catalogs.
      description: List Database Catalogs.
      operationId: listDbcs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDbcsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDbcsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/describeDbc:
    post:
      x-no-compatibility-guarantee: true
      summary: Describe a Database Catalog.
      description: Describe a Database Catalog.
      operationId: describeDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/deleteDbc:
    post:
      x-no-compatibility-guarantee: true
      summary: Delete a Database Catalog.
      description: Delete a Database Catalog.
      operationId: deleteDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/restartDbc:
    post:
      x-mutating: true
      summary: Restart a Database Catalog.
      description: Restart a Database Catalog.
      operationId: restartDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestartDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RestartDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/createVw:
    post:
      x-no-compatibility-guarantee: true
      summary: Create a Virtual Warehouse.
      description: Create a Virtual Warehouse.
      operationId: createVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/listVws:
    post:
      x-no-compatibility-guarantee: true
      summary: List Virtual Warehouses.
      description: List Virtual Warehouses.
      operationId: listVws
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListVwsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListVwsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/describeVw:
    post:
      x-no-compatibility-guarantee: true
      summary: Describe a Virtual Warehouse.
      description: Describe a Virtual Warehouse.
      operationId: describeVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/deleteVw:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: true
      summary: Delete a Virtual Warehouse.
      description: Delete a Virtual Warehouse.
      operationId: deleteVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/restartVw:
    post:
      x-mutating: true
      summary: Restart a Virtual Warehouse.
      description: Restart a Virtual Warehouse.
      operationId: restartVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestartVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RestartVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/startVw:
    post:
      x-mutating: true
      summary: Starts a paused Virtual Warehouse.
      description: Starts a paused Virtual Warehouse. Has no effect if the VW is already started.
      operationId: startVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/StartVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/pauseVw:
    post:
      x-mutating: true
      summary: Pauses a running Virtual Warehouse.
      description: Pauses a running Virtual Warehouse. Has no effect if the VW is already paused.
      operationId: pauseVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/PauseVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/PauseVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listLatestVersions:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Lists the latest version of the product (if available) for all catalogs in the environment.
      description: Lists the latest version of the product (if available) for all catalogs in the environment.
      operationId: listLatestVersions
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLatestVersionsRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ListLatestVersionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeConfig:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Describe a service configuration.
      description: Describe a service configuration.
      operationId: describeConfig
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeConfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeConfigDiff:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Get differences between two service configurations.
      description: Get differences between two service configurations.
      operationId: describeConfigDiff
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigDiffRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeConfigDiffResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listDbcConfigs:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Get the configuration history of a Database Catalog.
      description: Get the configuration history of a Database Catalog.
      operationId: listDbcConfigs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDbcConfigsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDbcConfigsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listVwConfigs:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Get the configuration history of a Virtual Warehouse.
      description: Get the configuration history of a Virtual Warehouse.
      operationId: listVwConfigs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListVwConfigsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListVwConfigsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/updateVw:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: true
      summary: Update the configuration of a Virtual Warehouse.
      description: Update the configuration of a Virtual Warehouse.
      operationId: updateVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/updateDbc:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: true
      summary: Update the configuration of a Database Catalog.
      description: Update the configuration of a Database Catalog.
      operationId: updateDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/addUser:
    post:
      x-mutating: true
      summary: Adds the given user to the cluster.
      description: Adds the given user to the cluster. Please note that the user must pre-exist.
      operationId: addUser
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddUserRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AddUserResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/deleteUser:
    post:
      x-mutating: true
      summary: Deletes the given user from the cluster.
      description: Deletes the given user from the cluster. Please note that the user itself won't be deleted, only removed from the cluster.
      operationId: deleteUser
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteUserResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listUsers:
    post:
      x-mutating: false
      summary: Lists the users who have access to the cluster.
      description: Lists the users who have access to the cluster.
      operationId: listUsers
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUsersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListUsersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/upgradeDbc:
    post:
      x-mutating: true
      summary: Upgrades the Database Catalog to a compatible version.
      description: Upgrades the Database Catalog to a compatible version.
      operationId: upgradeDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/upgradeVw:
    post:
      x-mutating: true
      summary: Upgrades the Virtual Warehouse to a compatible version.
      description: Upgrades the Virtual Warehouse to a compatible version.
      operationId: upgradeVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/getUpgradeVwVersions:
    post:
      x-mutating: false
      summary: Gets the latest version and latest compatible version for Virtual Warehouse.
      description: Gets the latest version and latest compatible version for Virtual Warehouse.
      operationId: getUpgradeVwVersions
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetUpgradeVwVersionsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetUpgradeVwVersionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/getUpgradeDbcVersions:
    post:
      x-mutating: false
      summary: Gets the latest version and latest compatible version for Database Catalog.
      description: Gets the latest version and latest compatible version for Database Catalog.
      operationId: getUpgradeDbcVersions
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetUpgradeDbcVersionsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetUpgradeDbcVersionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/healthCheck:
    post:
      x-mutating: false
      summary: Check the health of the API.
      description: Check the health of the API.
      operationId: healthCheck
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/HealthCheckRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/HealthCheckResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
definitions:
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  DescribeClusterRequest:
    type: object
    description: Request object for the describeCluster method. Use only one of environmentName, clusterCrn and clusterId.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to describe.
  DescribeClusterResponse:
    type: object
    description: Response object for the describeCluster method.
    properties:
      cluster:
        description: The cluster.
        $ref: '#/definitions/ClusterSummary'
  DescribeKubeconfigRequest:
    type: object
    description: Request object for the describeKubeconfig method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to describe.
  DescribeKubeconfigResponse:
    type: object
    description: Response object for the describeKubeconfig method.
    properties:
      kubeconfig:
        type: string
        description: The kubeconfig.
  UpdateSshKeyRequest:
    type: object
    description: Request object for the updateSshKey method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to update the SSH Key.
  UpdateSshKeyResponse:
    type: object
    description: Response object for the updateSshKey method.
    properties:
      status:
        type: string
        description: The status of the cluster.
      message:
        type: string
        description: A message describing the outcome of the SSH Key update process.
  RenewCertificatesRequest:
    type: object
    description: Request object for the renewCertificates method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the Azure cluster to renew certificates for.
  RenewCertificatesResponse:
    type: object
    description: Response object for the renewCertificates method.
  CreateClusterRequest:
    type: object
    description: Request object for the createCluster method.
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The environment for the cluster to create.
      useOverlayNetwork:
        type: boolean
        description: Using an overlay network will save IP addresses in the VPC by using a private IP address range for Pods in the cluster.
      whitelistIpCIDRs:
        type: string
        description: Comma separated list of IP address CIDRs to whitelist.
      usePrivateLoadBalancer:
        type: boolean
        description: Set up load balancer with private IP address. In AWS it is created in private subnets. In Azure an internal load balancer gets created. Make sure there is connectivity between your client network and the network (VPC/VNet) where CDW environment is deployed.
      awsOptions:
        description: Options for activating an AWS environment.
        $ref: '#/definitions/AwsActivationOptions'
        x-form-factors: public
      azureOptions:
        description: Options for activating an Azure environment.
        $ref: '#/definitions/AzureActivationOptions'
        x-form-factors: public
      privateCloudOptions:
        description: Options for activating a Private Cloud environment.
        $ref: '#/definitions/PrivateCloudActivationOptions'
        x-form-factors: private
  AwsActivationOptions:
    type: object
    description: Options for activating an AWS environment.
    properties:
      privateSubnetIds:
        type: array
        description: IDs of private AWS subnets where the cluster should be deployed.
        items:
          type: string
      publicSubnetIds:
        type: array
        description: IDs of public AWS subnets where the cluster should be deployed.
        items:
          type: string
      customEcrRepository:
        type: string
        description: URL for custom ECR repository
      customAmiId:
        type: string
        description: Custom AMI ID.
  AzureActivationOptions:
    type: object
    description: Options for activating an Azure environment.
    properties:
      subnetId:
        type: string
        description: ID of Azure subnet where the cluster should be deployed.
      enableAZ:
        type: boolean
        description: Enables Azure Availability Zones for the cluster deployment.
      enableSpotInstances:
        type: boolean
        description: Enable Spot instances for compute workloads
        default: false
      vmGenerationType:
        type: string
        enum:
          - Standard_E16_v3
          - Standard_E16ds_v4
        description: The generation type of the virtual machines used to create the environment.
      logAnalyticsWorkspaceId:
        type: string
        description: Workspace ID for Azure log analytics.
      dockerBridgeCidr:
        type: string
        description: Docker bridge CIDR range for deployment.
      enableUDR:
        type: boolean
        description: Enable user defined routing for the cluster deployment.
        default: false
      enablePrivateSQL:
        type: boolean
        description: Enables private SQL for the cluster deployment.
        default: false
      privateDNSZoneAKS:
        type: string
        description: Private DNS zone AKS resource ID.
      enablePrivateAks:
        type: boolean
        description: Enable Azure Private AKS mode.
        default: false
      enableUptimeSLA:
        type: boolean
        description: Enable uptime SLA for Kubernetes API server.
        default: false
  PrivateCloudActivationOptions:
    type: object
    description: Options for activating a Private Cloud environment.
    required:
      - delegationUsername
      - delegationPassword
    properties:
      delegationUsername:
        type: string
        description: Name of delegation user. This user is used between Hue - Impala to create a session, as Hue should not pass the user credentials, instead Hue authenticates with the delegation user, then this user will impersonate the logged in user. This means that the Delegation User and Password should be able to authenticate through LDAP.
      delegationPassword:
        type: string
        description: Password of delegation user.
      securityContextConstraintName:
        type: string
        description: The name of the Hive Security Context Constraint.
      storageClass:
        type: string
        description: The storage class for the Local Storage Operator.
  CreateClusterResponse:
    type: object
    description: Response object for the createCluster method.
    properties:
      clusterId:
        type: string
        description: ID of new cluster.
  DeleteClusterRequest:
    type: object
    description: Request object for the deleteCluster method.
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to delete.
      force:
        type: boolean
        description: 'Force delete cluster (default: false). Force delete means CDW will delete the cluster even if there are attached DB Catalogs and Virtual Warehouses. All managed data will be lost and won''t be recoverable. Force delete attampts all steps of the deletion even if previous steps have failed.'
    required:
      - clusterId
  DeleteClusterResponse:
    type: object
    description: Response object for the deleteCluster method.
  UpdateClusterRequest:
    type: object
    description: Request object for the updateCluster method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to update.
      description:
        type: string
        description: Cluster description.
      whitelistIpCIDRs:
        type: array
        items:
          type: string
        description: List of IP address CIDRs to whitelist.
      awsUpdate:
        type: object
        description: Additional properties for AWS clusters.
        properties:
          externalBuckets:
            type: object
            description: External bucket definition.
            additionalProperties:
              description: External bucket access info.
              $ref: '#/definitions/ExternalBucketAccessInfo'
      azureUpdate:
        type: object
        description: Additional properties for Azure clusters.
        properties:
          renewCertificate:
            type: boolean
            default: false
            description: Renew Azure cluster certificate.
  ExternalBucketAccessInfo:
    type: object
    description: External bucket definition.
    properties:
      accessMode:
        type: string
        description: Specifies whether the external bucket will be added in read-only or read-write mode.
        enum:
          - READ
          - READWRITE
      kmsCmkArn:
        type: string
        description: Enable server side encryption with the specified KMS CMK ARN. If the value is empty or unspecified, default server side encryption will be used when the access mode is read-write. Otherwise this value is ignored.
  UpdateClusterResponse:
    type: object
    description: Response object for the updateCluster method.
  ListClustersRequest:
    type: object
    description: Request object for the listClusters method.
  ListClustersResponse:
    type: object
    description: Response object for the listClusters method.
    properties:
      clusters:
        type: array
        items:
          $ref: '#/definitions/ClusterSummary'
        description: The list of clusters.
  CreateDbcRequest:
    type: object
    description: Request object for the createDbc method.
    required:
      - clusterId
      - name
    properties:
      clusterId:
        type: string
        description: ID of cluster where Database Catalog should be created.
      name:
        type: string
        description: Name of the Database Catalog.
      loadDemoData:
        type: boolean
        description: Load demo data into the Database Catalog?
      imageVersion:
        type: string
        description: Version of the Database Catalog.
        default: ''
      isDefault:
        type: boolean
        description: Is this a Default Database Catalog?
        default: false
      tenantStorageRole:
        type: string
        description: Tenant Storage Role if the feature is enabled for the account.
        default: ''
      tenantStorageLocation:
        type: string
        description: Tenant Storage Location if the feature is enabled for the account.
        default: ''
      dbMetastore:
        type: string
        description: The name of the Metastore database.
        default: ''
        x-form-factors: private
      dbDas:
        type: string
        description: The name of the DAS database.
        default: ''
        x-form-factors: private
      dbHue:
        type: string
        description: The name of the HUE database.
        default: ''
        x-form-factors: private
  CreateDbcResponse:
    type: object
    description: Response object for the createDbc method.
    properties:
      dbcId:
        type: string
        description: ID of the new Database Catalog.
  ListDbcsRequest:
    type: object
    description: Request object for the listDbcs method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: ID of cluster to list.
  ListDbcsResponse:
    type: object
    description: Response object for the listDbcs method.
    properties:
      dbcs:
        type: array
        items:
          $ref: '#/definitions/DbcSummary'
        description: The list of Database Catalogs.
  DescribeDbcRequest:
    type: object
    description: Request object for the describeDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
  DescribeDbcResponse:
    type: object
    description: Response object for the describeDbc method.
    properties:
      dbc:
        description: The Database Catalog.
        $ref: '#/definitions/DbcSummary'
  DeleteDbcRequest:
    type: object
    description: Request object for the deleteDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog to delete.
  DeleteDbcResponse:
    type: object
    description: Response object for the deleteDbc method.
  RestartDbcRequest:
    type: object
    description: Request object for the restartDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog to delete.
  RestartDbcResponse:
    type: object
    description: Response object for the restartDbc method.
  VwType:
    type: string
    enum:
      - hive
      - impala
    description: 'Type of Virtual Warehouse: ''hive'' or ''impala''.'
  AutoscalingOptions:
    type: object
    description: Configurations for auto-scaling a Virtual Warehouse.
    properties:
      minClusters:
        type: integer
        format: int32
        default: 1
        description: Minimum number of available compute groups.
      maxClusters:
        type: integer
        format: int32
        default: 20
        description: Maximum number of available compute groups.
  CreateVwRequest:
    type: object
    description: Request object for the createVw method.
    required:
      - clusterId
      - dbcId
      - vwType
      - name
    properties:
      clusterId:
        type: string
        description: ID of cluster where Virtual Warehouse should be created.
      dbcId:
        type: string
        description: ID of Database Catalog that the Virtual Warehouse should be attached to.
      vwType:
        description: Type of Virtual Warehouse to be created.
        $ref: '#/definitions/VwType'
      name:
        type: string
        description: Name of the Virtual Warehouse.
      imageVersion:
        type: string
        description: version of the Virtual Warehouse.
        default: ''
      template:
        type: string
        description: Name of configuration template to use.
        enum:
          - xsmall
          - small
          - medium
          - large
      autoscaling:
        description: Autoscaling settings for the Virtual Warehouse.
        $ref: '#/definitions/AutoscalingOptions'
      config:
        description: Configuration settings for the Virtual Warehouse.
        $ref: '#/definitions/ServiceConfigReq'
      tags:
        type: array
        description: Tags associated with the resources.
        items:
          $ref: '#/definitions/TagRequest'
  TagRequest:
    description: A key/value pair that can be attached to some resources.
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The tag's name.
      value:
        type: string
        description: The associated value of the tag.
  CreateVwResponse:
    type: object
    description: Response object for the createVw method.
    properties:
      vwId:
        type: string
        description: ID of the new Virtual Warehouse.
  ListVwsRequest:
    type: object
    description: Request object for the listVws method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: ID of cluster to list.
  ListVwsResponse:
    type: object
    description: Response object for the listVws method.
    properties:
      vws:
        type: array
        items:
          $ref: '#/definitions/VwSummary'
        description: The list of Virtual Warehouses.
  DescribeVwRequest:
    type: object
    description: Request object for the describeVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
  DescribeVwResponse:
    type: object
    description: Response object for the describeVw method.
    properties:
      vw:
        description: The Virtual Warehouse.
        $ref: '#/definitions/VwSummary'
  DeleteVwRequest:
    type: object
    description: Request object for the deleteVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse to delete.
  DeleteVwResponse:
    type: object
    description: Response object for the deleteVw method.
  Actor:
    type: object
    description: A CDP actor (user or machine user).
    properties:
      crn:
        type: string
        description: Actor CRN.
      email:
        type: string
        description: Email address for users.
      workloadUsername:
        type: string
        description: Username for users.
      machineUsername:
        type: string
        description: Username for machine users.
  RestartVwRequest:
    type: object
    description: Request object for the restartVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse to delete.
  RestartVwResponse:
    type: object
    description: Response object for the restartVw method.
  ClusterSummary:
    type: object
    description: A Cloudera Data Warehouse cluster.
    properties:
      crn:
        type: string
        description: The CRN of the cluster.
      id:
        type: string
        description: The ID of the cluster.
      environmentCrn:
        type: string
        description: The CRN of the environment where the cluster is located.
      status:
        type: string
        description: Status of the cluster.
      creator:
        $ref: '#/definitions/Actor'
        description: The creator of the cluster.
      creationDate:
        type: string
        format: date-time
        description: Creation date of cluster.
      cloudPlatform:
        type: string
        description: The cloud platform of the environment that was used to create this cluster.
  DbcSummary:
    type: object
    description: A Database Catalog.
    properties:
      crn:
        type: string
        description: The CRN of the Database Catalog.
      id:
        type: string
        description: The ID of the Database Catalog.
      name:
        type: string
        description: The name of the Database Catalog.
      status:
        type: string
        description: Status of the Database Catalog.
      creator:
        $ref: '#/definitions/Actor'
        description: The creator of the Database Catalog.
      creationDate:
        type: string
        format: date-time
        description: Creation date of Database Catalog.
  VwSummary:
    type: object
    description: A Virtual Warehouse.
    properties:
      crn:
        type: string
        description: The CRN of the Virtual Warehouse.
      id:
        type: string
        description: The ID of the Virtual Warehouse.
      name:
        type: string
        description: The name of the Virtual Warehouse.
      vwType:
        description: The type of the Virtual Warehouse.
        $ref: '#/definitions/VwType'
      dbcId:
        type: string
        description: ID of Database Catalog that the Virtual Warehouse is attached to.
      status:
        type: string
        description: Status of the Virtual Warehouse.
      creator:
        $ref: '#/definitions/Actor'
        description: The creator of the Virtual Warehouse.
      creationDate:
        type: string
        format: date-time
        description: Creation date of Virtual Warehouse.
      tags:
        type: array
        description: Tags associated with the resources.
        items:
          $ref: '#/definitions/TagResponse'
  TagResponse:
    description: A key/value pair attached to some resources.
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The tag's name.
      value:
        type: string
        description: The associated value of the tag.
  DescribeConfigRequest:
    type: object
    description: Request object for the describeConfig method.
    required:
      - clusterId
      - configId
    properties:
      clusterId:
        type: string
        description: ID of the cluster.
      configId:
        type: string
        description: ID of the service (Database Catalog or Virtual Warehouse).
  DescribeConfigResponse:
    type: object
    description: Response object for the describeConfig method.
    properties:
      config:
        description: The service configuration.
        $ref: '#/definitions/ServiceConfigResp'
  DescribeConfigDiffRequest:
    type: object
    description: Request object for the describeConfigDiff method.
    required:
      - clusterId
      - fromConfigId
      - toConfigId
    properties:
      clusterId:
        type: string
        description: ID of the cluster.
      fromConfigId:
        type: string
        description: ID of the old service configuration.
      toConfigId:
        type: string
        description: ID of the new service configuration.
  DescribeConfigDiffResponse:
    type: object
    description: Response object for the describeConfigDiff method.
    properties:
      config:
        description: The service configuration.
        $ref: '#/definitions/ServiceConfigDiff'
  ListDbcConfigsRequest:
    type: object
    description: Request object for the listDbcConfigs method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
  ListDbcConfigsResponse:
    type: object
    description: Response object for the listDbcConfigs method.
    properties:
      configHistory:
        type: array
        description: Configuration history of a service.
        items:
          $ref: '#/definitions/ConfigHistoryItem'
  ListVwConfigsRequest:
    type: object
    description: Request object for the listVwConfigs method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
  ListVwConfigsResponse:
    type: object
    description: Response object for the listVwConfigs method.
    properties:
      configHistory:
        type: array
        description: Configuration history of a service.
        items:
          $ref: '#/definitions/ConfigHistoryItem'
  UpdateVwRequest:
    type: object
    description: Request object for the updateVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
      config:
        description: The service configuration to update the VW with. This will be applied on top of the existing configuration so there's no need to list configurations that stay the same.
        $ref: '#/definitions/ServiceConfigReq'
  UpdateVwResponse:
    type: object
    description: Response object for the updateVw method.
  UpdateDbcRequest:
    type: object
    description: Request object for the updateDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
      config:
        description: The service configuration to update the DBC with. This will be applied on top of the existing configuration so there's no need to list configurations that stay the same.
        $ref: '#/definitions/ServiceConfigReq'
  UpdateDbcResponse:
    type: object
    description: Response object for the updateDbc method.
  ConfigHistoryItem:
    type: object
    description: An entry in the configuration history of a service.
    properties:
      serviceId:
        type: string
        description: DBC or VW ID that this configuration belongs to.
      configId:
        type: string
        description: ID of the configuration.
      from:
        type: string
        format: date-time
        description: When was this configuration used from.
  ConfigContentResp:
    type: object
    description: Contents of a ConfigBlock.
    properties:
      keyValues:
        type: object
        description: Key-value type configurations.
        additionalProperties:
          description: Key-value type configurations.
          type: string
      text:
        type: string
        description: Text type configuration.
      json:
        type: string
        description: JSON type configuration.
  ConfigContentReq:
    type: object
    description: Contents of a ConfigBlock.
    properties:
      keyValues:
        type: object
        description: Key-value type configurations.
        additionalProperties:
          description: Key-value type configurations.
          type: string
      text:
        type: string
        description: Text type configuration.
      json:
        type: string
        description: JSON type configuration.
  StringDiff:
    type: object
    description: Difference between two strings.
    required:
      - from
      - to
    properties:
      from:
        type: string
        description: The old value.
      to:
        type: string
        description: The new value.
  KeyValuesDiff:
    type: object
    description: Different between keyValues of two ConfigContents.
    properties:
      added:
        type: object
        description: Keys that are only present in the new configuration.
        additionalProperties:
          type: string
          description: Keys that are only present in the new configuration.
      removed:
        type: object
        description: Keys that are only present in the old configuration.
        additionalProperties:
          type: string
          description: Keys that are only present in the old configuration.
      same:
        type: object
        description: Keys that are present in both configurations.
        additionalProperties:
          description: Keys that are present in both configurations.
          type: string
      changed:
        type: object
        description: Keys with different values.
        additionalProperties:
          description: Keys with different values.
          $ref: '#/definitions/StringDiff'
  ConfigContentDiff:
    type: object
    description: Difference between two ConfigContents.
    properties:
      keyValues:
        description: Different between keyValues of two ConfigContents.
        $ref: '#/definitions/KeyValuesDiff'
  ConfigBlockResp:
    type: object
    description: A piece of configuration stored in the same place (e.g. same file or environment variables).
    properties:
      id:
        type: string
        description: ID of the ConfigBlock. Unique within an ApplicationConfig.
      format:
        type: string
        description: Format of ConfigBlock.
        enum:
          - HADOOP_XML
          - PROPERTIES
          - TEXT
          - JSON
          - BINARY
          - ENV
          - FLAGFILE
      content:
        description: Contents of a ConfigBlock.
        $ref: '#/definitions/ConfigContentResp'
  ConfigBlockReq:
    type: object
    description: A piece of configuration stored in the same place (e.g. same file or environment variables).
    required:
      - id
      - format
      - content
    properties:
      id:
        type: string
        description: ID of the ConfigBlock. Unique within an ApplicationConfig.
      format:
        type: string
        description: Format of ConfigBlock.
        enum:
          - HADOOP_XML
          - PROPERTIES
          - TEXT
          - JSON
          - BINARY
          - ENV
          - FLAGFILE
      content:
        description: Contents of a ConfigBlock.
        $ref: '#/definitions/ConfigContentReq'
  ConfigBlockDiff:
    type: object
    description: Differences between two ConfigBlocks.
    properties:
      id:
        type: string
        description: ID of the ConfigBlock.
      contentDiff:
        description: Differences between the contents.
        $ref: '#/definitions/ConfigContentDiff'
  ConfigBlocksDiffs:
    type: object
    description: Differences between two sets of ConfigBlocks.
    required:
      - isChanged
    properties:
      isChanged:
        type: boolean
        description: Has any of the config blocks changed?
      added:
        type: array
        description: Config blocks that are only present in the new configuration.
        items:
          $ref: '#/definitions/ConfigBlockResp'
      removed:
        type: array
        description: Config blocks that are only present in the old configuration.
        items:
          $ref: '#/definitions/ConfigBlockResp'
      same:
        type: array
        description: Config blocks that are the same in both configurations.
        items:
          $ref: '#/definitions/ConfigBlockResp'
      changed:
        type: array
        description: Config blocks that are different between the two configurations.
        items:
          $ref: '#/definitions/ConfigBlockDiff'
  ApplicationConfigResp:
    type: object
    description: Configurations for an application inside a service.
    properties:
      configBlocks:
        type: array
        description: List of ConfigBlocks for the application.
        items:
          $ref: '#/definitions/ConfigBlockResp'
  ApplicationConfigReq:
    type: object
    description: Configurations for an application inside a service.
    properties:
      configBlocks:
        type: array
        description: List of ConfigBlocks for the application.
        items:
          $ref: '#/definitions/ConfigBlockReq'
  ApplicationConfigDiff:
    type: object
    description: Differences between two ApplicationConfigs.
    required:
      - isChanged
    properties:
      isChanged:
        type: boolean
        description: Has any of the configurations changed?
      configBlocksDiffs:
        description: Differences between the two sets of ConfigBlocks.
        $ref: '#/definitions/ConfigBlocksDiffs'
  ServiceConfigResp:
    type: object
    description: Configurations for a service (DBC or VW)
    properties:
      commonConfigs:
        description: Configurations that are applied to every application in the service.
        $ref: '#/definitions/ApplicationConfigResp'
      applicationConfigs:
        type: object
        description: Application specific configurations.
        additionalProperties:
          description: Application specific configurations.
          $ref: '#/definitions/ApplicationConfigResp'
      ldapGroups:
        type: array
        items:
          type: string
        description: List of LDAP Groupnames to be enabled for auth.
      enableSSO:
        type: boolean
        description: Should SSO be enabled for this VW. This cannot be changed later.
  ServiceConfigReq:
    type: object
    description: Configurations for a service (DBC or VW)
    properties:
      commonConfigs:
        description: Configurations that are applied to every application in the service.
        $ref: '#/definitions/ApplicationConfigReq'
      applicationConfigs:
        type: object
        description: Application specific configurations.
        additionalProperties:
          description: Application specific configurations.
          $ref: '#/definitions/ApplicationConfigReq'
      ldapGroups:
        type: array
        items:
          type: string
        description: LDAP Groupnames to be enabled for auth.
      enableSSO:
        type: boolean
        description: Should SSO be enabled for this VW.
  ServiceConfigDiff:
    type: object
    description: Differences between two service configurations.
    properties:
      isChanged:
        type: boolean
        description: Has any of the configurations changed?
      commonConfigsDiff:
        description: Differences between the common configurations.
        $ref: '#/definitions/ApplicationConfigDiff'
      applicationConfigsDiffs:
        type: object
        description: Differences between the application specific configurations.
        additionalProperties:
          description: Differences between the application specific configurations.
          $ref: '#/definitions/ApplicationConfigDiff'
  StartVwRequest:
    type: object
    description: The request object for the startVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: The ID of the Virtual Warehouse cluster.
      vwId:
        type: string
        description: The ID of the Virtual Warehouse.
  StartVwResponse:
    type: object
    description: The response object for the startVw method.
  PauseVwRequest:
    type: object
    description: The request object for the pauseVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: The ID of the Virtual Warehouse cluster.
      vwId:
        type: string
        description: The ID of the Virtual Warehouse.
  PauseVwResponse:
    type: object
    description: The response object for the pauseVw method.
  AddUserRequest:
    type: object
    description: Request object for the addUser method.
    required:
      - clusterId
      - userId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to which the user must be added.
      userId:
        type: string
        description: A cloud based unique identifier of the user (ARN for AWS users, groupId for Azure users).
  AddUserResponse:
    type: object
    description: Response object for the addUser method.
  DeleteUserRequest:
    type: object
    description: Request object for the deleteUser method.
    required:
      - clusterId
      - userId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster from which the user must be deleted.
      userId:
        type: string
        description: A cloud based unique identifier of the user (ARN for AWS users, groupId for Azure users).
  DeleteUserResponse:
    type: object
    description: Response object for the deleteUser method.
  ListUsersRequest:
    type: object
    description: Request object for the listUsers method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster for which the users must be retrieved.
  ListUsersResponse:
    type: object
    description: Response object for the listUsers method.
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/CloudUserReference'
        description: The list of users allowed to access the given cluster.
  CloudUserReference:
    type: object
    description: Cloud user definition object.
    required:
      - userId
    properties:
      userId:
        type: string
        description: A cloud based unique identifier of the user (ARN for AWS users, groupId for Azure users).
  ListLatestVersionsResponse:
    type: object
    description: Response object of the listLatestVersions call.
    properties:
      idToLatestVersionsMap:
        type: object
        description: Map containing the latest image versions for each Virtual Warehouse found in the cluster.
        additionalProperties:
          type: string
  ListLatestVersionsRequest:
    type: object
    description: Request object of the listLatestVersions call.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster from which the version information must be collected.
  UpgradeDbcRequest:
    type: object
    description: Request object for the upgradeDbc method.
    required:
      - clusterId
      - dbcId
      - imageVersion
    properties:
      clusterId:
        type: string
        description: The ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: The ID of the Database Catalog.
      imageVersion:
        type: string
        description: The version to which the Database Catalog should be upgraded.
  UpgradeDbcResponse:
    type: object
    description: Response object of the upgradeDbc call.
    properties:
      status:
        type: string
        description: 'The upgrade status. Possible values are: Upgrading, Error, Failed.'
      message:
        type: string
        description: The Upgrade message.
      timedOut:
        type: boolean
        description: True if the upgrade timed out, false or omitted otherwise.
      serviceUnhealthy:
        type: boolean
        description: True, if the service is in unhealthy state, false or omitted otherwise.
  UpgradeVwRequest:
    type: object
    description: Request object for the upgradeVw method.
    required:
      - clusterId
      - vwId
      - dbcId
      - imageVersion
    properties:
      clusterId:
        type: string
        description: The ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: The ID of the Virtual Warehouse.
      dbcId:
        type: string
        description: The ID of Database Catalog that the Virtual Warehouse is attached to.
      imageVersion:
        type: string
        description: The version to which the Virtual Warehouse should be upgraded.
  UpgradeVwResponse:
    type: object
    description: Response object for the upgradeVw method.
    properties:
      status:
        type: string
        description: 'The upgrade status. Possible values are: Upgrading, Error, Failed.'
      message:
        type: string
        description: The upgrade message.
      timedOut:
        type: boolean
        description: True if the upgrade timed out, false or omitted otherwise.
      serviceUnhealthy:
        type: boolean
        description: True, if the service is in unhealthy state, false or omitted otherwise.
  GetUpgradeVwVersionsRequest:
    type: object
    description: Request object for the getUpgradeVwVersions method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: The ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: The ID of the Virtual Warehouse.
  GetUpgradeVwVersionsResponse:
    type: object
    description: Response object for the getUpgradeVwVersions method.
    properties:
      latestVersion:
        type: string
        description: The latest available CDW version.
      compatibleVersion:
        type: string
        description: The latest compatible CDW version.
      latestCDPVersion:
        type: string
        description: The latest available CDP version.
      compatibleCDPVersion:
        type: string
        description: The latest compatible CDP version.
  GetUpgradeDbcVersionsRequest:
    type: object
    description: Request object for the getUpgradeDbcVersions method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: The ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: The ID of the Database Catalog.
  GetUpgradeDbcVersionsResponse:
    type: object
    description: Response object for the getUpgradeDbcVersions method.
    properties:
      latestVersion:
        type: string
        description: The latest available CDW version.
      compatibleVersion:
        type: string
        description: The latest compatible CDW version.
      latestCDPVersion:
        type: string
        description: The latest available CDP version.
      compatibleCDPVersion:
        type: string
        description: The latest compatible CDP version.
  HealthCheckRequest:
    type: object
    description: Request object for the healthCheck method.
  HealthCheckResponse:
    type: object
    description: Response object for the healthCheck method.
    properties:
      message:
        type: string
        description: HealthCheck status text.
x-audit: true
