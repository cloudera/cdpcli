swagger: '2.0'
x-endpoint-name: dw
x-products: CDP
x-form-factors: public,private
x-cdp-releases: PUBLIC
info:
  version: 0.9.99
  title: Cloudera Data Warehouse [EXPERIMENTAL]
  license:
    name: Apache 2.0
  description: Install and manage Cloudera Data Warehouse clusters.
  termsOfService: https://www.cloudera.com/legal/commercial-terms-and-conditions.html
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/dw/listClusters:
    post:
      x-no-compatibility-guarantee: true
      summary: List Cloudera Data Warehouse clusters.
      description: List Cloudera Data Warehouse clusters.
      operationId: listClusters
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListClustersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListClustersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/describeCluster:
    post:
      x-no-compatibility-guarantee: true
      summary: Describe a Cloudera Data Warehouse cluster.
      description: Describe a Cloudera Data Warehouse cluster.
      operationId: describeCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/createClusterDiagnosticDataJob:
    post:
      x-mutating: true
      x-form-factors: public
      summary: Create a diagnostic job for the given cluster.
      description: Creates a diagnostic job for the given cluster. The diagnostic data job is useful for troubleshooting purposes. The job collects logs and metrics (see --download-options to see available options) which are going to be bundled into a single file and will be available at the desired location (see --destination). General metadata about the diagnostics will also be included as the bundle-info.json file.
      operationId: createClusterDiagnosticDataJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateClusterDiagnosticDataJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateClusterDiagnosticDataJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listClusterDiagnosticDataJobs:
    post:
      x-mutating: false
      x-paging-default-max-items: 100
      x-form-factors: public
      summary: Get a list of diagnostic jobs for the given cluster.
      description: Lists diagnostic jobs for the given cluster. The output includes a list of jobs along with their current status and metadata related to each job.
      operationId: listClusterDiagnosticDataJobs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListClusterDiagnosticDataJobsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListClusterDiagnosticDataJobsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeClusterDiagnosticDataJob:
    post:
      x-mutating: false
      x-form-factors: public
      summary: Describes a diagnostic job for the given Cluster.
      description: Describes a diagnostic job for the given Cluster. The output includes a list of jobs along with their current status and some metadata related to each job.
      operationId: describeClusterDiagnosticDataJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeClusterDiagnosticDataJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeClusterDiagnosticDataJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/deleteClusterDiagnosticDataJob:
    post:
      x-mutating: true
      x-form-factors: public
      summary: Deletes a diagnostic job for the given cluster.
      description: Deletes a diagnostic job for the given cluster. The job can be deleted even when its status is "Running".
      operationId: deleteClusterDiagnosticDataJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteClusterDiagnosticDataJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteClusterDiagnosticDataJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeKubeconfig:
    post:
      x-form-factors: public
      summary: Get Kubeconfig for a Cloudera Data Warehouse cluster.
      description: Get Kubeconfig for a Cloudera Data Warehouse cluster.
      operationId: describeKubeconfig
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeKubeconfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeKubeconfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/describeAllowedInstanceTypes:
    post:
      x-mutating: false
      x-form-factors: public
      summary: Get allowed compute instance types for both AWS and Azure cluster types and their default values.
      description: Get allowed compute instance types for both AWS and Azure cluster types and their default values.
      operationId: describeAllowedInstanceTypes
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAllowedInstanceTypesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeAllowedInstanceTypesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeServerSetting:
    post:
      x-form-factors: private
      summary: Get the DWX server settings.
      description: Get the DWX server settings. This method can be used from DWX Private Cloud version 1.4.1.
      operationId: describeServerSetting
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeServerSettingRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeServerSettingResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/updateServerSetting:
    post:
      x-form-factors: private
      summary: Update the DWX server settings.
      description: 'Update the DWX server settings. The input list of server settings will be updated accordingly (turns on if enabled: true is set, turns off if enabled: false is set). Some settings need further actions to be taken (e.g. recreating a Virtual Warehouse), this is indicated in the server setting list returned by the describeServerSetting functionality. This method can be used from DWX Private Cloud version 1.4.1.'
      operationId: updateServerSetting
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateServerSettingRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateServerSettingResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/listEvents:
    post:
      x-form-factors: public,private
      x-mutating: false
      summary: Get the list of events.
      description: 'Get the list of events for the given Operation or a specific Service (Cluster, Database Catalog, Virtual Warehouse, or Data Visualization App). Events can belong to a particular Operation which might span across multiple Services. This happens if the given operation affects one or more Services e.g.: restore-cluster. It is also possible to return the events only for a given Service, in this case it is enough to pass the Id of a Service (e.g.: env-sq7hfv, warehouse-1696571829-pps2, compute-1696571962-8dd8, impala-1696572085-cn44).'
      operationId: listEvents
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListEventsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListEventsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/updateSshKey:
    post:
      x-form-factors: public
      summary: Update the SSH Key for a Cloudera Data Warehouse cluster
      description: Update the SSH Key for a Cloudera Data Warehouse cluster
      operationId: updateSshKey
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSshKeyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateSshKeyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/renewCertificates:
    post:
      summary: Renew certificates for a Cloudera Data Warehouse Azure cluster.
      description: Renew certificate for a Cloudera Data Warehouse Azure cluster.
      operationId: renewCertificates
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RenewCertificatesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RenewCertificatesResponse'
        405:
          description: Operation not allowed on non-Azure clusters.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/createCluster:
    post:
      x-no-compatibility-guarantee: true
      summary: Create a Cloudera Data Warehouse cluster.
      description: Create a Cloudera Data Warehouse cluster.
      operationId: createCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/deleteCluster:
    post:
      x-no-compatibility-guarantee: true
      summary: Delete a Cloudera Data Warehouse cluster.
      description: Delete a Cloudera Data Warehouse cluster.
      operationId: deleteCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/updateCluster:
    post:
      x-mutating: true
      summary: Updates the Cloudera Data Warehouse cluster.
      description: Update the Cloudera Data Warehouse cluster.
      operationId: updateCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/upgradeCluster:
    post:
      x-mutating: true
      summary: Upgrade the Cloudera Data Warehouse cluster.
      description: Upgrade the Cloudera Data Warehouse cluster to the latest supported version. Expect downtime during the upgrade and refrain issuing queries. You can check the current status of the cluster with the describe-cluster command.
      operationId: upgradeCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/backupCluster:
    post:
      x-mutating: true
      x-no-compatibility-guarantee: true
      summary: Creates a backup from the cluster configuration and settings.
      description: Creates a backup from the configuration and settings, including all the connected DbCatalogs, Virtual Warehouses and Data Visualisation Apps. The returned data may be used to restore all the entities by using the "restore-cluster" command.
      operationId: backupCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/BackupClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/BackupClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/restoreCluster:
    post:
      x-mutating: true
      x-no-compatibility-guarantee: true
      summary: Restores the cluster from a backup data made by "backup-cluster" command.
      description: Restores the cluster from a backup data made by "backup-cluster" command. The operation restores the default DbCatalog configuration, the Virtual Warehouses and the Data Visualisation Apps.
      operationId: restoreCluster
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestoreClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RestoreClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/createDataVisualization:
    post:
      summary: Creates a Cloudera Data Visualization.
      description: Creates a Cloudera Data Visualization.
      operationId: createDataVisualization
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDataVisualizationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateDataVisualizationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/listDataVisualizations:
    post:
      summary: Lists Cloudera Data Visualization in the provided CDW cluster.
      description: Lists Cloudera Data Visualization in the provided CDW cluster.
      operationId: listDataVisualizations
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDataVisualizationsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDataVisualizationsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/deleteDataVisualization:
    post:
      summary: Asynchronous operation that deletes a Cloudera Data Visualization. When the DV is in deleting state, we can still use describe-data-visualization to check the status. Once it is deleted, the describe-data-visualization would return a not found error.
      description: Asynchronous operation that deletes a Cloudera Data Visualization. When the DV is in deleting state, we can still use describe-data-visualization to check the status. Once it is deleted, the describe-data-visualization would return a not found error.
      operationId: deleteDataVisualization
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDataVisualizationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteDataVisualizationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/describeDataVisualization:
    post:
      summary: Describes a Cloudera Data Visualization.
      description: Describes a Cloudera Data Visualization.
      operationId: describeDataVisualization
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDataVisualizationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeDataVisualizationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/updateDataVisualization:
    post:
      x-mutating: true
      summary: Asynchronous operation that updates the configuration of a Cloudera Data Visualization. The describe-data-visualization can be used at any time to get the latest status of a Data Visualization.
      description: Asynchronous operation that updates the configuration of a Cloudera Data Visualization. The describe-data-visualization can be used at any time to get the latest status of a Data Visualization.
      operationId: updateDataVisualization
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDataVisualizationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateDataVisualizationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/getDataVisualizationUpgradeVersion:
    post:
      summary: Gets latest version and latest compatible version for Cloudera Data Visualization.
      description: Gets latest version and latest compatible version for Cloudera Data Visualization.
      operationId: getDataVisualizationUpgradeVersion
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDataVisualizationUpgradeVersionRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetDataVisualizationUpgradeVersionResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/upgradeDataVisualization:
    post:
      summary: Asynchronous operation that upgrades a Cloudera Data Visualization to a compatible version. The describe-data-visualization can be used at any time to get the latest status of a Data Visualization.
      description: Asynchronous operation that upgrades a Cloudera Data Visualization to a compatible version. The describe-data-visualization can be used at any time to get the latest status of a Data Visualization.
      operationId: upgradeDataVisualization
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeDataVisualizationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeDataVisualizationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/createDbc:
    post:
      x-no-compatibility-guarantee: true
      x-deprecated: true
      summary: Create a Database Catalog.
      description: 'DEPRECATED: Create a Database Catalog. The Database Catalog creation is deprecated and will be removed in subsequent releases. The Default Database Catalog is getting created during the cluster activation (create-cluster).'
      operationId: createDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/listDbcs:
    post:
      x-no-compatibility-guarantee: true
      summary: List Database Catalogs.
      description: List Database Catalogs.
      operationId: listDbcs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDbcsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDbcsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/describeDbc:
    post:
      x-no-compatibility-guarantee: true
      summary: Describe a Database Catalog.
      description: Describe a Database Catalog.
      operationId: describeDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/deleteDbc:
    post:
      x-no-compatibility-guarantee: true
      summary: Delete a Database Catalog.
      description: Delete a Database Catalog.
      operationId: deleteDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/rebuildDbc:
    post:
      x-no-compatibility-guarantee: true
      summary: Rebuild a Database Catalog.
      description: Rebuild a Database Catalog. Please use this feature for Database Catalogs which are in inconsistent or erroneous state. Running/Stopped Database Catalogs are safe to rebuild as well. This is a Beta feature. If a rebuild has been initiated, try to avoid rebuilding it again until it is completed or in erroneous state.
      operationId: rebuildDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RebuildDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RebuildDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/suspendDbc:
    post:
      x-mutating: true
      summary: Suspends a running Database Catalog.
      description: Suspends a running Database Catalog. Has no effect if the DBC is already suspended.
      operationId: suspendDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SuspendDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SuspendDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/restartDbc:
    post:
      x-mutating: true
      summary: Restart a Database Catalog.
      description: Restart a Database Catalog.
      operationId: restartDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestartDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RestartDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeDbcConfig:
    post:
      x-mutating: false
      summary: Describes the Database Catalog current configuration.
      description: Describes the Database Catalog current configuration.
      operationId: describeDbcConfig
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDbcConfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeDbcConfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/updateDbcConfig:
    post:
      x-mutating: true
      summary: Update a Database Catalog configuration.
      description: Update a Database Catalog configuration.
      operationId: updateDbcConfig
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDbcConfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateDbcConfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/createDbcDiagnosticDataJob:
    post:
      x-mutating: true
      x-form-factors: public
      summary: Create a diagnostic job for the given database catalog.
      description: Creates a diagnostic job for the given database catalog. The diagnostic data job is useful for troubleshooting purposes. The job collects logs and metrics (see --download-options to see available options) which are going to be bundled into a single file and will be available at the desired location (see --destination). General metadata about the diagnostics will also be included as the bundle-info.json file.
      operationId: createDbcDiagnosticDataJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDbcDiagnosticDataJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateDbcDiagnosticDataJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listDbcDiagnosticDataJobs:
    post:
      x-mutating: false
      x-paging-default-max-items: 100
      x-form-factors: public
      summary: Get a list of diagnostic jobs for the given Database Catalog.
      description: Lists diagnostic jobs for the given Database Catalog. The output includes a list of jobs along with their current status and metadata related to each job.
      operationId: listDbcDiagnosticDataJobs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDbcDiagnosticDataJobsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDbcDiagnosticDataJobsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeDbcDiagnosticDataJob:
    post:
      x-mutating: false
      x-form-factors: public
      summary: Describes a diagnostic job for the given Database Catalog.
      description: Describes a diagnostic job for the given Database Catalog. The output includes a list of jobs along with their current status and some metadata related to each job.
      operationId: describeDbcDiagnosticDataJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDbcDiagnosticDataJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeDbcDiagnosticDataJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/deleteDbcDiagnosticDataJob:
    post:
      x-mutating: true
      x-form-factors: public
      summary: Deletes a diagnostic job for the given Database Catalog.
      description: Deletes a diagnostic job for the given Database Catalog. The job can be deleted even when its status is "Running".
      operationId: deleteDbcDiagnosticDataJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDbcDiagnosticDataJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteDbcDiagnosticDataJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listDbcEvents:
    post:
      x-mutating: false
      summary: Get the list of events for the given Database Catalog.
      description: Get the list of events for the given Database Catalog.
      operationId: listDbcEvents
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDbcEventsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDbcEventsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/createVw:
    post:
      x-no-compatibility-guarantee: true
      summary: Create a Virtual Warehouse.
      description: Create a Virtual Warehouse.
      operationId: createVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/dw/listVws:
    post:
      x-no-compatibility-guarantee: true
      summary: List Virtual Warehouses.
      description: List Virtual Warehouses.
      operationId: listVws
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListVwsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListVwsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/describeVw:
    post:
      x-no-compatibility-guarantee: true
      summary: Describe a Virtual Warehouse.
      description: Describe a Virtual Warehouse.
      operationId: describeVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/dw/updateVwConfig:
    post:
      x-mutating: true
      summary: Update a Virtual Warehouse configuration.
      description: Update a Virtual Warehouse configuration.
      operationId: updateVwConfig
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateVwConfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateVwConfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/deleteVw:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: true
      summary: Delete a Virtual Warehouse.
      description: Delete a Virtual Warehouse.
      operationId: deleteVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/restartVw:
    post:
      x-mutating: true
      summary: Restart a Virtual Warehouse.
      description: Restart a Virtual Warehouse.
      operationId: restartVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestartVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RestartVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/rebuildVw:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: true
      summary: Rebuild a Virtual Warehouse.
      description: Rebuild a Virtual Warehouse. Please use this feature for Virtual Warehouses which are in inconsistent or erroneous state. Running/Stopped Virtual Warehouses are safe to rebuild as well. This is a Beta feature. If a rebuild has been initiated, try to avoid rebuilding it again until it is completed or in erroneous state.
      operationId: rebuildVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RebuildVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RebuildVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/startVw:
    post:
      x-mutating: true
      summary: Starts a suspended Virtual Warehouse.
      description: Starts a suspended Virtual Warehouse. Has no effect if the VW is already started.
      operationId: startVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/StartVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/suspendVw:
    post:
      x-mutating: true
      summary: Suspends a running Virtual Warehouse.
      description: Suspends a running Virtual Warehouse. Has no effect if the VW is already suspended.
      operationId: suspendVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SuspendVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SuspendVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/createVwDiagnosticDataJob:
    post:
      x-mutating: true
      x-form-factors: public
      summary: Create a diagnostic job for the given Virtual Warehouse.
      description: Creates a job for the given Virtual Warehouse. The diagnostic data job is useful for troubleshooting purposes. The job collects logs and metrics (see --hive-download-options, --impala-download-options to see available options) which are going to be bundled into a single file and will be available at the desired location (see --destination). General metadata about the diagnostics will also be included as the bundle-info.json file.
      operationId: createVwDiagnosticDataJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateVwDiagnosticDataJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateVwDiagnosticDataJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listVwDiagnosticDataJobs:
    post:
      x-mutating: false
      x-paging-default-max-items: 100
      x-form-factors: public
      summary: Get a list of diagnostic jobs for the given Virtual Warehouse.
      description: Lists diagnostic jobs for the given Virtual Warehouse. The output includes a list of jobs along with their current status and metadata related to each job.
      operationId: listVwDiagnosticDataJobs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListVwDiagnosticDataJobsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListVwDiagnosticDataJobsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeVwDiagnosticDataJob:
    post:
      x-mutating: false
      x-form-factors: public
      summary: Describe a diagnostic jobs for the given Virtual Warehouse.
      description: Describes a diagnostic job for the given Virtual Warehouse. The output includes a list of jobs along with their current status and metadata related to each job.
      operationId: describeVwDiagnosticDataJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeVwDiagnosticDataJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeVwDiagnosticDataJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/deleteVwDiagnosticDataJob:
    post:
      x-mutating: true
      x-form-factors: public
      summary: Delete a diagnostic job for the given Virtual Warehouse.
      description: Delete a diagnostic job for the given Virtual Warehouse. The job can be deleted even when its status is "Running".
      operationId: deleteVwDiagnosticDataJob
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteVwDiagnosticDataJobRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteVwDiagnosticDataJobResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listVwEvents:
    post:
      x-mutating: false
      summary: Get the list of events for the given Virtual Warehouse.
      description: Get the list of events for the given Virtual Warehouse.
      operationId: listVwEvents
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListVwEventsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListVwEventsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listLatestVersions:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Lists the latest version of the product (if available) for all catalogs in the environment.
      description: Lists the latest version of the product (if available) for all catalogs in the environment.
      operationId: listLatestVersions
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLatestVersionsRequest'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ListLatestVersionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeVwConfig:
    post:
      x-mutating: false
      summary: Describes the current configuration of a Hive or Impala Virtual Warehouse.
      description: Describes the current configuration of a Hive or Impala Virtual Warehouse.
      operationId: describeVwConfig
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeVwConfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeVwConfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeConfig:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Describe a service configuration.
      description: Describe a service configuration.
      operationId: describeConfig
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeConfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeConfigDiff:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Get differences between two service configurations.
      description: Get differences between two service configurations.
      operationId: describeConfigDiff
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigDiffRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeConfigDiffResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listDbcConfigs:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Get the configuration history of a Database Catalog.
      description: Get the configuration history of a Database Catalog.
      operationId: listDbcConfigs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDbcConfigsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDbcConfigsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listVwConfigs:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: false
      summary: Get the configuration history of a Virtual Warehouse.
      description: Get the configuration history of a Virtual Warehouse.
      operationId: listVwConfigs
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListVwConfigsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListVwConfigsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/updateVw:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: true
      summary: Update the configuration of a Virtual Warehouse.
      description: Update the configuration of a Virtual Warehouse.
      operationId: updateVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/updateDbc:
    post:
      x-no-compatibility-guarantee: true
      x-mutating: true
      summary: Update the configuration of a Database Catalog.
      description: Update the configuration of a Database Catalog.
      operationId: updateDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/addUser:
    post:
      x-mutating: true
      summary: Adds the given user to the cluster.
      description: Adds the given user to the cluster. Please note that the user must pre-exist.
      operationId: addUser
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddUserRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AddUserResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/deleteUser:
    post:
      x-mutating: true
      summary: Deletes the given user from the cluster.
      description: Deletes the given user from the cluster. Please note that the user itself won't be deleted, only removed from the cluster.
      operationId: deleteUser
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteUserResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listUsers:
    post:
      x-mutating: false
      summary: Lists the users who have access to the cluster.
      description: Lists the users who have access to the cluster.
      operationId: listUsers
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUsersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListUsersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/upgradeDbc:
    post:
      x-mutating: true
      summary: Upgrades the Database Catalog to a compatible version.
      description: Upgrades the Database Catalog to a compatible version.
      operationId: upgradeDbc
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeDbcRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeDbcResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/upgradeVw:
    post:
      x-mutating: true
      summary: Upgrades the Virtual Warehouse to a compatible version.
      description: Upgrades the Virtual Warehouse to a compatible version.
      operationId: upgradeVw
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeVwRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeVwResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/getUpgradeVwVersions:
    post:
      x-mutating: false
      summary: Gets the latest version and latest compatible version for Virtual Warehouse.
      description: Gets the latest version and latest compatible version for Virtual Warehouse.
      operationId: getUpgradeVwVersions
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetUpgradeVwVersionsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetUpgradeVwVersionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/getUpgradeDbcVersions:
    post:
      x-mutating: false
      summary: Gets the latest version and latest compatible version for Database Catalog.
      description: Gets the latest version and latest compatible version for Database Catalog.
      operationId: getUpgradeDbcVersions
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetUpgradeDbcVersionsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetUpgradeDbcVersionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/healthCheck:
    post:
      x-mutating: false
      summary: Check the health of the API.
      description: Check the health of the API.
      operationId: healthCheck
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/HealthCheckRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/HealthCheckResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/createBackup:
    post:
      summary: Creates a backup for the data warehouse.
      description: Creates an on-demand backup for the data warehouse including Kubernetes objects, persistent volumes, etc. Backup requests are processed asynchronously and instantaneously.
      operationId: createBackup
      x-right: dw/createBackup
      x-mutating: true
      x-form-factors: private
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateBackupRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateBackupResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/deleteBackup:
    post:
      summary: Deletes a data warehouse backup.
      description: Deletes an existing data warehouse backup. The call returns immediately.
      operationId: deleteBackup
      x-right: dw/deleteBackup
      x-mutating: true
      x-form-factors: private
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBackupRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteBackupResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeBackup:
    post:
      summary: Describes the backup.
      description: Returns the description of an existing data warehouse backup.
      operationId: describeBackup
      x-right: dw/describeBackup
      x-mutating: false
      x-form-factors: private
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeBackupRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeBackupResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/restoreBackup:
    post:
      summary: Restores backup.
      description: Restores the state of the data warehouse from an existing backup.
      operationId: restoreBackup
      x-right: dw/restoreBackup
      x-mutating: true
      x-form-factors: private
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestoreBackupRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RestoreBackupResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/describeRestore:
    post:
      summary: Describes the restore.
      description: Returns the description of a data warehouse restore operation.
      operationId: describeRestore
      x-right: dw/describeRestore
      x-mutating: false
      x-form-factors: private
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRestoreRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeRestoreResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listBackupEntities:
    post:
      summary: Lists potential backup entities associated with the data warehouse.
      description: Lists potential backup entities associated with the data warehouse.
      operationId: listBackupEntities
      x-right: dw/listBackupEntities
      x-mutating: false
      x-form-factors: private
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListBackupEntitiesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListBackupEntitiesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listBackups:
    post:
      summary: Lists backups.
      description: Lists backups associated with the data warehouse.
      operationId: listBackups
      x-right: dw/listBackups
      x-mutating: false
      x-form-factors: private
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListBackupsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListBackupsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/listRestores:
    post:
      summary: Lists restores.
      description: Lists restores associated with the data warehouse.
      operationId: listRestores
      x-right: dw/listRestores
      x-mutating: false
      x-form-factors: private
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRestoresRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListRestoresResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/dw/getLogs:
    post:
      summary: Gets job logs.
      description: Given the CRN, returns the corresponding job logs.
      operationId: getLogs
      x-right: dw/getLogs
      x-mutating: false
      x-form-factors: private
      x-no-compatibility-guarantee: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLogsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetLogsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
definitions:
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  DescribeClusterRequest:
    type: object
    description: Request object for the describeCluster method. Use only one of environmentName, clusterCrn and clusterId.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to describe.
  DescribeClusterResponse:
    type: object
    description: Response object for the describeCluster method.
    properties:
      cluster:
        description: The cluster.
        $ref: '#/definitions/ClusterSummaryResponse'
  DescribeKubeconfigRequest:
    type: object
    description: Request object for the describeKubeconfig method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to describe.
  DescribeKubeconfigResponse:
    type: object
    description: Response object for the describeKubeconfig method.
    properties:
      kubeconfig:
        type: string
        description: The kubeconfig.
  DescribeAllowedInstanceTypesRequest:
    type: object
    description: Request object for the describeAllowedInstanceTypes method.
  DescribeAllowedInstanceTypesResponse:
    type: object
    properties:
      aws:
        description: Instance type settings that are being used during cluster creation command on the AWS platform
        $ref: '#/definitions/AllowedInstanceTypes'
      azure:
        description: Instance type settings that are being used during cluster creation command on the Azure platform
        $ref: '#/definitions/AllowedInstanceTypes'
    description: Response object for the describeAllowedInstanceTypes method.
  AllowedInstanceTypes:
    type: object
    description: Allowed compute instance type values and default compute instance type value.
    properties:
      default:
        type: array
        description: Default value for the compute instance type usage. This setting is Cluster-wide.
        items:
          type: string
      allowed:
        type: array
        description: Allowed values for the instance type. This setting is Cluster-wide.
        items:
          type: string
  DescribeServerSettingRequest:
    type: object
    description: Request object for the describeServerSetting method.
    x-form-factors: private
  DescribeServerSettingResponse:
    type: object
    description: Response object for the describeServerSetting method.
    x-form-factors: private
    properties:
      settings:
        type: array
        items:
          $ref: '#/definitions/DescribeServerSettingItem'
        description: The list of the server settings.
  DescribeServerSettingItem:
    type: object
    description: A DWX server setting.
    x-form-factors: private
    properties:
      configurationName:
        type: string
        description: The name of the setting in human readable format.
      configurationKey:
        type: string
        description: The identifier of the setting.
      enabled:
        type: boolean
        description: The state of the setting.
      description:
        type: string
        description: The description of the setting.
      requiresUpdate:
        type: array
        items:
          $ref: '#/definitions/DescribeServerSettingItemRequiresUpdate'
        description: Indicates update requirements for the change to take effect.
  DescribeServerSettingItemRequiresUpdate:
    type: string
    description: Indicates an update requirement for the change to take effect. `ENVIRONMENT` - Means that the environments need to be updated/recreated for the setting change to take effect. `DBC` - Means that the Database Catalogs need an update/recreation. `VW` - Means that the Virtual Warehouses need the update/recreation. `VIZ` - Means that the Dataviz need the update/recreation.
    x-form-factors: private
    enum:
      - ENVIRONMENT
      - DBC
      - VW
      - VIZ
  UpdateServerSettingRequest:
    type: object
    description: Request object for the updateServerSetting method.
    x-form-factors: private
    properties:
      settings:
        type: array
        items:
          $ref: '#/definitions/UpdateServerSettingItem'
        description: The list of the server setting updates.
  UpdateServerSettingResponse:
    type: object
    description: Response object for the updateServerSetting method.
    x-form-factors: private
    properties:
      status:
        type: string
        description: Update status.
  UpdateServerSettingItem:
    type: object
    description: A DWX server setting update.
    x-form-factors: private
    properties:
      configurationKey:
        type: string
        description: The identifier of the setting.
      enabled:
        type: boolean
        description: The state of the setting.
  ListEventsRequest:
    x-form-factors: public,private
    type: object
    description: Request object for the listEvents method.
    properties:
      operationId:
        type: string
        description: Filter events based on the operation ID. Either operation ID or service ID is required.
      serviceId:
        type: string
        description: Filter events based on the service ID. It can be Cluster ID, Database Catalog ID, Virtual Warehouse ID or Data Visualization App ID.
      limit:
        type: integer
        format: int32
        description: Limit the number of returned rows. If not specified then the recent 20 events will be returned. The maximum is 100.
      ascending:
        type: boolean
        default: false
        description: Provide the result in ascending order, default is descending.
  ListEventsResponse:
    x-form-factors: public,private
    type: object
    description: Response object for the listEvents method.
    properties:
      events:
        type: array
        description: List of the events.
        items:
          $ref: '#/definitions/Event'
  Event:
    x-form-factors: public,private
    type: object
    description: Represents a Event.
    properties:
      operationId:
        type: string
        description: The ID of the operation to which the event belongs.
      serviceId:
        type: string
        description: The ID of the service to which the event belongs.
      event:
        type: string
        description: The name of the event.
      message:
        type: string
        description: Detailed message.
      timestamp:
        type: string
        format: date-time
        description: The timestamp of the event.
  UpdateSshKeyRequest:
    type: object
    description: Request object for the updateSshKey method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to update the SSH Key.
  UpdateSshKeyResponse:
    type: object
    description: Response object for the updateSshKey method.
    properties:
      status:
        type: string
        description: The status of the cluster.
      message:
        type: string
        description: A message describing the outcome of the SSH Key update process.
  RenewCertificatesRequest:
    type: object
    description: Request object for the renewCertificates method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the Azure cluster to renew certificates for.
  RenewCertificatesResponse:
    type: object
    description: Response object for the renewCertificates method.
  CreateClusterRequest:
    type: object
    description: Request object for the createCluster method.
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of the environment for the cluster to create.
      useOverlayNetwork:
        type: boolean
        description: Using an overlay network will save IP addresses in the VPC by using a private IP address range for Pods in the cluster.
      databaseBackupRetentionPeriod:
        type: integer
        format: int32
        default: 30
        description: PostgreSQL server backup retention days.
      whitelistIpCIDRs:
        x-form-factors: public,private
        type: string
        description: This field is still available for Private Cloud deployments, however it'll be removed for Public Cloud in the next DWX release. Please use the use 'whitelistK8sClusterAccessIpCIDRs' in combination of 'whitelistWorkloadAccessIpCIDRs' on Public Cloud. Comma separated list of IP address CIDRs to whitelist.
      whitelistK8sClusterAccessIpCIDRs:
        type: array
        items:
          type: string
        description: List of IP address CIDRs to whitelist for kubernetes cluster access.
      whitelistWorkloadAccessIpCIDRs:
        type: array
        items:
          type: string
        description: List of IP address CIDRs to whitelist for workload access.
      usePrivateLoadBalancer:
        type: boolean
        description: Set up load balancer with private IP address. In AWS it is created in private subnets. In Azure an internal load balancer gets created. Make sure there is connectivity between your client network and the network (VPC/VNet) where CDW environment is deployed.
      usePublicWorkerNode:
        type: boolean
        description: Set up worker node with public IP address. In AWS it is created in public subnets.
      enableStorageRoles:
        type: boolean
        description: Enable Storage Roles
        default: false
        x-form-factors: public
        x-entitlement: CDW_STORAGE_ROLES
      reservedComputeNodes:
        x-entitlement: CDW_CLUSTER_OVERPROVISIONER
        type: integer
        format: int32
        description: Set additional number of nodes to reserve for executors and coordinators to use during autoscaling. Adding more reserved nodes increases your cloud costs.
      reservedSharedServicesNodes:
        x-entitlement: CDW_CLUSTER_OVERPROVISIONER
        type: integer
        format: int32
        description: Set additional number of nodes to reserve for other services in the cluster. Adding more reserved nodes increases your cloud costs.
      customRegistryOptions:
        description: Options for custom ACR/ECR/Docker registries.
        $ref: '#/definitions/CustomRegistryOptions'
      awsOptions:
        description: Options for activating an AWS environment.
        $ref: '#/definitions/AwsActivationOptions'
        x-form-factors: public
      azureOptions:
        description: Options for activating an Azure environment.
        $ref: '#/definitions/AzureActivationOptions'
        x-form-factors: public
      privateCloudOptions:
        description: Options for activating a Private Cloud environment.
        $ref: '#/definitions/PrivateCloudActivationOptions'
        x-form-factors: private
      customSubdomain:
        type: string
        description: Custom environment subdomain. Overrides the environment subdomain using a customized domain either in the old subdomain format like ENV_ID.dw or the new format like dw-ENV_NAME.
  BackupClusterRequest:
    type: object
    description: Request object for the backupCluster method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster.
  BackupClusterResponse:
    type: object
    description: Response object for the backupCluster method.
    properties:
      clusterId:
        type: string
        description: The ID of the cluster.
      operationId:
        type: string
        description: The the ID of the backup operation.
      timestamp:
        type: string
        format: date-time
        description: The date of the creation.
      data:
        x-sensitive: true
        type: string
        description: The backup data.
      md5:
        x-sensitive: true
        type: string
        description: The md5 hash of the encoded data.
  RestoreClusterRequest:
    type: object
    description: Request object for the restoreCluster method.
    required:
      - clusterId
      - data
    properties:
      clusterId:
        type: string
        description: The ID of the cluster.
      data:
        type: string
        description: Dump of configuration received by calling "dump-cluster" command.
  RestoreClusterResponse:
    type: object
    description: Response object for the restoreCluster method.
    properties:
      clusterId:
        type: string
        description: The the ID of the cluster.
      operationId:
        type: string
        description: The the ID of the restore operation.
      action:
        type: string
        description: 'The cluster action. Possible actions: Create, Skip'
      message:
        type: string
        description: The description of the cluster action.
      dbcRestorePlans:
        type: array
        description: Information about the restore-plan of the DbCatalogs.
        items:
          $ref: '#/definitions/RestoreClusterEntityPlan'
      hueRestorePlans:
        type: array
        description: Information about the restore-plan of Hue.
        items:
          $ref: '#/definitions/RestoreClusterEntityPlan'
      hiveRestorePlans:
        type: array
        description: Information about the restore-plan of the Hive Virtual Warehouses.
        items:
          $ref: '#/definitions/RestoreClusterEntityPlan'
      impalaRestorePlans:
        type: array
        description: Information about the restore-plan of the Impala Virtual Warehouses.
        items:
          $ref: '#/definitions/RestoreClusterEntityPlan'
      vizRestorePlans:
        type: array
        description: Information about the restore-plan of the Data Visualization Apps.
        items:
          $ref: '#/definitions/RestoreClusterEntityPlan'
  RestoreClusterEntityPlan:
    type: object
    description: Entity status after the restore operation.
    properties:
      ref:
        type: string
        description: The reference of the entity in the backup data.
      id:
        type: string
        description: The ID of the entity.
      action:
        type: string
        description: 'The action associated with the plan. Possible actions: Create, Update, Skip'
      message:
        type: string
        description: The description of the plan.
  CustomRegistryOptions:
    type: object
    description: Options for custom ACR, ECR, or Docker registry.
    properties:
      registryType:
        enum:
          - ACR
          - ECR
          - Docker
        type: string
        description: Custom registry type.
      repositoryUrl:
        type: string
        description: URL of the custom image repository.
        x-no-paramfile: true
      userName:
        type: string
        description: Username for custom registry access (required only for Docker type).
      password:
        type: string
        description: Password for custom registry access (required only for Docker type).
      disableImageVerification:
        type: boolean
        description: Disable image verification.
  AwsActivationOptions:
    type: object
    description: Options for activating an AWS environment.
    properties:
      workerSubnetIds:
        type: array
        description: IDs of AWS subnets where the cluster worker nodes should be deployed.
        items:
          type: string
      lbSubnetIds:
        type: array
        description: IDs of AWS subnets where the cluster load balancer should be deployed.
        items:
          type: string
      customAmiId:
        type: string
        description: Custom AMI ID.
      nodeRoleCDWManagedPolicyArn:
        type: string
        description: Managed Policy Arn to be attached to the Node Instance Role.
      enableSpotInstances:
        type: boolean
        description: Whether to enable Spot instances for Virtual warehouses. It cannot be updated later. If the aws-options is not provided it defaults to false.
        default: false
      reducedPermissionMode:
        type: boolean
        description: Use this option to activate the environment with fewer than half of the standard required IAM permissions on your AWS cross-account IAM role.
      computeInstanceTypes:
        type: array
        items:
          type: string
        description: AWS compute instance types that the environment is restricted to use. This affects the creation of virtual warehouses where this restriction will apply. Select an instance type that meets your computing, memory, networking, or storage needs. As of now, only a single instance type can be listed. Use describe-allowed-instance-types to see currently possible values.
      additionalInstanceTypes:
        type: array
        items:
          type: string
        description: Additional (fallback) instance types listed in their priority order. They will be used instead of the primary compute instance type in case it is unavailable. You cannot include any instance type that was already indicated in computeInstanceTypes. Use describe-allowed-instance-types to see currently supported values and also the default value when nothing is provided for the computeInstanceTypes.
  AzureActivationOptions:
    type: object
    description: Options for activating an Azure environment.
    properties:
      userAssignedManagedIdentity:
        type: string
        description: Resource ID of the managed identity used by AKS. It is a mandatory parameter for Azure cluster creation.
      subnetId:
        type: string
        description: ID of Azure subnet where the cluster should be deployed. It is a mandatory parameter for Azure cluster creation.
      enableAZ:
        type: boolean
        description: Enables Azure Availability Zones for the cluster deployment.
      enableSpotInstances:
        type: boolean
        description: Whether to enable spot instances for Virtual warehouses. It cannot be updated later. If the AzureActivationOptions is not provided it defaults to false.
        default: false
      computeInstanceTypes:
        type: array
        items:
          type: string
        description: Azure compute instance types that the environment is restricted to use. This affects the creation of virtual warehouses where this restriction will apply. Select an instance type that meets your computing, memory, networking, or storage needs. As of now, only a single instance type can be listed. Use describe-allowed-instance-types to see currently possible values and the default value used for the case it is not provided.
      logAnalyticsWorkspaceId:
        type: string
        description: Enable monitoring of Azure Kubernetes Service (AKS) cluster. Workspace ID for Azure log analytics.
      outboundType:
        type: string
        description: Network outbound type. This setting controls the egress traffic for cluster nodes in Azure Kubernetes Service. Please refer to the following AKS documentation on the Azure portal. https://learn.microsoft.com/en-us/azure/aks/egress-outboundtype, https://learn.microsoft.com/en-us/azure/aks/nat-gateway
        enum:
          - LoadBalancer
          - UserAssignedNATGateway
          - UserDefinedRouting
      enablePrivateSQL:
        type: boolean
        description: Enables private SQL for the cluster deployment.
        default: false
      privateDNSZoneAKS:
        type: string
        description: Private DNS zone AKS resource ID.
      enablePrivateAks:
        type: boolean
        description: Enable Azure Private AKS mode. Note that this feature is currently unstable due to critical networking issues within the Azure Software Definition Layer (SDN). This problem prevents the deployment of necessary components and results in unpredictable behavior and instability, impacting operations such as environment activation, VW creation, modification, and start/stop operations. While we work towards a resolution with Microsoft, estimated within the next 6-9 months, we recommend utilizing alternative methods like enabling public endpoints or virtual network peering for accessing your Azure Cluster.
        default: false
  PrivateCloudActivationOptions:
    type: object
    description: Options for activating a Private Cloud environment.
    required:
      - delegationUsername
      - delegationPassword
    properties:
      delegationUsername:
        type: string
        description: Name of delegation user. This user is used between Hue - Impala to create a session, as Hue should not pass the user credentials, instead Hue authenticates with the delegation user, then this user will impersonate the logged in user. This means that the Delegation User and Password should be able to authenticate through LDAP.
      delegationPassword:
        type: string
        description: Password of delegation user.
      securityContextConstraintName:
        type: string
        description: The name of the Hive Security Context Constraint.
      storageClass:
        type: string
        description: The storage class for the Local Storage Operator.
      dbDas:
        type: string
        description: The name of the DAS database. Not required for embedded databases
      dbHue:
        type: string
        description: The name of the HUE database. Not required for embedded databases.
  CreateClusterResponse:
    type: object
    description: Response object for the createCluster method.
    properties:
      clusterId:
        type: string
        description: ID of new cluster.
  DeleteClusterRequest:
    type: object
    description: Request object for the deleteCluster method.
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to delete.
      force:
        type: boolean
        default: false
        description: 'Force delete means CDW will delete the cluster even if there are attached DB Catalogs and Virtual Warehouses. All managed data will be lost and will not be recoverable. Force delete attempts all steps of the deletion even if previous steps have failed. NOTICE: Be aware that a Force delete may not remove all resources due to cloud provider constraints. Should this happen, it is responsibility of the user to ensure the impacted resources are deleted on the cloud provider.'
    required:
      - clusterId
  DeleteClusterResponse:
    type: object
    description: Response object for the deleteCluster method.
  UpgradeClusterRequest:
    type: object
    description: Request object for the upgradeCluster method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to upgrade.
  UpgradeClusterResponse:
    type: object
    description: Response object for the upgradeCluster method.
    properties:
      status:
        type: string
        description: 'The upgrade status. Possible values are: Upgrading, Error, Failed.'
      message:
        type: string
        description: Detailed explanation of the status.
      timedOut:
        type: boolean
        description: True if the upgrade timed out, false or omitted otherwise.
      serviceUnhealthy:
        type: boolean
        description: True, if the service is in unhealthy state, false or omitted otherwise.
  UpdateClusterRequest:
    type: object
    description: Request object for the updateCluster method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to update.
      description:
        type: string
        description: Cluster description.
      whitelistIpCIDRs:
        x-form-factors: public,private
        type: array
        items:
          type: string
        description: 'List of IP address CIDRs to whitelist. NOTE: CDW is in process of rolling out a new feature to whitelist IP CIDR separately for Kubernetes Clusters and Loadbalancers on CDP Public Cloud. For an existing cluster, if different IP CIDR has been already applied to LoadBalancer and the Kubernetes cluster through the DWX UI, then updating the IP CIDR of such cluster is not supported from CLI. In the upcoming release, the CLI will support this feature. Please make use of UI for the same.'
      whitelistK8sClusterAccessIpCIDRs:
        type: array
        items:
          type: string
        description: List of IP address CIDRs to whitelist for kubernetes cluster access.
      whitelistWorkloadAccessIpCIDRs:
        type: array
        items:
          type: string
        description: List of IP address CIDRs to whitelist for workload access.
      awsUpdate:
        type: object
        description: Additional properties for AWS clusters.
        properties:
          externalBuckets:
            type: object
            description: External bucket definition.
            additionalProperties:
              description: External bucket access information.
              $ref: '#/definitions/UpdateClusterExternalBucketAccessInfo'
      azureUpdate:
        type: object
        description: Additional properties for Azure clusters.
        properties:
          renewCertificate:
            type: boolean
            default: false
            description: Renew Azure cluster certificate.
      observabilityConfig:
        description: Cluster observability configurations to update. You can forward logs from environments activated in Cloudera Data Warehouse (CDW) to observability and monitoring systems such as Datadog, New Relic, or Splunk. Please refer to the following Cloudera documentation for more info. https://docs.cloudera.com/data-warehouse/cloud/monitoring/topics/dw-observability-log-forwarding.html
        $ref: '#/definitions/UpdateClusterObservabilityConfig'
  ExternalBucketAccessInfo:
    type: object
    description: External bucket definition.
    properties:
      accessMode:
        type: string
        description: Specifies whether the external bucket will be added in read-only or read-write mode.
        enum:
          - READ
          - READWRITE
      kmsCmkArn:
        type: string
        description: Enable server side encryption with the specified KMS CMK ARN. If the value is empty or unspecified, default server side encryption will be used when the access mode is read-write. Otherwise this value is ignored.
  UpdateClusterExternalBucketAccessInfo:
    type: object
    description: Cluster external bucket definition to update.
    properties:
      accessMode:
        type: string
        description: Specifies whether the external bucket will be added in read-only or read-write mode.
        enum:
          - READ
          - READWRITE
      kmsCmkArn:
        type: string
        description: Enable server side encryption with the specified KMS CMK ARN. If the value is empty or unspecified, default server side encryption will be used when the access mode is read-write. Otherwise this value is ignored.
  UpdateClusterObservabilityConfig:
    type: object
    description: Cluster observability settings to update.
    properties:
      logsForwardingConfig:
        type: string
        description: Create the log forwarding configuration in a valid fluentd format. Then that configuration is later inserted into a larger fluentd configuration.
      proxyCABundle:
        type: string
        description: Set the proxy CA certificates (PEM Bundle). If you use a TLS-terminating proxy server to inspect outbound internet traffic, you need to provide the proxy server's CA certificates bundle in PEM bundle format when you configure log forwarding.
  UpdateClusterResponse:
    type: object
    description: Response object for the updateCluster method.
  ListClustersRequest:
    type: object
    description: Request object for the listClusters method.
    properties:
      environmentCrn:
        type: string
        description: Filter returned clusters for the belonging Environment CRN.
      clusterId:
        type: string
        description: Filter returned clusters by cluster ID.
      name:
        type: string
        description: Filter returned clusters by name.
      status:
        type: string
        description: Filter returned clusters by cluster status.
        enum:
          - Creating
          - Created
          - Accepted
          - Starting
          - Running
          - Stopping
          - Stopped
          - Updating
          - PreUpdate
          - PreUpgrade
          - Restarting
          - Deleting
          - Upgrading
          - Waiting
          - Error
          - Failed
      cloudPlatform:
        x-form-factors: public
        type: string
        description: Filter returned clusters by hosting platform.
        enum:
          - AWS
          - AZURE
  ListClustersResponse:
    type: object
    description: Response object for the listClusters method.
    properties:
      clusters:
        type: array
        items:
          $ref: '#/definitions/ClusterSummaryResponse'
        description: The list of clusters.
  CreateDataVisualizationRequest:
    type: object
    description: Request object for the createDataVisualization call.
    required:
      - clusterId
      - name
      - config
    properties:
      clusterId:
        type: string
        description: ID of cluster where Cloudera Data Visualization should be created.
      name:
        type: string
        description: Name of the Cloudera Data Visualization
      config:
        description: The LDAP admin and user group configuration for Cloudera Data Visualization.
        $ref: '#/definitions/VizConfig'
      imageVersion:
        type: string
        description: Version of the Cloudera Data Visualization.
        x-form-factors: public
      templateName:
        type: string
        description: The template size for the Cloudera Data Visualization.
  CreateDataVisualizationResponse:
    type: object
    description: Response object for the createDataVisualization method.
    properties:
      dataVisualizationId:
        type: string
        description: ID of the new Cloudera Data Visualization.
  ListDataVisualizationsRequest:
    type: object
    description: Request object for the listDataVisualizations method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: ID of cluster to list Cloudera Data Visualizations.
  ListDataVisualizationsResponse:
    type: object
    description: Response object for the listDataVisualizations method.
    properties:
      dataVisualizations:
        type: array
        items:
          $ref: '#/definitions/DataVisualizationSummary'
        description: The list of Cloudera Data Visualizations.
  DeleteDataVisualizationRequest:
    type: object
    description: Request object for the deleteDataVisualization method.
    required:
      - clusterId
      - dataVisualizationId
    properties:
      clusterId:
        type: string
        description: ID of the Cloudera Data Visualization's cluster.
      dataVisualizationId:
        type: string
        description: ID of the Cloudera Data Visualization to delete from the cluster.
  DeleteDataVisualizationResponse:
    type: object
    description: Response object for the deleteDataVisualization method.
    properties:
      status:
        type: string
        description: The status of asynchronous delete request for Cloudera Data Visualization. To find the latest status please use describe-data-visualization. Once the Data Visualization is deleted, the describe-data-visualization would return a not found error.
  DescribeDataVisualizationRequest:
    type: object
    description: Request object for the describeDataVisualization method.
    required:
      - clusterId
      - dataVisualizationId
    properties:
      clusterId:
        type: string
        description: ID of the Cloudera Data Visualization's cluster.
      dataVisualizationId:
        type: string
        description: ID of the Cloudera Data Visualization
  DescribeDataVisualizationResponse:
    type: object
    description: Response object for the describeDataVisualization method.
    properties:
      dataVisualization:
        description: The Cloudera Data Visualization.
        $ref: '#/definitions/DataVisualizationSummary'
  UpdateDataVisualizationRequest:
    type: object
    description: Request object for the updateDataVisualization method.
    required:
      - clusterId
      - dataVisualizationId
    properties:
      clusterId:
        type: string
        description: ID of the Cloudera Data Visualization's cluster.
      dataVisualizationId:
        type: string
        description: ID of the Cloudera Data Visualization.
      config:
        description: The service configuration to update the DataVisualization with. This will be applied on top of the existing configuration so there's no need to list configurations that stay the same.
        $ref: '#/definitions/VizConfig'
  UpdateDataVisualizationResponse:
    type: object
    description: Response object for the updateDataVisualization method.
    properties:
      status:
        type: string
        description: The status of asynchronous update configuration request for Cloudera Data Visualization. To find the latest status please use describe-data-visualization.
  CreateDbcRequest:
    type: object
    description: Request object for the createDbc method.
    required:
      - clusterId
      - name
    properties:
      clusterId:
        type: string
        description: ID of cluster where Database Catalog should be created.
      name:
        type: string
        description: Name of the Database Catalog.
      loadDemoData:
        type: boolean
        description: Load demo data into the Database Catalog?
      imageVersion:
        type: string
        description: Version of the Database Catalog.
        default: ''
        x-form-factors: public
      isDefault:
        type: boolean
        x-deprecated: true
        description: 'NOTE: creating Default Database Catalogs is deprecated and explicitly disabled. Denotes if Default Database Catalog creation needed.'
        default: false
      tenantStorageRole:
        type: string
        description: Tenant Storage Role if the feature is enabled for the account.
        default: ''
      dbMetastore:
        type: string
        description: The name of the Metastore database.
        default: ''
        x-form-factors: private
      dbDas:
        type: string
        description: The name of the DAS database. Not required for embedded databases.
        default: ''
        x-form-factors: private
      dbHue:
        type: string
        description: The name of the HUE database. Not required for embedded databases.
        default: ''
        x-form-factors: private
  CreateClusterDiagnosticDataJobRequest:
    type: object
    description: Request object for the createClusterDiagnosticDataJob method.
    x-form-factors: public
    required:
      - clusterId
      - destination
    properties:
      clusterId:
        type: string
        description: ID of the Cluster.
      destination:
        type: string
        description: Destination of the diagnostics collection.
        enum:
          - UPLOAD_TO_CLOUDERA
          - DOWNLOAD
      startTime:
        type: string
        format: date-time
        description: The resulting bundle will contain logs/metrics after the specified start time. If not indicated, then 30 minutes ago from now is taken as the start time.
      endTime:
        type: string
        format: date-time
        description: The resulting bundle will contain logs/metrics before the specified end time. If not indicated, then the current time is taken as the end time.
      caseNumber:
        type: string
        description: Optional support case number in case of UPLOAD_TO_CLOUDERA destination, otherwise only act as additional data.
      bundleMetadata:
        type: object
        additionalProperties:
          type: string
        description: Additional user-defined metadata information that is attached to the resulting bundle-info.json when posting the bundle.
      force:
        type: boolean
        default: false
        description: Forced recreation of the diagnostic job.
      downloadOptions:
        description: Cluster diagnostic options. If not provided, everything will be included in the Diagnostic Data.
        $ref: '#/definitions/ClusterCreateDiagnosticDataDownloadOptions'
  CreateClusterDiagnosticDataJobResponse:
    type: object
    description: Response object for the createClusterDiagnosticDataJob method.
    x-form-factors: public
    properties:
      id:
        type: string
        description: Identifier for each bundle collection.
      status:
        type: string
        description: Status of the diagnostics collection request.
      url:
        type: string
        description: This URL points to a download location if the destination is DOWNLOAD.
      labels:
        type: object
        description: Additional key-value pair attributes associated with the Diagnostic Data Job.
        additionalProperties:
          type: string
  ListClusterDiagnosticDataJobsRequest:
    type: object
    description: Request object for the listClusterDiagnosticDataJobs method.
    x-form-factors: public
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: ID of the Cluster.
      status:
        description: Filter for job status, only those jobs will be returned which have the given status.
        $ref: '#/definitions/DiagnosticDataJobStatus'
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
        x-paging-input-token: true
  ListClusterDiagnosticDataJobsResponse:
    type: object
    description: Response object for the listClusterDiagnosticDataJobs method.
    x-form-factors: public
    properties:
      jobs:
        type: array
        description: The list of jobs belonging to the particular cluster.
        items:
          $ref: '#/definitions/ClusterDiagnosticDataJob'
        x-paging-result: true
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If there are no additional results, the string is empty.
  ClusterDiagnosticDataJob:
    type: object
    description: Represents a Diagnostic Data Job.
    x-form-factors: public
    properties:
      jobId:
        type: string
        description: The unique identifier of the Diagnostic Data Job.
      startTime:
        type: string
        format: date-time
        description: The start time of the Diagnostic Data Job.
      endTime:
        type: string
        format: date-time
        description: The finish time of the Diagnostic Data Job.
      url:
        type: string
        description: This URL points to a download location if the destination is DOWNLOAD.
      status:
        description: The job status.
        $ref: '#/definitions/DiagnosticDataJobStatus'
      labels:
        type: object
        description: Additional key-value pair attributes associated with the Diagnostic Data Job.
        additionalProperties:
          type: string
  DescribeClusterDiagnosticDataJobRequest:
    type: object
    description: Request object for the describeClusterDiagnosticDataJob method.
    x-form-factors: public
    required:
      - clusterId
      - jobId
    properties:
      clusterId:
        type: string
        description: ID of the Cluster.
      jobId:
        type: string
        description: ID of the diagnostic job.
  DescribeClusterDiagnosticDataJobResponse:
    type: object
    description: Response object for the describeClusterDiagnosticDataJob method.
    x-form-factors: public
    properties:
      job:
        description: The job belonging to the particular Cluster.
        $ref: '#/definitions/ClusterDiagnosticDataJob'
  DeleteClusterDiagnosticDataJobRequest:
    type: object
    description: Request object for the deleteClusterDiagnosticDataJob method.
    x-form-factors: public
    required:
      - clusterId
      - jobId
    properties:
      clusterId:
        type: string
        description: ID of the Cluster.
      jobId:
        type: string
        description: ID of the diagnostic job.
  DeleteClusterDiagnosticDataJobResponse:
    type: object
    description: Response object for the deleteClusterDiagnosticDataJob method.
    x-form-factors: public
  CreateDbcDiagnosticDataJobRequest:
    type: object
    description: Request object for the createDbcDiagnosticDataJob method.
    x-form-factors: public
    required:
      - clusterId
      - dbcId
      - destination
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
      destination:
        type: string
        description: Destination of the diagnostics collection.
        enum:
          - UPLOAD_TO_CLOUDERA
          - DOWNLOAD
      startTime:
        type: string
        format: date-time
        description: The resulting bundle will contain logs/metrics after the specified start time. If not indicated, then 30 minutes ago from now is taken as the start time.
      endTime:
        type: string
        format: date-time
        description: The resulting bundle will contain logs/metrics before the specified end time. If not indicated, then the current time is taken as the end time.
      caseNumber:
        type: string
        description: Optional support case number in case of UPLOAD_TO_CLOUDERA destination, otherwise only act as additional data.
      bundleMetadata:
        type: object
        additionalProperties:
          type: string
        description: Additional user-defined metadata information which is attached to resulting bundle-info.json when posting the bundle.
      force:
        type: boolean
        default: false
        description: Forced recreation of the diagnostic job.
      downloadOptions:
        description: Database Catalog diagnostic options. If not provided, everything will be included in the Diagnostic Data.
        $ref: '#/definitions/DBCCreateDiagnosticDataDownloadOptions'
  CreateDbcDiagnosticDataJobResponse:
    type: object
    description: Response object for the createDbcDiagnosticDataJob method.
    x-form-factors: public
    properties:
      id:
        type: string
        description: Identifier for each bundle collection.
      status:
        type: string
        description: Status of the diagnostics collection request.
      url:
        type: string
        description: This URL points to a download location if the destination is DOWNLOAD.
      labels:
        type: object
        description: Additional key-value pair attributes associated with the Diagnostic Data Job.
        additionalProperties:
          type: string
  ListDbcDiagnosticDataJobsRequest:
    type: object
    description: Request object for the listDbcDiagnosticDataJobsRequest method.
    x-form-factors: public
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
      status:
        description: Filter for job type
        $ref: '#/definitions/DiagnosticDataJobStatus'
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
        x-paging-input-token: true
  ListDbcDiagnosticDataJobsResponse:
    type: object
    description: Response object for the listDbcDiagnosticDataJobsRequest method.
    x-form-factors: public
    properties:
      jobs:
        type: array
        description: The list of the jobs belonging to the particular Database Catalog
        items:
          $ref: '#/definitions/DbcDiagnosticDataJob'
        x-paging-result: true
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If there are no additional results, the string is empty.
  DescribeDbcDiagnosticDataJobRequest:
    type: object
    description: Request object for the describeDbcDiagnosticDataJobRequest method.
    x-form-factors: public
    required:
      - clusterId
      - dbcId
      - jobId
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
      jobId:
        type: string
        description: ID of the diagnostic job.
  DescribeDbcDiagnosticDataJobResponse:
    type: object
    description: Response object for the describeDbcDiagnosticDataJobRequest method.
    x-form-factors: public
    properties:
      job:
        description: The job belonging to the particular Database Catalog
        $ref: '#/definitions/DbcDiagnosticDataJob'
  DeleteDbcDiagnosticDataJobRequest:
    type: object
    description: Request object for the deleteDbcDiagnosticDataJobRequest method.
    x-form-factors: public
    required:
      - clusterId
      - dbcId
      - jobId
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
      jobId:
        type: string
        description: ID of the diagnostic job.
  DeleteDbcDiagnosticDataJobResponse:
    type: object
    description: Response object for the deleteDbcDiagnosticDataJobRequest method.
    x-form-factors: public
  DbcDiagnosticDataJob:
    type: object
    description: Represents a Diagnostic Data Job
    x-form-factors: public
    properties:
      jobId:
        type: string
        description: The unique identifier of the Diagnostic Data Job.
      startTime:
        type: string
        format: date-time
        description: The start time of the Diagnostic Data Job.
      endTime:
        type: string
        format: date-time
        description: The finish time of the Diagnostic Data Job.
      url:
        type: string
        description: This URL points to a download location if the destination is DOWNLOAD.
      status:
        description: The job status.
        $ref: '#/definitions/DiagnosticDataJobStatus'
      labels:
        type: object
        description: Additional key-value pair attributes associated with the Diagnostic Data Job.
        additionalProperties:
          type: string
  DiagnosticDataJobStatus:
    type: string
    description: Represents the possible status values of a Diagnostic Data Job.
    x-form-factors: public
    enum:
      - Starting
      - Succeeded
      - Failed
      - Running
      - Unknown
      - Deleted
  ListDbcEventsRequest:
    type: object
    description: Request object for the listDbcEvents method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
      limit:
        type: integer
        format: int32
        description: Limit the number of returned rows. If not specified all the events will be returned. Please note the DWX only stores the last 50 events.
      ascending:
        type: boolean
        default: false
        description: Provide the result in ascending order, default is descending.
  ListDbcEventsResponse:
    type: object
    description: Response object for the listDbcEvents method.
    properties:
      events:
        type: array
        description: The list of the events belonging to the particular Database Catalog
        items:
          $ref: '#/definitions/EventResponse'
  EventResponse:
    type: object
    description: Represents a Event
    properties:
      event:
        type: string
        description: The code name of the event
      message:
        type: string
        description: Detailed message
      timestamp:
        type: string
        format: date-time
        description: The timestamp of the event
  GetDataVisualizationUpgradeVersionRequest:
    type: object
    description: Request object for the getDataVisualizationUpgradeVersion method.
    required:
      - clusterId
      - dataVisualizationId
    properties:
      clusterId:
        type: string
        description: ID of the Cloudera Data Visualization's cluster.
      dataVisualizationId:
        type: string
        description: ID of the Cloudera Data Visualization.
  GetDataVisualizationUpgradeVersionResponse:
    type: object
    description: Response object for the getDataVisualizationUpgradeVersion method.
    properties:
      upgradeVersions:
        description: Details of upgrade versions.
        $ref: '#/definitions/UpgradeVersions'
  UpgradeVersions:
    type: object
    description: Details of upgrade versions.
    properties:
      latestVersion:
        type: string
        description: Latest available Data Visualization version.
  UpgradeDataVisualizationRequest:
    type: object
    description: Request object for the upgradeDataVisualization method.
    required:
      - clusterId
      - dataVisualizationId
      - imageVersion
    properties:
      clusterId:
        type: string
        description: ID of the Cloudera Data Visualization's cluster.
      dataVisualizationId:
        type: string
        description: ID of the Cloudera Data Visualization.
      imageVersion:
        type: string
        description: Image version of the Cloudera Data Visualization to upgrade to.
  UpgradeDataVisualizationResponse:
    type: object
    description: Response object for the upgradeDataVisualization method.
    properties:
      status:
        type: string
        description: The status of asynchronous upgrade request for Cloudera Data Visualization. To find the latest status please use describe-data-visualization.
  CreateDbcResponse:
    type: object
    description: Response object for the createDbc method.
    properties:
      dbcId:
        type: string
        description: ID of the new Database Catalog.
  ListDbcsRequest:
    type: object
    description: Request object for the listDbcs method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: ID of cluster to list.
  ListDbcsResponse:
    type: object
    description: Response object for the listDbcs method.
    properties:
      dbcs:
        type: array
        items:
          $ref: '#/definitions/DbcSummary'
        description: The list of Database Catalogs.
  DescribeDbcRequest:
    type: object
    description: Request object for the describeDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
  DescribeDbcResponse:
    type: object
    description: Response object for the describeDbc method.
    properties:
      dbc:
        description: The Database Catalog.
        $ref: '#/definitions/DbcSummary'
  DeleteDbcRequest:
    type: object
    description: Request object for the deleteDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog to delete.
  DeleteDbcResponse:
    type: object
    description: Response object for the deleteDbc method.
  RebuildDbcRequest:
    type: object
    description: Request object for the rebuildDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog to rebuild.
      keepImageVersion:
        type: boolean
        description: true - keep the current image version. false - set to latest image version when rebuilding the Database Catalog. If not provided, the latest image version will be set.
  RebuildDbcResponse:
    type: object
    description: Response object for the rebuildDbc method.
  SuspendDbcRequest:
    type: object
    description: The request object for the suspendDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: The ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: The ID of the Database Catalog to suspend.
  SuspendDbcResponse:
    type: object
    description: The response object for the suspendDbc method.
  RestartDbcRequest:
    type: object
    description: Request object for the restartDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: The id of the Database Catalog to restart.
  RestartDbcResponse:
    type: object
    description: Response object for the restartDbc method.
  VwType:
    type: string
    enum:
      - hive
      - impala
    description: 'Type of Virtual Warehouse: ''hive'' or ''impala''.'
  AutoscalingOptionsCreateRequest:
    type: object
    description: Auto-scaling configuration for a Virtual Warehouse.
    properties:
      minClusters:
        type: integer
        format: int32
        default: 1
        description: Minimum number of available compute groups.
      maxClusters:
        type: integer
        format: int32
        default: 10
        description: Maximum number of available compute groups.
      disableAutoSuspend:
        type: boolean
        description: Turn off auto suspend for Virtual Warehouse.
      autoSuspendTimeoutSeconds:
        type: integer
        format: int32
        description: Auto suspend threshold for Virtual Warehouse.
      enableUnifiedAnalytics:
        x-deprecated: true
        type: boolean
        description: DEPRECATED in favor of the top level enableUnifiedAnalytics flag. Enable Unified Analytics. In case of Hive Virtual Warehouses this cannot be provided, because this value is inferred. In case of Impala this can be set. Passing --query-isolation-options will be considered if this flag is set to true. If Unified Analytics enabled then the "impalaEnableShutdownOfCoordinator" explicitly disabled and should not be provided, furthermore the "impalaHighAvailabilityMode" cannot be set to ACTIVE_ACTIVE.
      hiveScaleWaitTimeSeconds:
        type: integer
        format: int32
        description: Set wait time before a scale event happens. Either "hiveScaleWaitTimeSeconds" or "hiveDesiredFreeCapacity" can be provided.
      hiveDesiredFreeCapacity:
        type: integer
        format: int32
        description: Set Desired free capacity. Either "hiveScaleWaitTimeSeconds" or "hiveDesiredFreeCapacity" can be provided.
      impalaHighAvailabilityMode:
        x-deprecated: true
        type: string
        enum:
          - ACTIVE_PASSIVE
          - ACTIVE_ACTIVE
          - DISABLED
        description: DEPRECATED in favor of the top level impalaHASettings object. Set High Availability mode. If not provided the default will apply. This value is disregarded for Hive.
      impalaScaleUpDelaySeconds:
        type: integer
        format: int32
        description: Scale up the scaling up threshold in seconds. If not provided defaults will apply.
      impalaScaleDownDelaySeconds:
        type: integer
        format: int32
        description: Scale down threshold in seconds. If not provided defaults will apply.
      impalaEnableShutdownOfCoordinator:
        x-deprecated: true
        type: boolean
        description: DEPRECATED in favor of the top level impalaHASettings object. Enables a shutdown of the coordinator. If Unified Analytics enabled then this setting explicitly disabled and should not be provided.
      impalaShutdownOfCoordinatorDelaySeconds:
        x-deprecated: true
        type: integer
        format: int32
        description: DEPRECATED in favor of the top level impalaHASettings object. Delay in seconds before the shutdown of coordinator event happens.
      impalaNumOfActiveCoordinators:
        x-deprecated: true
        type: integer
        format: int32
        description: DEPRECATED in favor of the top level impalaHASettings object. Number of the active coordinators.
      impalaEnableCatalogHighAvailability:
        x-deprecated: true
        type: boolean
        description: DEPRECATED in favor of the top level impalaHASettings object. Enables a backup instance for Impala catalog to ensure high availability.
      podConfigName:
        type: string
        description: Name of the pod configuration.
  ImpalaOptionsCreateRequest:
    type: object
    description: Impala specific options. It cannot be provided for Virtual Warehouse types other than Impala.
    properties:
      spillToS3Uri:
        type: string
        description: Set S3 URI in "s3://bucket/path" format and enable spilling to S3. If this is set, "scratchSpaceLimit" cannot be set. Spilling to a remote storage is not supported on Azure, it is available on AWS and PvC platforms. If your workload results in large volumes of intermediate data being written, it is recommended to configure the heavy spilling queries to use a remote storage location rather than the local one since Impala occasionally needs to use persistent storage for writing intermediate files during large sorts, joins, aggregations, or analytic function operations. Note that this value is ignored if the Impala version does not support spilling to S3.
      scratchSpaceLimit:
        x-entitlement: CDW_IMPALA_EBS_SCRATCH_SPACE
        type: integer
        format: int32
        description: Defines the limit for scratch space in GiB needed by Impala for spilling queries. If this is set, "spillToS3Uri" cannot be set. The valid values are between 1-16000 for AWS and 1-16684 for Azure. It will choose the first valid value for which the total disk space is greater than or equal to the specified scratch space limit. The valid scratch space limit values per node in GiBs for AWS are [300, 634, 968, 1302, 1636, 1970, 2304, 2638, 2972, 6550, 7000, 8000, 9000, 10000, 11000, 12000, 13000, 14000, 15000, 16000]. Valid values for Azure are [300, 684, 812, 1068, 1324, 1836, 2348, 3372, 4396, 8492, 16684].
  ImpalaOptionsResponse:
    type: object
    description: Impala specific settings.
    properties:
      spillToS3Uri:
        type: string
        description: Impala spill to S3 URI.
      scratchSpaceLimit:
        type: integer
        format: int32
        description: Maximum scratch space used for spilling to disk.
        x-omitempty: false
  ImpalaHASettingsCreateRequest:
    type: object
    description: High Availability settings for the Impala Virtual Warehouse. The values are disregarded for Hive.
    properties:
      highAvailabilityMode:
        $ref: '#/definitions/ImpalaHighAvailabilityMode'
        description: Set High Availability mode. If not provided, the default will apply. DISABLED - Disables Impala coordinator and Database Catalog high availability. ACTIVE_PASSIVE - Runs multiple coordinators (one active, one passive) and Database Catalogs (one active, one passive). ACTIVE_ACTIVE - Runs multiple coordinators (both active) and Database Catalogs (one active, one passive). If Unified Analytics is enabled, then this cannot be set to ACTIVE_ACTIVE.
      enableShutdownOfCoordinator:
        type: boolean
        description: Enables a shutdown of the coordinator. If Unified Analytics is enabled, then this setting is explicitly disabled (ignored) and should not be provided.
      shutdownOfCoordinatorDelaySeconds:
        type: integer
        format: int32
        description: Delay in seconds before the shutdown of coordinator event happens.
      numOfActiveCoordinators:
        type: integer
        format: int32
        description: The number of active coordinators.
      enableCatalogHighAvailability:
        type: boolean
        description: Enables a backup instance for Impala catalog to ensure high availability.
  AutoscalingOptionsUpdateRequest:
    type: object
    description: Auto-scaling configuration for a Virtual Warehouse. Provide those values only that you want to update.
    properties:
      minClusters:
        type: integer
        format: int32
        default: 0
        description: Minimum number of available compute groups. Zero means, the minClusters will not be updated.
      maxClusters:
        type: integer
        format: int32
        default: 0
        description: Maximum number of available compute groups. Zero means, the maxClusters will not be updated..
      disableAutoSuspend:
        type: boolean
        description: Turn off auto suspend for Virtual Warehouse.
      autoSuspendTimeoutSeconds:
        type: integer
        format: int32
        description: Auto suspend threshold for Virtual Warehouse.
      hiveScaleWaitTimeSeconds:
        type: integer
        format: int32
        description: Set wait time before a scale event happens. Either "hiveScaleWaitTimeSeconds" or "hiveDesiredFreeCapacity" can be provided. If "hiveScaleWaitTimeSeconds" provided, then the "hiveDesiredFreeCapacity" will be explicityly set to 0.
      hiveDesiredFreeCapacity:
        type: integer
        format: int32
        description: Set Desired free capacity. Either "hiveScaleWaitTimeSeconds" or "hiveDesiredFreeCapacity" can be provided.
      impalaScaleUpDelaySeconds:
        type: integer
        format: int32
        description: Scale up the scaling up threshold in seconds.
      impalaScaleDownDelaySeconds:
        type: integer
        format: int32
        description: Scale down threshold in seconds.
      impalaShutdownOfCoordinatorDelaySeconds:
        x-deprecated: true
        type: integer
        format: int32
        description: DEPRECATED in favor of the top level impalaHASettings object. Delay in seconds before the shutdown of coordinator event happens.
      impalaNumOfActiveCoordinators:
        x-deprecated: true
        type: integer
        format: int32
        description: DEPRECATED in favor of the top level impalaHASettings object. Number of the active coordinators.
  ImpalaHASettingsUpdateRequest:
    type: object
    description: High Availability settings update options for the Impala Virtual Warehouse.
    properties:
      shutdownOfCoordinatorDelaySeconds:
        type: integer
        format: int32
        description: Delay in seconds before the shutdown of coordinator event happens.
      numOfActiveCoordinators:
        type: integer
        format: int32
        description: The number of active coordinators.
  AutoscalingOptionsResponse:
    type: object
    description: Auto-scaling configuration for a Virtual Warehouse.
    properties:
      minClusters:
        type: integer
        format: int32
        description: Minimum number of available compute groups.
      maxClusters:
        type: integer
        format: int32
        description: Maximum number of available compute groups.
      disableAutoSuspend:
        type: boolean
        description: Turn off auto suspend for Virtual Warehouse.
      autoSuspendTimeoutSeconds:
        type: integer
        format: int32
        description: Auto suspend threshold for Virtual Warehouse.
      enableUnifiedAnalytics:
        x-deprecated: true
        type: boolean
        description: DEPRECATED in favor of the top level enableUnifiedAnalytics flag. Whether the Unified Analytics is enabled.
      hiveScaleWaitTimeSeconds:
        type: integer
        format: int32
        description: Wait time before a scale event happens.
      hiveDesiredFreeCapacity:
        type: integer
        format: int32
        description: Desired free capacity.
      impalaHighAvailabilityMode:
        x-deprecated: true
        type: string
        enum:
          - ACTIVE_PASSIVE
          - ACTIVE_ACTIVE
          - DISABLED
        description: DEPRECATED in favor of the top level impalaHASettings object. High Availability mode.
      impalaScaleUpDelaySeconds:
        type: integer
        format: int32
        description: Scale up the scaling up threshold in seconds.
      impalaScaleDownDelaySeconds:
        type: integer
        format: int32
        description: Scale down threshold in seconds.
      impalaEnableShutdownOfCoordinator:
        x-deprecated: true
        type: boolean
        description: DEPRECATED in favor of the top level impalaHASettings object. Whether a shutdown of the coordinator is enabled.
      impalaNumOfActiveCoordinators:
        x-deprecated: true
        type: integer
        format: int32
        description: DEPRECATED in favor of the top level impalaHASettings object. Number of the active coordinators.
      impalaShutdownOfCoordinatorDelaySeconds:
        x-deprecated: true
        type: integer
        format: int32
        description: DEPRECATED in favor of the top level impalaHASettings object. Delay in seconds before the shutdown of coordinator event happens.
      impalaEnableCatalogHighAvailability:
        x-deprecated: true
        type: boolean
        description: DEPRECATED in favor of the top level impalaHASettings object. Denotes whether a backup instance for Impala catalog is enabled.
      podConfigName:
        type: string
        description: Name of the pod configuration.
  ImpalaHASettingsOptionsResponse:
    type: object
    description: Impala High Availability settings for a Virtual Warehouse.
    properties:
      highAvailabilityMode:
        $ref: '#/definitions/ImpalaHighAvailabilityMode'
        description: High Availability mode. DISABLED - Impala coordinator and Database Catalog high availability is disabled. ACTIVE_PASSIVE - Multiple coordinators (one active, one passive) and Database Catalogs (one active, one passive) are run. ACTIVE_ACTIVE - Multiple coordinators (both active) and Database Catalogs (one active, one passive) are run.
      enableShutdownOfCoordinator:
        type: boolean
        description: Whether a shutdown of the coordinator is enabled.
      numOfActiveCoordinators:
        type: integer
        format: int32
        description: Number of the active coordinators.
      shutdownOfCoordinatorDelaySeconds:
        type: integer
        format: int32
        description: Delay in seconds before the shutdown of coordinator event happens.
      enableCatalogHighAvailability:
        type: boolean
        description: Denotes whether a backup instance for Impala catalog is enabled.
  ImpalaHighAvailabilityMode:
    type: string
    enum:
      - ACTIVE_PASSIVE
      - ACTIVE_ACTIVE
      - DISABLED
    description: Set Impala High Availability mode. If not provided, the default will apply. DISABLED - Disables Impala coordinator and Database Catalog high availability. ACTIVE_PASSIVE - Runs multiple coordinators (one active, one passive) and Database Catalogs (one active, one passive). ACTIVE_ACTIVE - Runs multiple coordinators (both active) and Database Catalogs (one active, one passive). If Unified Analytics is enabled, then this cannot be set to ACTIVE_ACTIVE.
  QueryIsolationOptionsRequest:
    type: object
    description: Configurations for Query Isolation.
    properties:
      maxQueries:
        type: integer
        format: int32
        default: 0
        description: Maximum Concurrent Isolated Queries. If not provided, 0 will be applied. The 0 value means the query isoltaion functionality will be disabled.
      maxNodesPerQuery:
        type: integer
        format: int32
        default: 0
        description: Maximum Nodes Per Isolated Query. If not provided, 0 will be applied. The 0 value means the query isoltaion functionality will be disabled.
  QueryIsolationOptionsResponse:
    type: object
    description: Configurations for Query Isolation.
    properties:
      maxQueries:
        type: integer
        format: int32
        description: Maximum Concurrent Isolated Queries
      maxNodesPerQuery:
        type: integer
        format: int32
        description: Maximum Nodes Per Isolated Query
  ReplicaStatus:
    x-form-factors: public,private
    type: object
    description: Status information on the current state of replicas in the virtual warehouse.
    properties:
      totalExecutorReplicas:
        type: integer
        format: int32
        description: Total number of executor replicas scheduled for the virtual warehouse. This number contains the number of executor replicas in pending state, as well as the replicas that are already running. If this number is zero, then the executor functionality is stopped.
        x-omitempty: false
      readyExecutorReplicas:
        type: integer
        format: int32
        description: Total number of ready executor replicas in the virtual warehouse. This number only contains the healthy executor replicas that have already started up and are ready to accept requests. If this number is less than the totalExecutorReplicas, then the virtual warehouse might still be starting up or there might be a problem scheduling these replicas.
        x-omitempty: false
      totalCoordinatorReplicas:
        type: integer
        format: int32
        description: Total number of coordinator replicas scheduled for the virtual warehouse. This number contains the number of coordinator replicas in pending state, as well as the replicas that are already running. If this number is zero, then the coordinator functionality is stopped.
        x-omitempty: false
      readyCoordinatorReplicas:
        type: integer
        format: int32
        description: Total number of ready coordinator replicas in the virtual warehouse. This number only contains the healthy executor replicas that have already started up and are ready to accept requests. If this number is less than the totalCoordinatorReplicas, then the virtual warehouse might still be starting up or there might be a problem scheduling these replicas.
        x-omitempty: false
  CreateVwRequest:
    type: object
    description: Request object for the createVw method.
    required:
      - clusterId
      - dbcId
      - vwType
      - name
    properties:
      clusterId:
        type: string
        description: ID of cluster where Virtual Warehouse should be created.
      dbcId:
        type: string
        description: ID of Database Catalog that the Virtual Warehouse should be attached to.
      vwType:
        description: Type of Virtual Warehouse to be created.
        $ref: '#/definitions/VwType'
      name:
        type: string
        description: Name of the Virtual Warehouse.
      imageVersion:
        type: string
        description: version of the Virtual Warehouse.
        default: ''
        x-form-factors: public
      template:
        type: string
        description: Name of configuration template to use.
        enum:
          - xsmall
          - small
          - medium
          - large
      nodeCount:
        type: integer
        format: int32
        default: 0
        description: Nodes per compute cluster. If specified, forces 'template' to be 'custom'
      availabilityZone:
        type: string
        description: This feature works only for AWS cluster type. An availability zone to host compute instances. If not specified, defaults to a randomly selected availability zone inferred from available subnets. In order to query possible options, see "availabilityZones" field of describe-cluster or list-clusters command response.
      enableUnifiedAnalytics:
        type: boolean
        description: Enable Unified Analytics. In the case of Hive Virtual Warehouses, this cannot be provided, because this value is inferred. In the case of Impala, this can be set. Passing --query-isolation-options will be considered only if this flag is set to true. If Unified Analytics is enabled then the "enableShutdownOfCoordinator" in --impala-ha-settings is explicitly disabled (ignored) and should not be provided, furthermore the "highAvailabilityMode" in --impala-ha-settings cannot be set to ACTIVE_ACTIVE.
      impalaOptions:
        description: Impala specific options. It cannot be provided for Virtual Warehouse types other than Impala.
        $ref: '#/definitions/ImpalaOptionsCreateRequest'
      impalaHaSettings:
        description: High Availability settings for the Impala Virtual Warehouse. NOTE that in --autoscaling object you should avoid using the same deprecated properties because only the --impala-ha-setting properties will be considered if any of its values are set.
        $ref: '#/definitions/ImpalaHASettingsCreateRequest'
      autoscaling:
        description: Autoscaling settings for the Virtual Warehouse.
        $ref: '#/definitions/AutoscalingOptionsCreateRequest'
      config:
        description: Configuration settings for the Virtual Warehouse.
        $ref: '#/definitions/ServiceConfigReq'
      queryIsolationOptions:
        description: Query isolation settings for the Virtual Warehouse. For Impala this value will be considered only if Unified Analytics is enabled.
        $ref: '#/definitions/QueryIsolationOptionsRequest'
      tags:
        type: array
        description: Tags associated with the resources.
        items:
          $ref: '#/definitions/TagRequest'
      hiveAuthenticationMode:
        type: string
        x-nullable: true
        x-form-factors: private
        description: 'Sets the authentication mode to use by Hive Server: * `LDAP` * `KERBEROS` Default: `LDAP` if not specified'
      platformJwtAuth:
        type: boolean
        default: false
        description: Value of 'true' automatically configures the Virtual Warehouse to support JWTs issues by the CDP JWT token provider.  Value of 'false' does not enable JWT auth on the Virtual Warehouse.  If this field is not specified, it defaults to 'false'.
  TagRequest:
    description: A key/value pair that can be attached to some resources.
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The tag's name.
      value:
        type: string
        description: The associated value of the tag.
  CreateVwResponse:
    type: object
    description: Response object for the createVw method.
    properties:
      vwId:
        type: string
        description: ID of the new Virtual Warehouse.
  VwFilter:
    type: object
    description: Filter object for Virtual Warehouses.
    properties:
      vwType:
        description: Virtual Warehouse type.
        $ref: '#/definitions/VwType'
      dbcId:
        type: string
        description: Filter Virtual Warehouses by Database Catalog Id.
      compactor:
        type: boolean
        description: Filter Virtual Warehouses whether it is a Compactor or not.
      viz:
        type: boolean
        description: Filter the Virtual Warehouses based on whether it has Data Visualisation.
  ListVwsRequest:
    type: object
    description: Request object for the listVws method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: ID of cluster to list.
      filter:
        description: Filter object for listVws method.
        $ref: '#/definitions/VwFilter'
  ListVwsResponse:
    type: object
    description: Response object for the listVws method.
    properties:
      vws:
        type: array
        items:
          $ref: '#/definitions/VwSummary'
        description: The list of Virtual Warehouses.
  DescribeVwRequest:
    type: object
    description: Request object for the describeVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
  DescribeVwResponse:
    type: object
    description: Response object for the describeVw method.
    properties:
      vw:
        description: The Virtual Warehouse.
        $ref: '#/definitions/VwSummary'
  UpdateVwConfigRequest:
    type: object
    description: Request object for the updateVwConfig method.
    required:
      - clusterId
      - vwId
      - component
    properties:
      clusterId:
        type: string
        description: ID of the cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
      component:
        type: string
        description: Configuration component to update. Hive components are [DasWebapp, Hiveserver2, QueryCoordinator, QueryExecutor, StandaloneQueryExecutor, TokenAuth, Hue]. Impala components are [Hue, ImpalaAutoscaler, ImpalaCatalogd, ImpalaCoordinator, ImpalaExecutor, ImpalaProxy, ImpalaStatestored, ImpalaTokenAuth].
        enum:
          - DasWebapp
          - Hiveserver2
          - QueryCoordinator
          - QueryExecutor
          - StandaloneQueryExecutor
          - TokenAuth
          - Hue
          - ImpalaAutoscaler
          - ImpalaCatalogd
          - ImpalaCoordinator
          - ImpalaExecutor
          - ImpalaProxy
          - ImpalaStatestored
          - ImpalaTokenAuth
      set:
        description: Configuration files of the selected component to update.
        type: array
        items:
          type: object
          $ref: '#/definitions/ConfigBlock'
  UpdateVwConfigResponse:
    type: object
    description: Response object for the updateVwConfig method.
  RebuildVwRequest:
    type: object
    description: Request object for the rebuildVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse to rebuild.
      keepImageVersion:
        type: boolean
        description: Set it to true to keep the current image version. Set it to false to use the latest image version when rebuilding the Virtual Warehouse. If not provided, the latest image version will be set.
  RebuildVwResponse:
    type: object
    description: Response object for the rebuildVw method.
  DeleteVwRequest:
    type: object
    description: Request object for the deleteVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse to delete.
  DeleteVwResponse:
    type: object
    description: Response object for the deleteVw method.
  ActorResponse:
    type: object
    description: A CDP actor (user or machine user).
    properties:
      crn:
        type: string
        description: Actor CRN.
      email:
        type: string
        description: Email address for users.
      workloadUsername:
        type: string
        description: Username for users.
      machineUsername:
        type: string
        description: Username for machine users.
  AwsOptionsResponse:
    type: object
    description: Response object of the cluster AWS settings.
    properties:
      subnetIds:
        type: array
        description: IDs of AWS subnets where the cluster has been deployed.
        items:
          type: string
      workerSubnetIds:
        type: array
        description: IDs of AWS subnets where the cluster worker nodes should be deployed.
        items:
          type: string
      lbSubnetIds:
        type: array
        description: IDs of AWS subnets where the cluster load balancer should be deployed.
        items:
          type: string
      availabilityZones:
        type: array
        items:
          type: string
        description: List of availability zones that the cluster is restricted to use.
      customAmiId:
        type: string
        description: Id of the Custom Amazon Machine Image
      reducedPermissionMode:
        type: boolean
        description: Denotes whether the Reduced Permission mode is enabled.
  AzureOptionsResponse:
    type: object
    description: Response object of the cluster Azure settings.
    properties:
      subnetId:
        type: string
        description: ID of Azure subnet where the cluster is deployed.
      enableAZ:
        type: boolean
        description: Denotes whther the Azure Availability Zones for the cluster is enabled or not.
        default: false
      outboundType:
        type: string
        description: The current outbound type setting.
      logAnalyticsWorkspaceId:
        type: string
        description: Workspace ID for Azure log analytics.
  RestartVwRequest:
    type: object
    description: Request object for the restartVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: The id of the Virtual Warehouse to restart.
  RestartVwResponse:
    type: object
    description: Response object for the restartVw method.
  CreateVwDiagnosticDataJobRequest:
    type: object
    description: Request object for the createVwDiagnosticDataJob method.
    x-form-factors: public
    required:
      - clusterId
      - vwId
      - destination
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
      destination:
        type: string
        description: Destination of the diagnostics collection.
        enum:
          - UPLOAD_TO_CLOUDERA
          - DOWNLOAD
      startTime:
        type: string
        format: date-time
        description: The resulting bundle will contain logs/metrics after the specified start time. If not indicated, then 30 minutes ago from now is taken as the start time.
      endTime:
        type: string
        format: date-time
        description: The resulting bundle will contain logs/metrics before the specified end time. If not indicated, then the current time is taken as the end time.
      caseNumber:
        type: string
        description: Optional support case number in case of UPLOAD_TO_CLOUDERA destination, otherwise only act as additional data.
      bundleMetadata:
        type: object
        additionalProperties:
          type: string
        description: Additional user-defined metadata information which is attached to resulting bundle-info.json when posting the bundle.
      force:
        type: boolean
        default: false
        description: Forced recreation of the diagnostic job.
      hiveDownloadOptions:
        description: Hive diagnostic options. If not provided, everything will be included into the Diagnostic Data.
        $ref: '#/definitions/HiveCreateDiagnosticDataDownloadOptions'
      impalaDownloadOptions:
        description: Impala diagnostic options. If not provided, everything will be included into the Diagnostic Data.
        $ref: '#/definitions/ImpalaCreateDiagnosticDataDownloadOptions'
  CreateVwDiagnosticDataJobResponse:
    type: object
    description: Response object for the createVwDiagnosticDataJob method.
    x-form-factors: public
    properties:
      id:
        type: string
        description: Identifier for each bundle collection.
      status:
        type: string
        description: Status of the diagnostics collection request.
      url:
        type: string
        description: This URL points to a download location if the destination is DOWNLOAD.
      labels:
        type: object
        description: Additional key-value pair attributes associated with the Diagnostic Data Job.
        additionalProperties:
          type: string
  ListVwDiagnosticDataJobsRequest:
    type: object
    description: Request object for the listVwDiagnosticDataJobsRequest method.
    x-form-factors: public
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
      status:
        description: Filter for job type
        $ref: '#/definitions/DiagnosticDataJobStatus'
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
        x-paging-input-token: true
  ListVwDiagnosticDataJobsResponse:
    type: object
    description: Response object for the listVwDiagnosticDataJobsRequest method.
    x-form-factors: public
    properties:
      jobs:
        type: array
        description: The list of the jobs belonging to the particular Virtual Warehouse.
        items:
          $ref: '#/definitions/VwDiagnosticDataJob'
        x-paging-result: true
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If there are no additional results, the string is empty.
  DescribeVwDiagnosticDataJobRequest:
    type: object
    description: Request object for the describeVwDiagnosticDataJobRequest method.
    x-form-factors: public
    required:
      - clusterId
      - vwId
      - jobId
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
      jobId:
        type: string
        description: ID of the diagnostic job.
  DescribeVwDiagnosticDataJobResponse:
    type: object
    description: Response object for the describeVwDiagnosticDataJobRequest method.
    x-form-factors: public
    properties:
      job:
        description: The job belonging to the particular Virtual Warehouse.
        $ref: '#/definitions/VwDiagnosticDataJob'
  DeleteVwDiagnosticDataJobRequest:
    type: object
    description: Request object for the deleteVwDiagnosticDataJobRequest method.
    x-form-factors: public
    required:
      - clusterId
      - vwId
      - jobId
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
      jobId:
        type: string
        description: ID of the diagnostic job.
  DeleteVwDiagnosticDataJobResponse:
    type: object
    description: Response object for the deleteVwDiagnosticDataJobRequest method.
    x-form-factors: public
  VwDiagnosticDataJob:
    type: object
    description: Represents a Diagnostic Data Job.
    x-form-factors: public
    properties:
      jobId:
        type: string
        description: The unique identifier of the Diagnostic Data Job.
      startTime:
        type: string
        format: date-time
        description: The start time of the Diagnostic Data Job.
      endTime:
        type: string
        format: date-time
        description: The finish time of the Diagnostic Data Job.
      url:
        type: string
        description: If the request is for download, this URL points to download location.
      status:
        description: The job status.
        $ref: '#/definitions/DiagnosticDataJobStatus'
      labels:
        type: object
        description: Additional key-value pair attributes associated with the Diagnostic Data Job.
        additionalProperties:
          type: string
  ListVwEventsRequest:
    type: object
    description: Request object for the listVwEvents method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
      limit:
        type: integer
        format: int32
        description: Limit the number of returned rows. If not specified all the events will be returned. Please note the DWX only stores the last 50 events.
      ascending:
        type: boolean
        default: false
        description: Provide the result in ascending order, default is descending.
  ListVwEventsResponse:
    type: object
    description: Response object for the listVwEvents method.
    properties:
      events:
        type: array
        description: The list of the events belonging to the particular Virtual Warehouse
        items:
          $ref: '#/definitions/EventResponse'
  HiveCreateDiagnosticDataDownloadOptions:
    type: object
    description: Flags that denote which diagnostics to include for a Hive Virtual Warehouse.
    x-form-factors: public
    properties:
      includeHms:
        type: boolean
        default: false
        description: Include the HMS diagnostics.
      includeErrordump:
        type: boolean
        default: false
        description: Include the error dump.
      includeGclogs:
        type: boolean
        default: false
        description: Include the Garbage collector logs.
      includeHeapdump:
        type: boolean
        default: false
        description: Include the heap-dump.
      includeLogs:
        type: boolean
        default: false
        description: Include logs.
      includeComputeResourceInfo:
        type: boolean
        default: false
        description: Include compute resource info.
      includeKubernetesResourceInfo:
        type: boolean
        default: false
        description: Include Kubernetes resource info.
  ImpalaCreateDiagnosticDataDownloadOptions:
    type: object
    description: Flags that denote which diagnostics to include for an Impala Virtual Warehouse.
    x-form-factors: public
    properties:
      includeHms:
        type: boolean
        default: false
        description: Include the HMS diagnostics.
      includeMinidump:
        type: boolean
        default: false
        description: Include the minidump.
      includeProfile:
        type: boolean
        default: false
        description: Include the profile.
      includeSidecar:
        type: boolean
        default: false
        description: Include the sidecar diagnostics.
      includeWorkload:
        type: boolean
        default: false
        description: Include the workload diagnostics.
      includeKubernetesResourceInfo:
        type: boolean
        default: false
        description: Include kubernetes resource info.
  DBCCreateDiagnosticDataDownloadOptions:
    type: object
    description: Flags that denote which diagnostics to include for a Database Catalog.
    x-form-factors: public
    properties:
      includeKubernetesResourceInfo:
        type: boolean
        default: false
        description: Include kubernetes resource info.
  ClusterCreateDiagnosticDataDownloadOptions:
    type: object
    description: Flags that denote which diagnostics to include for the cluster.
    x-form-factors: public
    properties:
      includeClusterInfo:
        type: boolean
        default: false
        description: Include cluster info.
      includeIstioSystem:
        type: boolean
        default: false
        description: Include Istio system.
      includeSharedServices:
        type: boolean
        default: false
        description: Include shared services.
      includeKubeSystem:
        type: boolean
        default: false
        description: Include Kube system.
  ExternalBucket:
    type: object
    description: External bucket details.
    properties:
      name:
        type: string
        description: Name of the bucket.
      accessInfo:
        $ref: '#/definitions/ExternalBucketAccessInfo'
        description: AccessInfo of the bucket.
  ClusterSummaryResponse:
    type: object
    description: A Cloudera Data Warehouse cluster.
    properties:
      crn:
        type: string
        description: The CRN of the cluster.
      id:
        type: string
        description: The ID of the cluster.
      environmentCrn:
        type: string
        description: The CRN of the environment where the cluster is located.
      name:
        type: string
        description: Name of the cluster (same as the name of the environment).
      status:
        type: string
        description: 'Status of the cluster. Possible values are: Creating, Created, Accepted, Starting, Running, Stopping, Stopped, Updating, PreUpdate, Upgrading, PreUpgrade, Restarting, Deleting, Waiting, Failed, Error.'
      creator:
        $ref: '#/definitions/ActorResponse'
        description: The creator of the cluster.
      creationDate:
        type: string
        format: date-time
        description: Creation date of cluster.
      cloudPlatform:
        type: string
        description: The cloud platform of the environment that was used to create this cluster.
      enableStorageRoles:
        type: boolean
        description: Enable Storage Roles checkbox was checked when creating/activating this cluster.
        x-form-factors: public
        x-entitlement: CDW_STORAGE_ROLES
      enableSpotInstances:
        x-form-factors: public
        type: boolean
        description: Denotes whether the spot instances have been enabled for the cluster. This value is only available for AWS and Azure clusters.
      reservedComputeNodes:
        x-entitlement: CDW_CLUSTER_OVERPROVISIONER
        type: integer
        format: int32
        description: Number of additional reserved nodes for executors and coordinators to use during autoscaling.
      reservedSharedServicesNodes:
        x-entitlement: CDW_CLUSTER_OVERPROVISIONER
        type: integer
        format: int32
        description: Number of additional reserved nodes for other services in the cluster.
      computeInstanceTypes:
        type: array
        items:
          type: string
        description: Compute instance types that the environment is restricted to use. This affects the creation of the virtual warehouses where this restriction will apply.
      additionalInstanceTypes:
        type: array
        items:
          type: string
        description: Additional (fallback) instance types listed in their priority order. They are used instead of the primary compute instance type in case it is unavailable. Since additional instance types are not supported for Azure, this is always empty for it.
      awsOptions:
        $ref: '#/definitions/AwsOptionsResponse'
        description: Response object of AWS related cluster options.
        x-form-factors: public
      azureOptions:
        $ref: '#/definitions/AzureOptionsResponse'
        description: Response object of Azure related cluster options.
        x-form-factors: public
      description:
        type: string
        description: Cluster description.
      whitelistK8sClusterAccessIpCIDRs:
        type: string
        description: List of IP address CIDRs to whitelist for kubernetes cluster access.
      whitelistWorkloadAccessIpCIDRs:
        type: string
        description: List of IP address CIDRs to whitelist for workload access.
      externalBuckets:
        type: array
        description: External buckets attached to the environment.
        items:
          $ref: '#/definitions/ExternalBucket'
  DataVisualizationSummary:
    type: object
    description: A Cloudera Data Visualization.
    properties:
      id:
        type: string
        description: The ID of the Cloudera Data Visualization.
      name:
        type: string
        description: The name of the Cloudera Data Visualization.
      status:
        type: string
        description: 'Status of the Cloudera Data Visualization. Possible values are: Creating, Created, Accepted, Starting, Running, Stopping, Stopped, Updating, PreUpdate, Upgrading, PreUpgrade, Restarting, Deleting, Waiting, Failed, Error.'
      imageVersion:
        type: string
        description: Current image version of the Cloudera Data Visualization
      creatorCrn:
        type: string
        description: The CRN of the user who created the Cloudera Data Visualization
      size:
        type: string
        description: The template size for the Cloudera Data Visualization
      userGroups:
        type: array
        items:
          type: string
        description: User groups that are allowed to access the Data Visualization.
      adminGroups:
        type: array
        items:
          type: string
        description: Admin groups that are allowed to access the Data Visualization.
  DbcSummary:
    type: object
    description: A Database Catalog.
    properties:
      crn:
        type: string
        description: The CRN of the Database Catalog.
      id:
        type: string
        description: The ID of the Database Catalog.
      name:
        type: string
        description: The name of the Database Catalog.
      status:
        type: string
        description: 'Status of the Database Catalog. Possible values are: Creating, Created, Accepted, Starting, Running, Stopping, Stopped, Updating, PreUpdate, Upgrading, PreUpgrade, Restarting, Deleting, Waiting, Failed, Error.'
      statusChangedAt:
        type: string
        format: date-time
        description: Timestamp of the last status change of the Database Catalog.
      creator:
        $ref: '#/definitions/ActorResponse'
        description: The creator of the Database Catalog.
      creationDate:
        type: string
        format: date-time
        description: Creation date of Database Catalog.
  VwSummary:
    type: object
    description: A Virtual Warehouse.
    properties:
      crn:
        type: string
        description: The CRN of the Virtual Warehouse.
      id:
        type: string
        description: The ID of the Virtual Warehouse.
      name:
        type: string
        description: The name of the Virtual Warehouse.
      vwType:
        description: The type of the Virtual Warehouse.
        $ref: '#/definitions/VwType'
      dbcId:
        type: string
        description: ID of Database Catalog that the Virtual Warehouse is attached to.
      status:
        type: string
        description: 'Status of the Virtual Warehouse. Possible values are: Creating, Created, Accepted, Starting, Running, Stopping, Stopped, Updating, PreUpdate, Upgrading, PreUpgrade, Restarting, Deleting, Waiting, Failed, Error.'
      statusChangedAt:
        type: string
        format: date-time
        description: Timestamp of the last status change of the Virtual Warehouse.
      creator:
        $ref: '#/definitions/ActorResponse'
        description: The creator of the Virtual Warehouse.
      creationDate:
        type: string
        format: date-time
        description: Creation date of Virtual Warehouse.
      configId:
        type: string
        description: ID of the configuration.
      cdhVersion:
        type: string
        description: CDH image version.
      numOfCores:
        type: integer
        format: int32
        description: Number of cores of the Virtual Warehouse.
      memoryCapacity:
        type: integer
        format: int32
        description: Memory size of the Virtual Warehouse in MB.
      nodeCount:
        type: integer
        format: int32
        description: Size of the Virtual Warehouse (node count per compute cluster).
      availabilityZone:
        type: string
        description: Availability zone in which the Virtual Warehouse is running.
      endpoints:
        type: object
        description: Endpoints for accessing the Virtual Warehouse.
        properties:
          hiveJdbc:
            type: string
            description: JDBC URL for Hive Virtual Warehouses.
          impalaJdbc:
            type: string
            description: JDBC URL for Impala Virtual Warehouses.
          impalaKerberosJdbc:
            type: string
            x-form-factors: private
            description: JDBC URL for Impala Virtual Warehouses with Kerberos authentication.
          impalaFENGJdbc:
            type: string
            description: FENG JDBC URL for Impala Virtual Warehouses.
          impalaShell:
            type: string
            description: Command to use impala-shell for Impala Virtual Warehouses.
          fengImpalaShell:
            type: string
            x-form-factors: private
            description: Command to use impala-shell for Unified Analytics
          kerberosImpalaShell:
            type: string
            x-form-factors: private
            description: Command to use impala-shell for Impala Virtual Warehouses with Kerberos authentication.
          hue:
            type: string
            description: URL of Hue for both Hive and Impala Virtual Warehouses.
          das:
            type: string
            description: URL of Data Analytics Studio for Hive Virtual Warehouses.
          hostname:
            type: string
            description: Hostname for clients to use when connecting to the VW.
          port:
            type: integer
            format: int32
            description: Port for clients to use when connecting to the VW.
          jwtConnectionString:
            type: string
            description: Generic semi-colon delimited list of key-value pairs that contain all necessary information for clients to construct a connection to this Virtual Warehouse using JWTs as the authentication method.
          jwtTokenGenUrl:
            type: string
            description: When platform JWT authentication is enabled, contains a URL where a JWT token can be generated by the CDP JWT token provider.
      supportedAuthMethods:
        type: object
        description: Describes which authentication methods are supported on this Virtual Warehouse.
        required:
          - ldap
          - jwt
          - sso
        properties:
          ldap:
            type: boolean
            description: Indicates if username/password access to this Virtual Warehouse is supported.
          jwt:
            type: boolean
            description: Indicates if JWT auth is supported on this Virtual Warehouse.
          sso:
            type: boolean
            description: Indicates if SSO auth is supported on this Virtual Warehouse.
      jwtAuth:
        type: object
        description: Details related to JWT Authentication settings on this Virtual Warehouse.
        properties:
          provider:
            type: string
            description: If JWT auth is enabled on the Virtual Warehouse, describes the type of provider.  If set to "CDP", then the CDP JWT auth provider is configured.  If set to "CUSTOM", then another JWT provider is configured.  If empty or missing, then JWT auth is not enabled on this Virtual Warehouse.
      tags:
        type: array
        description: Tags associated with the resources.
        items:
          $ref: '#/definitions/TagResponse'
      compactor:
        type: boolean
        description: Denotes whether the Hive Virtual Warehouse is a compactor or not.
      viz:
        type: boolean
        description: Denotes whether the Virtual Warehouse has Data Visualisation or not.
      enableUnifiedAnalytics:
        type: boolean
        description: Denotes whether the Unified Analytics is enabled.
      autoscalingOptions:
        description: The current settings stored for autoscaling.
        $ref: '#/definitions/AutoscalingOptionsResponse'
      impalaOptions:
        description: Current Impala settings.
        $ref: '#/definitions/ImpalaOptionsResponse'
      impalaHaSettingsOptions:
        description: Current Impala High Availability settings.
        $ref: '#/definitions/ImpalaHASettingsOptionsResponse'
      queryIsolationOptions:
        description: The current settings stored for query-isolation.
        $ref: '#/definitions/QueryIsolationOptionsResponse'
      replicaStatus:
        x-form-factors: public,private
        description: Status information on the current state of replicas in the virtual warehouse.
        $ref: '#/definitions/ReplicaStatus'
      hiveAuthenticationMode:
        type: string
        x-nullable: true
        x-form-factors: private
        description: 'Authentication mode used by Hive Server: * `LDAP` * `KERBEROS`'
  TagResponse:
    description: A key/value pair attached to some resources.
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The tag's name.
      value:
        type: string
        description: The associated value of the tag.
  DescribeDbcConfigRequest:
    type: object
    description: Request object for the describeDbcConfig method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
  DescribeDbcConfigResponse:
    type: object
    description: Response object for the describeDbcConfig method.
    properties:
      config:
        description: The Database Catalog configuration.
        $ref: '#/definitions/ServiceConfigResp'
  UpdateDbcConfigRequest:
    type: object
    description: Request object for the updateDbcConfig method.
    required:
      - clusterId
      - dbcId
      - component
    properties:
      clusterId:
        type: string
        description: ID of the cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
      component:
        type: string
        description: Database Catalog configuration component to update.
        enum:
          - DasEventProcessor
          - DatabusProducer
          - HueQueryProcessor
          - Metastore
      set:
        description: Configuration files of the selected component to update.
        type: array
        items:
          type: object
          $ref: '#/definitions/ConfigBlock'
  ConfigBlock:
    type: object
    description: Set values for a configuration file of a service.
    properties:
      configFile:
        type: string
        x-no-param-file: true
        description: Configuration file to update.
      keyValue:
        type: object
        description: Set values for key-value format configuration file e.g. ENV, PROPERTIES, FLAGFILE, HADOOP_XML typed file.
        additionalProperties:
          type: string
      content:
        description: Set values for text format configuration file e.g. TEXT, JSON, YAML, XML typed file.
        type: string
  UpdateDbcConfigResponse:
    type: object
    description: Response object for the updateDbcConfig method.
  DescribeVwConfigRequest:
    type: object
    description: Request object for the describeVwConfig method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
  DescribeVwConfigResponse:
    type: object
    description: Response object for the describeVwConfig method.
    properties:
      config:
        description: The Virtual Warehouse configuration.
        $ref: '#/definitions/ServiceConfigResp'
  DescribeConfigRequest:
    type: object
    description: Request object for the describeConfig method.
    required:
      - clusterId
      - configId
    properties:
      clusterId:
        type: string
        description: ID of the cluster.
      configId:
        type: string
        description: ID of the service (Database Catalog or Virtual Warehouse).
  DescribeConfigResponse:
    type: object
    description: Response object for the describeConfig method.
    properties:
      config:
        description: The service configuration.
        $ref: '#/definitions/ServiceConfigResp'
  DescribeConfigDiffRequest:
    type: object
    description: Request object for the describeConfigDiff method.
    required:
      - clusterId
      - fromConfigId
      - toConfigId
    properties:
      clusterId:
        type: string
        description: ID of the cluster.
      fromConfigId:
        type: string
        description: ID of the old service configuration.
      toConfigId:
        type: string
        description: ID of the new service configuration.
  DescribeConfigDiffResponse:
    type: object
    description: Response object for the describeConfigDiff method.
    properties:
      config:
        description: The service configuration.
        $ref: '#/definitions/ServiceConfigDiff'
  ListDbcConfigsRequest:
    type: object
    description: Request object for the listDbcConfigs method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
  ListDbcConfigsResponse:
    type: object
    description: Response object for the listDbcConfigs method.
    properties:
      configHistory:
        type: array
        description: Configuration history of a service.
        items:
          $ref: '#/definitions/ConfigHistoryItem'
  ListVwConfigsRequest:
    type: object
    description: Request object for the listVwConfigs method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
  ListVwConfigsResponse:
    type: object
    description: Response object for the listVwConfigs method.
    properties:
      configHistory:
        type: array
        description: Configuration history of a service.
        items:
          $ref: '#/definitions/ConfigHistoryItem'
  UpdateVwRequest:
    type: object
    description: Request object for the updateVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: ID of the Virtual Warehouse.
      template:
        type: string
        description: Name of configuration template to use.
        enum:
          - xsmall
          - small
          - medium
          - large
      nodeCount:
        type: integer
        format: int32
        default: 0
        description: Nodes per compute cluster. If specified, forces 'template' to be 'custom'
      config:
        description: The service configuration to update the VW with. This will be applied on top of the existing configuration so there's no need to list configurations that stay the same.
        $ref: '#/definitions/ServiceConfigReq'
      autoscaling:
        description: Autoscaling settings for the Virtual Warehouse.
        $ref: '#/definitions/AutoscalingOptionsUpdateRequest'
      impalaHaSettings:
        description: High Availability settings update for the Impala Virtual Warehouse.
        $ref: '#/definitions/ImpalaHASettingsUpdateRequest'
      queryIsolationOptions:
        description: Query isolation settings for Hive Virtual Warehouses.
        $ref: '#/definitions/QueryIsolationOptionsRequest'
      hiveAuthenticationMode:
        type: string
        x-nullable: true
        x-form-factors: private
        description: 'Sets the authentication mode to use by Hive Server: * `LDAP` * `KERBEROS` If not set then the authentication mode will not be changed during update.'
      platformJwtAuth:
        type: boolean
        x-nullable: true
        description: Value of 'true' automatically configures the Virtual Warehouse to support JWTs issues by the CDP JWT token provider.  Value of 'false' does not enable JWT auth on the Virtual Warehouse.  If this field is not specified, it defaults to 'false'.
  UpdateVwResponse:
    type: object
    description: Response object for the updateVw method.
  UpdateDbcRequest:
    type: object
    description: Request object for the updateDbc method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: ID of the Database Catalog.
      config:
        description: The service configuration to update the DBC with. This will be applied on top of the existing configuration so there's no need to list configurations that stay the same.
        $ref: '#/definitions/ServiceConfigReq'
  UpdateDbcResponse:
    type: object
    description: Response object for the updateDbc method.
  ConfigHistoryItem:
    type: object
    description: An entry in the configuration history of a service.
    properties:
      serviceId:
        type: string
        description: DBC or VW ID that this configuration belongs to.
      configId:
        type: string
        description: ID of the configuration.
      from:
        type: string
        format: date-time
        description: When was this configuration used from.
  ConfigContentResp:
    type: object
    description: Contents of a ConfigBlock.
    properties:
      keyValues:
        type: object
        description: Key-value type configurations.
        additionalProperties:
          description: Key-value type configurations.
          type: string
      text:
        type: string
        description: Text type configuration.
      json:
        type: string
        description: JSON type configuration.
  ConfigContentReq:
    type: object
    description: Contents of a ConfigBlock.
    properties:
      keyValues:
        type: object
        description: Key-value type configurations.
        additionalProperties:
          description: Key-value type configurations.
          type: string
      text:
        type: string
        description: Text type configuration.
      json:
        type: string
        description: JSON type configuration.
  StringDiff:
    type: object
    description: Difference between two strings.
    required:
      - from
      - to
    properties:
      from:
        type: string
        description: The old value.
      to:
        type: string
        description: The new value.
  KeyValuesDiff:
    type: object
    description: Different between keyValues of two ConfigContents.
    properties:
      added:
        type: object
        description: Keys that are only present in the new configuration.
        additionalProperties:
          type: string
          description: Keys that are only present in the new configuration.
      removed:
        type: object
        description: Keys that are only present in the old configuration.
        additionalProperties:
          type: string
          description: Keys that are only present in the old configuration.
      same:
        type: object
        description: Keys that are present in both configurations.
        additionalProperties:
          description: Keys that are present in both configurations.
          type: string
      changed:
        type: object
        description: Keys with different values.
        additionalProperties:
          description: Keys with different values.
          $ref: '#/definitions/StringDiff'
  VizConfig:
    type: object
    description: Configurations for a Cloudera Data Visualization
    properties:
      userGroups:
        type: array
        items:
          type: string
        description: User groups to allow user access to Data Visualization for selected users
      adminGroups:
        type: array
        items:
          type: string
        description: Admin groups to allow configuration access to Data Visualization for selected users
  ConfigContentDiff:
    type: object
    description: Difference between two ConfigContents.
    properties:
      keyValues:
        description: Different between keyValues of two ConfigContents.
        $ref: '#/definitions/KeyValuesDiff'
  ConfigBlockResp:
    type: object
    description: A piece of configuration stored in the same place (e.g. same file or environment variables).
    properties:
      id:
        type: string
        description: ID of the ConfigBlock. Unique within an ApplicationConfig.
      format:
        type: string
        description: Format of ConfigBlock.
        enum:
          - HADOOP_XML
          - PROPERTIES
          - TEXT
          - JSON
          - BINARY
          - ENV
          - FLAGFILE
      content:
        description: Contents of a ConfigBlock.
        $ref: '#/definitions/ConfigContentResp'
  ConfigBlockReq:
    type: object
    description: A piece of configuration stored in the same place (e.g. same file or environment variables).
    required:
      - id
      - format
      - content
    properties:
      id:
        type: string
        description: ID of the ConfigBlock. Unique within an ApplicationConfig.
      format:
        type: string
        description: Format of ConfigBlock.
        enum:
          - HADOOP_XML
          - PROPERTIES
          - TEXT
          - JSON
          - BINARY
          - ENV
          - FLAGFILE
      content:
        description: Contents of a ConfigBlock.
        $ref: '#/definitions/ConfigContentReq'
  ConfigBlockDiff:
    type: object
    description: Differences between two ConfigBlocks.
    properties:
      id:
        type: string
        description: ID of the ConfigBlock.
      contentDiff:
        description: Differences between the contents.
        $ref: '#/definitions/ConfigContentDiff'
  ConfigBlocksDiffs:
    type: object
    description: Differences between two sets of ConfigBlocks.
    required:
      - isChanged
    properties:
      isChanged:
        type: boolean
        description: Has any of the config blocks changed?
      added:
        type: array
        description: Config blocks that are only present in the new configuration.
        items:
          $ref: '#/definitions/ConfigBlockResp'
      removed:
        type: array
        description: Config blocks that are only present in the old configuration.
        items:
          $ref: '#/definitions/ConfigBlockResp'
      same:
        type: array
        description: Config blocks that are the same in both configurations.
        items:
          $ref: '#/definitions/ConfigBlockResp'
      changed:
        type: array
        description: Config blocks that are different between the two configurations.
        items:
          $ref: '#/definitions/ConfigBlockDiff'
  ApplicationConfigResp:
    type: object
    description: Configurations for an application inside a service.
    properties:
      configBlocks:
        type: array
        description: List of ConfigBlocks for the application.
        items:
          $ref: '#/definitions/ConfigBlockResp'
  ApplicationConfigReq:
    type: object
    description: Configurations for an application inside a service.
    properties:
      configBlocks:
        type: array
        description: List of ConfigBlocks for the application.
        items:
          $ref: '#/definitions/ConfigBlockReq'
  ApplicationConfigDiff:
    type: object
    description: Differences between two ApplicationConfigs.
    required:
      - isChanged
    properties:
      isChanged:
        type: boolean
        description: Has any of the configurations changed?
      configBlocksDiffs:
        description: Differences between the two sets of ConfigBlocks.
        $ref: '#/definitions/ConfigBlocksDiffs'
  ServiceConfigResp:
    type: object
    description: Configurations for a service (DBC or VW)
    properties:
      commonConfigs:
        description: Configurations that are applied to every application in the service.
        $ref: '#/definitions/ApplicationConfigResp'
      applicationConfigs:
        type: object
        description: Application specific configurations.
        additionalProperties:
          description: Application specific configurations.
          $ref: '#/definitions/ApplicationConfigResp'
      ldapGroups:
        type: array
        items:
          type: string
        description: List of LDAP Groupnames to be enabled for auth.
      enableSSO:
        type: boolean
        description: Should SSO be enabled for this VW. This cannot be changed later.
  ServiceConfigReq:
    type: object
    description: Configurations for a service (DBC or VW)
    properties:
      commonConfigs:
        description: Configurations that are applied to every application in the service.
        $ref: '#/definitions/ApplicationConfigReq'
      applicationConfigs:
        type: object
        description: Application specific configurations.
        additionalProperties:
          description: Application specific configurations.
          $ref: '#/definitions/ApplicationConfigReq'
      ldapGroups:
        type: array
        items:
          type: string
        description: LDAP Groupnames to be enabled for auth.
      enableSSO:
        type: boolean
        description: Should SSO be enabled for this VW.
  ServiceConfigDiff:
    type: object
    description: Differences between two service configurations.
    properties:
      isChanged:
        type: boolean
        description: Has any of the configurations changed?
      commonConfigsDiff:
        description: Differences between the common configurations.
        $ref: '#/definitions/ApplicationConfigDiff'
      applicationConfigsDiffs:
        type: object
        description: Differences between the application specific configurations.
        additionalProperties:
          description: Differences between the application specific configurations.
          $ref: '#/definitions/ApplicationConfigDiff'
  StartVwRequest:
    type: object
    description: The request object for the startVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: The ID of the Virtual Warehouse cluster.
      vwId:
        type: string
        description: The ID of the Virtual Warehouse.
  StartVwResponse:
    type: object
    description: The response object for the startVw method.
  SuspendVwRequest:
    type: object
    description: The request object for the suspendVw method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: The ID of the Virtual Warehouse cluster.
      vwId:
        type: string
        description: The ID of the Virtual Warehouse to suspend.
  SuspendVwResponse:
    type: object
    description: The response object for the suspendVw method.
  AddUserRequest:
    type: object
    description: Request object for the addUser method.
    required:
      - clusterId
      - userId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster to which the user must be added.
      userId:
        type: string
        description: A cloud based unique identifier of the user (ARN for AWS users, groupId for Azure users).
  AddUserResponse:
    type: object
    description: Response object for the addUser method.
  DeleteUserRequest:
    type: object
    description: Request object for the deleteUser method.
    required:
      - clusterId
      - userId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster from which the user must be deleted.
      userId:
        type: string
        description: A cloud based unique identifier of the user (ARN for AWS users, groupId for Azure users).
  DeleteUserResponse:
    type: object
    description: Response object for the deleteUser method.
  ListUsersRequest:
    type: object
    description: Request object for the listUsers method.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster for which the users must be retrieved.
  ListUsersResponse:
    type: object
    description: Response object for the listUsers method.
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/CloudUserReference'
        description: The list of users allowed to access the given cluster.
  CloudUserReference:
    type: object
    description: Cloud user definition object.
    required:
      - userId
    properties:
      userId:
        type: string
        description: A cloud based unique identifier of the user (ARN for AWS users, groupId for Azure users).
  ListLatestVersionsResponse:
    type: object
    description: Response object of the listLatestVersions call.
    properties:
      idToLatestVersionsMap:
        type: object
        description: Map containing the latest image versions for each Virtual Warehouse found in the cluster.
        additionalProperties:
          type: string
  ListLatestVersionsRequest:
    type: object
    description: Request object of the listLatestVersions call.
    required:
      - clusterId
    properties:
      clusterId:
        type: string
        description: The ID of the cluster from which the version information must be collected.
  UpgradeDbcRequest:
    type: object
    description: Request object for the upgradeDbc method.
    required:
      - clusterId
      - dbcId
      - imageVersion
    properties:
      clusterId:
        type: string
        description: The ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: The ID of the Database Catalog.
      imageVersion:
        type: string
        description: The version to which the Database Catalog should be upgraded.
  UpgradeDbcResponse:
    type: object
    description: Response object of the upgradeDbc call.
    properties:
      status:
        type: string
        description: 'The upgrade status. Possible values are: Upgrading, Error, Failed.'
      message:
        type: string
        description: The Upgrade message.
      timedOut:
        type: boolean
        description: True if the upgrade timed out, false or omitted otherwise.
      serviceUnhealthy:
        type: boolean
        description: True, if the service is in unhealthy state, false or omitted otherwise.
  UpgradeVwRequest:
    type: object
    description: Request object for the upgradeVw method.
    required:
      - clusterId
      - vwId
      - dbcId
      - imageVersion
    properties:
      clusterId:
        type: string
        description: The ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: The ID of the Virtual Warehouse.
      dbcId:
        type: string
        description: The ID of Database Catalog that the Virtual Warehouse is attached to.
      imageVersion:
        type: string
        description: The version to which the Virtual Warehouse should be upgraded.
  UpgradeVwResponse:
    type: object
    description: Response object for the upgradeVw method.
    properties:
      status:
        type: string
        description: 'The upgrade status. Possible values are: Upgrading, Error, Failed.'
      message:
        type: string
        description: The upgrade message.
      timedOut:
        type: boolean
        description: True if the upgrade timed out, false or omitted otherwise.
      serviceUnhealthy:
        type: boolean
        description: True, if the service is in unhealthy state, false or omitted otherwise.
  GetUpgradeVwVersionsRequest:
    type: object
    description: Request object for the getUpgradeVwVersions method.
    required:
      - clusterId
      - vwId
    properties:
      clusterId:
        type: string
        description: The ID of the Virtual Warehouse's cluster.
      vwId:
        type: string
        description: The ID of the Virtual Warehouse.
  GetUpgradeVwVersionsResponse:
    type: object
    description: Response object for the getUpgradeVwVersions method.
    properties:
      latestVersion:
        type: string
        description: The latest available CDW version.
      compatibleVersion:
        type: string
        description: The latest compatible CDW version.
      latestCDPVersion:
        type: string
        description: The latest available CDP version.
      compatibleCDPVersion:
        type: string
        description: The latest compatible CDP version.
  GetUpgradeDbcVersionsRequest:
    type: object
    description: Request object for the getUpgradeDbcVersions method.
    required:
      - clusterId
      - dbcId
    properties:
      clusterId:
        type: string
        description: The ID of the Database Catalog's cluster.
      dbcId:
        type: string
        description: The ID of the Database Catalog.
  GetUpgradeDbcVersionsResponse:
    type: object
    description: Response object for the getUpgradeDbcVersions method.
    properties:
      latestVersion:
        type: string
        description: The latest available CDW version.
      compatibleVersion:
        type: string
        description: The latest compatible CDW version.
      latestCDPVersion:
        type: string
        description: The latest available CDP version.
      compatibleCDPVersion:
        type: string
        description: The latest compatible CDP version.
  HealthCheckRequest:
    type: object
    description: Request object for the healthCheck method.
  HealthCheckResponse:
    type: object
    description: Response object for the healthCheck method.
    properties:
      message:
        type: string
        description: HealthCheck status text.
  CreateBackupRequest:
    type: object
    x-form-factors: private
    description: Request object for the create backup request.
    properties:
      backupName:
        type: string
        description: Specified name for the backup. If not set, the name will be blank.
      namespaceName:
        type: string
        description: Namespace of the potential candidate for backup. If not set, all of the Data Warehouse namespaces will be backed up.
  CreateBackupResponse:
    type: object
    x-form-factors: private
    description: Response object for the create backup request.
    required:
      - backupCrn
    properties:
      backupCrn:
        type: string
        description: The CRN the backup.
  DeleteBackupRequest:
    type: object
    x-form-factors: private
    description: Request object for the delete backup request.
    required:
      - backupCrn
    properties:
      backupCrn:
        type: string
        description: The CRN of the backup.
  DeleteBackupResponse:
    type: object
    x-form-factors: private
    description: Response object for the delete backup request.
    required:
      - deleteBackupCrn
    properties:
      deleteBackupCrn:
        type: string
        description: The CRN of the delete backup custom resource.
  DescribeBackupRequest:
    type: object
    x-form-factors: private
    description: Request object for the describe backup request.
    required:
      - backupCrn
    properties:
      backupCrn:
        type: string
        description: The CRN of the backup.
  DescribeBackupResponse:
    type: object
    x-form-factors: private
    description: Response object for the describe backup request.
    required:
      - backup
    properties:
      backup:
        $ref: '#/definitions/Backup'
        description: The backup details.
  ListBackupsRequest:
    type: object
    x-form-factors: private
    description: Request object for the list backups request.
    properties:
      backupName:
        type: string
        description: Specified name for the backup. If not present, this filter is not used.
      jobStates:
        type: array
        items:
          type: string
        description: The job states we need to filter by. If not present, this filter is not used.
  ListBackupsResponse:
    type: object
    x-form-factors: private
    description: Response object for the list backups request.
    required:
      - backups
    properties:
      backups:
        type: array
        description: List of backups.
        items:
          $ref: '#/definitions/SimpleBackup'
  Message:
    type: object
    x-form-factors: private
    description: The message object used to display warnings and errors during DRS workflows
    properties:
      text:
        type: string
        description: The text message of the warning/error.
      timestamp:
        type: string
        description: The time when the warning/error is hit.
      namespace:
        type: string
        description: The namespace that has the warning/error.
  SimpleBackup:
    type: object
    x-form-factors: private
    description: A simple backup entry for listBackup usage
    properties:
      backupCrn:
        type: string
        description: The CRN of the backup.
      backupName:
        type: string
        description: The display name of the backup.
      backupCreationTime:
        type: string
        description: The time when the backup was created.
  Backup:
    type: object
    x-form-factors: private
    description: Backup entry
    properties:
      backupCrn:
        type: string
        description: The CRN of the backup.
      backupCreationTime:
        type: string
        description: The time when the backup was created.
      backupName:
        type: string
        description: The display name of the backup.
      backupUpdatedTime:
        type: string
        description: The time when the backup was updated.
      backupPhase:
        type: string
        description: The phase of the backup operation.
      backupJobState:
        type: string
        description: The current state of the backup job.
      backupJob:
        type: string
        description: The backup job name.
      includedNamespaces:
        type: array
        description: The list of namespaces to be included in backup.
        items:
          type: string
      warnings:
        type: array
        description: The warnings from backup job.
        items:
          $ref: '#/definitions/Message'
      errors:
        type: array
        description: The errors from backup job.
        items:
          $ref: '#/definitions/Message'
  RestoreBackupRequest:
    type: object
    x-form-factors: private
    description: Request object for the restore backup request.
    required:
      - backupCrn
    properties:
      backupCrn:
        type: string
        description: The CRN of the backup.
      namespaceNames:
        type: array
        description: A list of namespaces of the potential candidates for restore. If not set, all of the Data Warehouse namespaces within the backup CRN will be restored.
        items:
          type: string
  RestoreBackupResponse:
    type: object
    x-form-factors: private
    description: Response object for the restore backup request.
    required:
      - restoreCrn
    properties:
      restoreCrn:
        type: string
        description: The CRN of the restore.
  DescribeRestoreRequest:
    type: object
    x-form-factors: private
    description: Request object for the describe restore request.
    required:
      - restoreCrn
    properties:
      restoreCrn:
        type: string
        description: The CRN of the restore.
  DescribeRestoreResponse:
    type: object
    x-form-factors: private
    description: Response object for the describe restore request.
    required:
      - restore
    properties:
      restore:
        $ref: '#/definitions/Restore'
        description: The restore details.
  ListRestoresRequest:
    type: object
    x-form-factors: private
    description: Request object for the list restores request.
    properties:
      jobStates:
        type: array
        items:
          type: string
        description: The job states to filter by.
      backupCrn:
        type: string
        description: CRN of the backup.
  ListRestoresResponse:
    type: object
    x-form-factors: private
    description: Response object for the list restores request.
    required:
      - restores
    properties:
      restores:
        type: array
        description: List of restores for the control plane.
        items:
          $ref: '#/definitions/SimpleRestore'
  SimpleRestore:
    type: object
    x-form-factors: private
    description: A simple Restore entry for listRestore Usage
    properties:
      restoreCrn:
        type: string
        description: The CRN of the restore.
      backupCrn:
        type: string
        description: The CRN of the backup.
      restoreCreationTime:
        type: string
        description: The time when the restore was created.
      includedNamespaces:
        type: array
        description: The list of namespaces to be included in restore.
        items:
          type: string
  Restore:
    type: object
    x-form-factors: private
    description: Restore entry
    properties:
      restoreCrn:
        type: string
        description: The CRN of the restore.
      backupCrn:
        type: string
        description: The CRN of the backup.
      restoreCreationTime:
        type: string
        description: The time when the restore was created.
      restoreUpdatedTime:
        type: string
        description: The updated time of the restore.
      excludedResources:
        type: array
        description: The list of resources to be excluded in restore.
        items:
          type: string
      includedNamespaces:
        type: array
        description: The list of namespaces to be included in restore.
        items:
          type: string
      successConditions:
        type: array
        description: The list of conditions to be met for a successful restore.
        items:
          type: string
      restorePhase:
        type: string
        description: The phase of the restore operation.
      restoreJobState:
        type: string
        description: The current state of the restore job.
      restoreJob:
        type: string
        description: The restore job name.
      warnings:
        type: array
        description: The warnings from restore job.
        items:
          $ref: '#/definitions/Message'
      errors:
        type: array
        description: The errors from restore job.
        items:
          $ref: '#/definitions/Message'
  GetLogsRequest:
    type: object
    x-form-factors: private
    description: Request object for the get logs request.
    required:
      - crn
    properties:
      crn:
        type: string
        description: The CRN of the backup, restore or backup deletion.
  GetLogsResponse:
    type: object
    x-form-factors: private
    description: Response object for the get logs request.
    required:
      - logs
    properties:
      logs:
        type: string
        description: Contains the logs of the operation.
        x-skip-logging: true
  ListBackupEntitiesRequest:
    type: object
    x-form-factors: private
    description: Request object for the list backup entities request.
  ListBackupEntitiesResponse:
    type: object
    x-form-factors: private
    description: Response object for the list backup entities request.
    required:
      - items
    properties:
      items:
        type: array
        description: A list of available namespaces for backup, corresponding to the CDW entities.
        items:
          type: string
x-audit: true
